{
	"info": {
		"_postman_id": "10d0a13d-e37d-4d1a-89ed-1b903b56a89e",
		"name": "UK OBIE-v4.0(2024.08.14-0930)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25588140",
		"_collection_link": "https://planetary-station-429607.postman.co/workspace/OBIE~adf683c6-587a-4fa3-be3d-b4184d583b24/collection/25588140-10d0a13d-e37d-4d1a-89ed-1b903b56a89e?action=share&source=collection_link&creator=25588140"
	},
	"item": [
		{
			"name": "Ozone Helpers",
			"item": [
				{
					"name": "postman",
					"item": [
						{
							"name": "GET postman environment",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									}
								],
								"url": {
									"raw": "{{rs}}/ozone/v1.0/postman/environment",
									"host": [
										"{{rs}}"
									],
									"path": [
										"ozone",
										"v1.0",
										"postman",
										"environment"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET postman collection",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{rs}}/ozone/v1.0/postman/collection",
									"host": [
										"{{rs}}"
									],
									"path": [
										"ozone",
										"v1.0",
										"postman",
										"collection"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "audit-logs",
					"item": [
						{
							"name": "GET audit-logs",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									}
								],
								"url": {
									"raw": "{{rs}}/ozone/v1.0/audit-log/{{interactionId}}",
									"host": [
										"{{rs}}"
									],
									"path": [
										"ozone",
										"v1.0",
										"audit-log",
										"{{interactionId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "auth-code-url",
					"item": [
						{
							"name": "GET auth-code-url",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									}
								],
								"url": {
									"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}",
									"host": [
										"{{rs}}"
									],
									"path": [
										"o3",
										"v1.0",
										"auth-code-url",
										"{{intent-id}}"
									],
									"query": [
										{
											"key": "scope",
											"value": "{{request-scope}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "multi-auth",
					"item": [
						{
							"name": "GET multi-auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"// postman.setEnvironmentVariable(\"payment-submission-id\", jsonData.Data.PaymentSubmissionId);",
											"",
											"postman.setEnvironmentVariable(\"multi-auth-url\", jsonData.uris[0]);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									}
								],
								"url": {
									"raw": "{{rs}}/ozone/v1.0/multi-auth/{{payment-type}}/{{payment-id}}",
									"host": [
										"{{rs}}"
									],
									"path": [
										"ozone",
										"v1.0",
										"multi-auth",
										"{{payment-type}}",
										"{{payment-id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST multi-auth",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{multi-auth-url}}",
									"host": [
										"{{multi-auth-url}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "experimental",
					"item": [
						{
							"name": "MTLS (no termination)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-accounts\", jsonData.access_token);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "accounts openid",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "2aefcd51-6cfe-44d5-abb8-472bcc8ffe9b",
											"type": "text"
										},
										{
											"key": "x-cert-dn",
											"value": "xxxx",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{tokenEndpoint}}",
									"host": [
										"{{tokenEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "MTLS",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-accounts\", jsonData.access_token);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "accounts openid",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "2aefcd51-6cfe-44d5-abb8-472bcc8ffe9b",
											"type": "text"
										},
										{
											"key": "x-cert-dn",
											"value": "xxxx",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{tokenEndpoint}}",
									"host": [
										"{{tokenEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET auth-code-url",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
											""
										]
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									}
								],
								"url": {
									"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}",
									"host": [
										"{{rs}}"
									],
									"path": [
										"o3",
										"v1.0",
										"auth-code-url",
										"{{intent-id}}"
									],
									"query": [
										{
											"key": "scope",
											"value": "{{request-scope}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "clients",
					"item": [
						{
							"name": "clients",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									}
								],
								"url": {
									"raw": "{{rs}}/ozone/v1.0/clients",
									"host": [
										"{{rs}}"
									],
									"path": [
										"ozone",
										"v1.0",
										"clients"
									]
								}
							},
							"response": [
								{
									"name": "GET postman environment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/ozone/v1.0/postman/environment",
											"host": [
												"{{rs}}"
											],
											"path": [
												"ozone",
												"v1.0",
												"postman",
												"environment"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "2621",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 28 Sep 2018 13:36:57 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "ETag",
											"value": "W/\"a3d-hVCWa0ZvZO0AqMjHyCIm1AZL9z0\"",
											"name": "ETag",
											"description": "An identifier for a specific version of a resource, often a message digest"
										},
										{
											"key": "X-Powered-By",
											"value": "Express",
											"name": "X-Powered-By",
											"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
										}
									],
									"cookie": [],
									"body": "{\"id\":\"8c9f3d2e-ce38-46c5-893d-3467a1649db0\",\"name\":\"2aefcd51-6cfe-44d5-abb8-472bcc8ffe9b\",\"version\":\"build-33\",\"user\":{\"displayName\":\"Freddi Gyara\",\"name\":{\"familyName\":\"Gyara\",\"givenName\":\"Freddi\"},\"picture\":\"https://lh5.googleusercontent.com/-hXOuEQI516g/AAAAAAAAAAI/AAAAAAAABAQ/BUxD1VziVOc/photo.jpg\",\"locale\":\"en-GB\",\"nickname\":\"fgyara\",\"gender\":\"other\",\"_json\":{\"sub\":\"google-oauth2|107076962862225332115\",\"given_name\":\"Freddi\",\"family_name\":\"Gyara\",\"nickname\":\"fgyara\",\"name\":\"Freddi Gyara\",\"picture\":\"https://lh5.googleusercontent.com/-hXOuEQI516g/AAAAAAAAAAI/AAAAAAAABAQ/BUxD1VziVOc/photo.jpg\",\"gender\":\"other\",\"locale\":\"en-GB\",\"updated_at\":\"2018-08-27T14:39:57.677Z\",\"http://auth0/roles\":[\"aspspadmin\",\"baseuser\",\"o3admin\",\"orgadmin\"],\"http://mynamespace/hello\":\"world\"},\"_raw\":\"{\\\"sub\\\":\\\"google-oauth2|107076962862225332115\\\",\\\"given_name\\\":\\\"Freddi\\\",\\\"family_name\\\":\\\"Gyara\\\",\\\"nickname\\\":\\\"fgyara\\\",\\\"name\\\":\\\"Freddi Gyara\\\",\\\"picture\\\":\\\"https://lh5.googleusercontent.com/-hXOuEQI516g/AAAAAAAAAAI/AAAAAAAABAQ/BUxD1VziVOc/photo.jpg\\\",\\\"gender\\\":\\\"other\\\",\\\"locale\\\":\\\"en-GB\\\",\\\"updated_at\\\":\\\"2018-08-27T14:39:57.677Z\\\",\\\"http://auth0/roles\\\":[\\\"aspspadmin\\\",\\\"baseuser\\\",\\\"o3admin\\\",\\\"orgadmin\\\"],\\\"http://mynamespace/hello\\\":\\\"world\\\"}\",\"foo\":\"bar\"},\"values\":[{\"enabled\":true,\"key\":\"resourceServer\",\"value\":\"http://localhost:3102/open-banking/v1.1\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"rs\",\"value\":\"http://localhost:3102\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"resourceServerV20\",\"value\":\"http://localhost:3102/open-banking/v2.0\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"rs\",\"value\":\"http://localhost:3102\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"obParticipantId\",\"value\":\"4iZQesHhScgRdgnWwE\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"oidcClient\",\"value\":\"2aefcd51-6cfe-44d5-abb8-472bcc8ffe9b\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"basicToken\",\"value\":\"MmFlZmNkNTEtNmNmZS00NGQ1LWFiYjgtNDcyYmNjOGZmZTliOmFkMmJmOTNiLWI5OGUtNDVmYi04YjhkLWUxYzRmMDBlZTU4MA==\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"dummyBaseUrl\",\"value\":\"x-open-banking/v1.1\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"tokenEndpoint\",\"value\":\"http://localhost:3502/token\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"authEndpoint\",\"value\":\"http://localhost:3602/auth\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"configEndpoint\",\"value\":\"http://localhost:3602/.well-known/openid-configuration\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"redirectUrl\",\"value\":\"http://localhost:3602/simple-redirect-url\",\"type\":\"text\"}],\"timestamp\":1538141817274,\"_postman_variable_scope\":\"environment\",\"_postman_exported_at\":\"2018-09-28T13:36:57.274Z\",\"_postman_exported_using\":\"Postman/5.3.2\"}"
								}
							]
						},
						{
							"name": "GET client for given clientId",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									}
								],
								"url": {
									"raw": "{{rs}}/ozone/v1.0/client/{{oidcClient}}",
									"host": [
										"{{rs}}"
									],
									"path": [
										"ozone",
										"v1.0",
										"client",
										"{{oidcClient}}"
									]
								}
							},
							"response": [
								{
									"name": "GET postman environment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/ozone/v1.0/postman/environment",
											"host": [
												"{{rs}}"
											],
											"path": [
												"ozone",
												"v1.0",
												"postman",
												"environment"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "2621",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 28 Sep 2018 13:36:57 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "ETag",
											"value": "W/\"a3d-hVCWa0ZvZO0AqMjHyCIm1AZL9z0\"",
											"name": "ETag",
											"description": "An identifier for a specific version of a resource, often a message digest"
										},
										{
											"key": "X-Powered-By",
											"value": "Express",
											"name": "X-Powered-By",
											"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
										}
									],
									"cookie": [],
									"body": "{\"id\":\"8c9f3d2e-ce38-46c5-893d-3467a1649db0\",\"name\":\"2aefcd51-6cfe-44d5-abb8-472bcc8ffe9b\",\"version\":\"build-33\",\"user\":{\"displayName\":\"Freddi Gyara\",\"name\":{\"familyName\":\"Gyara\",\"givenName\":\"Freddi\"},\"picture\":\"https://lh5.googleusercontent.com/-hXOuEQI516g/AAAAAAAAAAI/AAAAAAAABAQ/BUxD1VziVOc/photo.jpg\",\"locale\":\"en-GB\",\"nickname\":\"fgyara\",\"gender\":\"other\",\"_json\":{\"sub\":\"google-oauth2|107076962862225332115\",\"given_name\":\"Freddi\",\"family_name\":\"Gyara\",\"nickname\":\"fgyara\",\"name\":\"Freddi Gyara\",\"picture\":\"https://lh5.googleusercontent.com/-hXOuEQI516g/AAAAAAAAAAI/AAAAAAAABAQ/BUxD1VziVOc/photo.jpg\",\"gender\":\"other\",\"locale\":\"en-GB\",\"updated_at\":\"2018-08-27T14:39:57.677Z\",\"http://auth0/roles\":[\"aspspadmin\",\"baseuser\",\"o3admin\",\"orgadmin\"],\"http://mynamespace/hello\":\"world\"},\"_raw\":\"{\\\"sub\\\":\\\"google-oauth2|107076962862225332115\\\",\\\"given_name\\\":\\\"Freddi\\\",\\\"family_name\\\":\\\"Gyara\\\",\\\"nickname\\\":\\\"fgyara\\\",\\\"name\\\":\\\"Freddi Gyara\\\",\\\"picture\\\":\\\"https://lh5.googleusercontent.com/-hXOuEQI516g/AAAAAAAAAAI/AAAAAAAABAQ/BUxD1VziVOc/photo.jpg\\\",\\\"gender\\\":\\\"other\\\",\\\"locale\\\":\\\"en-GB\\\",\\\"updated_at\\\":\\\"2018-08-27T14:39:57.677Z\\\",\\\"http://auth0/roles\\\":[\\\"aspspadmin\\\",\\\"baseuser\\\",\\\"o3admin\\\",\\\"orgadmin\\\"],\\\"http://mynamespace/hello\\\":\\\"world\\\"}\",\"foo\":\"bar\"},\"values\":[{\"enabled\":true,\"key\":\"resourceServer\",\"value\":\"http://localhost:3102/open-banking/v1.1\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"rs\",\"value\":\"http://localhost:3102\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"resourceServerV20\",\"value\":\"http://localhost:3102/open-banking/v2.0\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"rs\",\"value\":\"http://localhost:3102\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"obParticipantId\",\"value\":\"4iZQesHhScgRdgnWwE\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"oidcClient\",\"value\":\"2aefcd51-6cfe-44d5-abb8-472bcc8ffe9b\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"basicToken\",\"value\":\"MmFlZmNkNTEtNmNmZS00NGQ1LWFiYjgtNDcyYmNjOGZmZTliOmFkMmJmOTNiLWI5OGUtNDVmYi04YjhkLWUxYzRmMDBlZTU4MA==\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"dummyBaseUrl\",\"value\":\"x-open-banking/v1.1\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"tokenEndpoint\",\"value\":\"http://localhost:3502/token\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"authEndpoint\",\"value\":\"http://localhost:3602/auth\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"configEndpoint\",\"value\":\"http://localhost:3602/.well-known/openid-configuration\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"redirectUrl\",\"value\":\"http://localhost:3602/simple-redirect-url\",\"type\":\"text\"}],\"timestamp\":1538141817274,\"_postman_variable_scope\":\"environment\",\"_postman_exported_at\":\"2018-09-28T13:36:57.274Z\",\"_postman_exported_using\":\"Postman/5.3.2\"}"
								}
							]
						},
						{
							"name": "DELETE client for given id",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{rs}}/ozone/v1.0/client/{{oidcClient}}<safety latch on>",
									"host": [
										"{{rs}}"
									],
									"path": [
										"ozone",
										"v1.0",
										"client",
										"{{oidcClient}}<safety latch on>"
									]
								}
							},
							"response": [
								{
									"name": "GET postman environment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/ozone/v1.0/postman/environment",
											"host": [
												"{{rs}}"
											],
											"path": [
												"ozone",
												"v1.0",
												"postman",
												"environment"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "2621",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 28 Sep 2018 13:36:57 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "ETag",
											"value": "W/\"a3d-hVCWa0ZvZO0AqMjHyCIm1AZL9z0\"",
											"name": "ETag",
											"description": "An identifier for a specific version of a resource, often a message digest"
										},
										{
											"key": "X-Powered-By",
											"value": "Express",
											"name": "X-Powered-By",
											"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
										}
									],
									"cookie": [],
									"body": "{\"id\":\"8c9f3d2e-ce38-46c5-893d-3467a1649db0\",\"name\":\"2aefcd51-6cfe-44d5-abb8-472bcc8ffe9b\",\"version\":\"build-33\",\"user\":{\"displayName\":\"Freddi Gyara\",\"name\":{\"familyName\":\"Gyara\",\"givenName\":\"Freddi\"},\"picture\":\"https://lh5.googleusercontent.com/-hXOuEQI516g/AAAAAAAAAAI/AAAAAAAABAQ/BUxD1VziVOc/photo.jpg\",\"locale\":\"en-GB\",\"nickname\":\"fgyara\",\"gender\":\"other\",\"_json\":{\"sub\":\"google-oauth2|107076962862225332115\",\"given_name\":\"Freddi\",\"family_name\":\"Gyara\",\"nickname\":\"fgyara\",\"name\":\"Freddi Gyara\",\"picture\":\"https://lh5.googleusercontent.com/-hXOuEQI516g/AAAAAAAAAAI/AAAAAAAABAQ/BUxD1VziVOc/photo.jpg\",\"gender\":\"other\",\"locale\":\"en-GB\",\"updated_at\":\"2018-08-27T14:39:57.677Z\",\"http://auth0/roles\":[\"aspspadmin\",\"baseuser\",\"o3admin\",\"orgadmin\"],\"http://mynamespace/hello\":\"world\"},\"_raw\":\"{\\\"sub\\\":\\\"google-oauth2|107076962862225332115\\\",\\\"given_name\\\":\\\"Freddi\\\",\\\"family_name\\\":\\\"Gyara\\\",\\\"nickname\\\":\\\"fgyara\\\",\\\"name\\\":\\\"Freddi Gyara\\\",\\\"picture\\\":\\\"https://lh5.googleusercontent.com/-hXOuEQI516g/AAAAAAAAAAI/AAAAAAAABAQ/BUxD1VziVOc/photo.jpg\\\",\\\"gender\\\":\\\"other\\\",\\\"locale\\\":\\\"en-GB\\\",\\\"updated_at\\\":\\\"2018-08-27T14:39:57.677Z\\\",\\\"http://auth0/roles\\\":[\\\"aspspadmin\\\",\\\"baseuser\\\",\\\"o3admin\\\",\\\"orgadmin\\\"],\\\"http://mynamespace/hello\\\":\\\"world\\\"}\",\"foo\":\"bar\"},\"values\":[{\"enabled\":true,\"key\":\"resourceServer\",\"value\":\"http://localhost:3102/open-banking/v1.1\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"rs\",\"value\":\"http://localhost:3102\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"resourceServerV20\",\"value\":\"http://localhost:3102/open-banking/v2.0\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"rs\",\"value\":\"http://localhost:3102\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"obParticipantId\",\"value\":\"4iZQesHhScgRdgnWwE\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"oidcClient\",\"value\":\"2aefcd51-6cfe-44d5-abb8-472bcc8ffe9b\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"basicToken\",\"value\":\"MmFlZmNkNTEtNmNmZS00NGQ1LWFiYjgtNDcyYmNjOGZmZTliOmFkMmJmOTNiLWI5OGUtNDVmYi04YjhkLWUxYzRmMDBlZTU4MA==\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"dummyBaseUrl\",\"value\":\"x-open-banking/v1.1\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"tokenEndpoint\",\"value\":\"http://localhost:3502/token\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"authEndpoint\",\"value\":\"http://localhost:3602/auth\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"configEndpoint\",\"value\":\"http://localhost:3602/.well-known/openid-configuration\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"redirectUrl\",\"value\":\"http://localhost:3602/simple-redirect-url\",\"type\":\"text\"}],\"timestamp\":1538141817274,\"_postman_variable_scope\":\"environment\",\"_postman_exported_at\":\"2018-09-28T13:36:57.274Z\",\"_postman_exported_using\":\"Postman/5.3.2\"}"
								}
							]
						}
					]
				},
				{
					"name": "redirect uri update",
					"item": [
						{
							"name": "redirect url update",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "redirectURL",
											"value": "https://google.com",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{rs}}/ozone/v1.0/redirect-url-update",
									"host": [
										"{{rs}}"
									],
									"path": [
										"ozone",
										"v1.0",
										"redirect-url-update"
									]
								}
							},
							"response": [
								{
									"name": "GET postman environment",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/ozone/v1.0/postman/environment",
											"host": [
												"{{rs}}"
											],
											"path": [
												"ozone",
												"v1.0",
												"postman",
												"environment"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Connection",
											"value": "keep-alive",
											"name": "Connection",
											"description": "Options that are desired for the connection"
										},
										{
											"key": "Content-Length",
											"value": "2621",
											"name": "Content-Length",
											"description": "The length of the response body in octets (8-bit bytes)"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8",
											"name": "Content-Type",
											"description": "The mime type of this content"
										},
										{
											"key": "Date",
											"value": "Fri, 28 Sep 2018 13:36:57 GMT",
											"name": "Date",
											"description": "The date and time that the message was sent"
										},
										{
											"key": "ETag",
											"value": "W/\"a3d-hVCWa0ZvZO0AqMjHyCIm1AZL9z0\"",
											"name": "ETag",
											"description": "An identifier for a specific version of a resource, often a message digest"
										},
										{
											"key": "X-Powered-By",
											"value": "Express",
											"name": "X-Powered-By",
											"description": "Specifies the technology (ASP.NET, PHP, JBoss, e.g.) supporting the web application (version details are often in X-Runtime, X-Version, or X-AspNet-Version)"
										}
									],
									"cookie": [],
									"body": "{\"id\":\"8c9f3d2e-ce38-46c5-893d-3467a1649db0\",\"name\":\"2aefcd51-6cfe-44d5-abb8-472bcc8ffe9b\",\"version\":\"build-33\",\"user\":{\"displayName\":\"Freddi Gyara\",\"name\":{\"familyName\":\"Gyara\",\"givenName\":\"Freddi\"},\"picture\":\"https://lh5.googleusercontent.com/-hXOuEQI516g/AAAAAAAAAAI/AAAAAAAABAQ/BUxD1VziVOc/photo.jpg\",\"locale\":\"en-GB\",\"nickname\":\"fgyara\",\"gender\":\"other\",\"_json\":{\"sub\":\"google-oauth2|107076962862225332115\",\"given_name\":\"Freddi\",\"family_name\":\"Gyara\",\"nickname\":\"fgyara\",\"name\":\"Freddi Gyara\",\"picture\":\"https://lh5.googleusercontent.com/-hXOuEQI516g/AAAAAAAAAAI/AAAAAAAABAQ/BUxD1VziVOc/photo.jpg\",\"gender\":\"other\",\"locale\":\"en-GB\",\"updated_at\":\"2018-08-27T14:39:57.677Z\",\"http://auth0/roles\":[\"aspspadmin\",\"baseuser\",\"o3admin\",\"orgadmin\"],\"http://mynamespace/hello\":\"world\"},\"_raw\":\"{\\\"sub\\\":\\\"google-oauth2|107076962862225332115\\\",\\\"given_name\\\":\\\"Freddi\\\",\\\"family_name\\\":\\\"Gyara\\\",\\\"nickname\\\":\\\"fgyara\\\",\\\"name\\\":\\\"Freddi Gyara\\\",\\\"picture\\\":\\\"https://lh5.googleusercontent.com/-hXOuEQI516g/AAAAAAAAAAI/AAAAAAAABAQ/BUxD1VziVOc/photo.jpg\\\",\\\"gender\\\":\\\"other\\\",\\\"locale\\\":\\\"en-GB\\\",\\\"updated_at\\\":\\\"2018-08-27T14:39:57.677Z\\\",\\\"http://auth0/roles\\\":[\\\"aspspadmin\\\",\\\"baseuser\\\",\\\"o3admin\\\",\\\"orgadmin\\\"],\\\"http://mynamespace/hello\\\":\\\"world\\\"}\",\"foo\":\"bar\"},\"values\":[{\"enabled\":true,\"key\":\"resourceServer\",\"value\":\"http://localhost:3102/open-banking/v1.1\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"rs\",\"value\":\"http://localhost:3102\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"resourceServerV20\",\"value\":\"http://localhost:3102/open-banking/v2.0\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"rs\",\"value\":\"http://localhost:3102\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"obParticipantId\",\"value\":\"4iZQesHhScgRdgnWwE\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"oidcClient\",\"value\":\"2aefcd51-6cfe-44d5-abb8-472bcc8ffe9b\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"basicToken\",\"value\":\"MmFlZmNkNTEtNmNmZS00NGQ1LWFiYjgtNDcyYmNjOGZmZTliOmFkMmJmOTNiLWI5OGUtNDVmYi04YjhkLWUxYzRmMDBlZTU4MA==\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"dummyBaseUrl\",\"value\":\"x-open-banking/v1.1\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"tokenEndpoint\",\"value\":\"http://localhost:3502/token\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"authEndpoint\",\"value\":\"http://localhost:3602/auth\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"configEndpoint\",\"value\":\"http://localhost:3602/.well-known/openid-configuration\",\"type\":\"text\"},{\"enabled\":true,\"key\":\"redirectUrl\",\"value\":\"http://localhost:3602/simple-redirect-url\",\"type\":\"text\"}],\"timestamp\":1538141817274,\"_postman_variable_scope\":\"environment\",\"_postman_exported_at\":\"2018-09-28T13:36:57.274Z\",\"_postman_exported_using\":\"Postman/5.3.2\"}"
								}
							]
						}
					]
				},
				{
					"name": "app2app",
					"item": [
						{
							"name": "heimdall-api",
							"item": [
								{
									"name": "aspsps",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{issuer}}/aspsps",
											"host": [
												"{{issuer}}"
											],
											"path": [
												"aspsps"
											]
										}
									},
									"response": []
								},
								{
									"name": "register",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"device_id\", jsonData.data.device.deviceId);",
													"postman.setEnvironmentVariable(\"shortDeviceId\", jsonData.data.device.shortDeviceId);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Data\": {\n\t\t\"UserName\": \"mits\",\n\t\t\"Password\": \"mits\",\n\t\t\"DeviceToken\": \"c5IRGtxFKBc:APA91bGyAO9wRJTrPUQtvrmphj7Ok_46YpkDWWUGTJZSn6Lugo-PYaLYIQBaq__oBukDx1_vao5YvEKat2UqCtdUnnC7NW0AAUql073INuUmfjHrRE3G1m1JpMxI9kEJ94qEW6NT7AGW\"\n\t}\n}"
										},
										"url": {
											"raw": "{{issuer}}/register",
											"host": [
												"{{issuer}}"
											],
											"path": [
												"register"
											]
										}
									},
									"response": []
								},
								{
									"name": "customer",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic {{device_id}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Data\": {}\n}"
										},
										"url": {
											"raw": "{{issuer}}/customer",
											"host": [
												"{{issuer}}"
											],
											"path": [
												"customer"
											]
										}
									},
									"response": []
								},
								{
									"name": "accounts",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Basic {{device_id}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Data\": {}\n}"
										},
										"url": {
											"raw": "{{issuer}}/accounts",
											"host": [
												"{{issuer}}"
											],
											"path": [
												"accounts"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Auth-code Grant (get authorization code) (JSON)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"interactionId\", jsonData.interaction.interactionId);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{authCodeUrl}}",
									"host": [
										"{{authCodeUrl}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST login",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "loginName",
											"value": "mits",
											"type": "text"
										},
										{
											"key": "password",
											"value": "mits",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{authEndpoint}}/{{interactionId}}/doLogin",
									"host": [
										"{{authEndpoint}}"
									],
									"path": [
										"{{interactionId}}",
										"doLogin"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST confirmation (AAC)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "accounts",
											"value": "500004000000000000000002",
											"type": "text"
										},
										{
											"key": "accounts",
											"value": "500004000000000000000003",
											"type": "text"
										},
										{
											"key": "accounts",
											"value": "500004000000000000000005",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{authEndpoint}}/{{interactionId}}/aac/doConfirm",
									"host": [
										"{{authEndpoint}}"
									],
									"path": [
										"{{interactionId}}",
										"aac",
										"doConfirm"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST confirmation (SDP)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "500004000000000000000002",
											"type": "text"
										},
										{
											"key": "accounts",
											"value": "500004000000000000000003",
											"type": "text",
											"disabled": true
										},
										{
											"key": "accounts",
											"value": "500004000000000000000005",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{authEndpoint}}/{{interactionId}}/sdp/doConfirm",
									"host": [
										"{{authEndpoint}}"
									],
									"path": [
										"{{interactionId}}",
										"sdp",
										"doConfirm"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST confirmation (FCC)",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "account",
											"value": "500004000000000000000002",
											"type": "text",
											"disabled": true
										},
										{
											"key": "accounts",
											"value": "500004000000000000000003",
											"type": "text",
											"disabled": true
										},
										{
											"key": "accounts",
											"value": "500004000000000000000005",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{authEndpoint}}/{{interactionId}}/fcc/doConfirm",
									"host": [
										"{{authEndpoint}}"
									],
									"path": [
										"{{interactionId}}",
										"fcc",
										"doConfirm"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "demo",
					"item": [
						{
							"name": "GET hello",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "y",
										"value": "20"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Basic {{token-from-client-credentials-grant-accounts}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"PaymentId\": \"2000\",\n\t\"PayTo\": \"Nobody\"\n}"
								},
								"url": {
									"raw": "localhost:3105/ozone/v1.0/hello?x=1-",
									"host": [
										"localhost"
									],
									"port": "3105",
									"path": [
										"ozone",
										"v1.0",
										"hello"
									],
									"query": [
										{
											"key": "x",
											"value": "1-"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "consent manager",
					"item": [
						{
							"name": "POST  Consent manager ",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid'); ",
											"pm.environment.set(\"interactionId\", uuid.v4());",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"account-access-consent-id\", jsonData.consentBody.Data.ConsentId);",
											"postman.setEnvironmentVariable(\"request-scope\", 'accounts');",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-client-credentials-grant-accounts}}"
									},
									{
										"key": "x-fapi-customer-ip-address",
										"value": "Mon, 19 Oct 2018 08:51:49 GMT",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"consentType\" : \"account-access-consents\",\n    \"requestHeaders\" : {\n        \"content-type\" : \"application/json\",\n        \"x-fapi-financial-id\" : \"{{obParticipantId}}\",\n        \"x-fapi-interaction-id\" : \"{{interactionId}}\",\n        \"authorization\" : \"Bearer {{token-from-client-credentials-grant-accounts}}\",\n        \"user-agent\" : \"PostmanRuntime/7.21.0\",\n        \"accept\" : \"*/*\",\n        \"cache-control\" : \"no-cache\",\n        \"host\" : \"localhost:4901\",\n        \"accept-encoding\" : \"gzip, deflate\",\n        \"content-length\" : \"688\",\n        \"connection\" : \"keep-alive\"\n    },\n    \"request\" : {\n        \"Data\" : {\n            \"Permissions\" : [ \n                \"ReadAccountsBasic\", \n                \"ReadAccountsDetail\", \n                \"ReadBalances\", \n                \"ReadBeneficiariesBasic\", \n                \"ReadBeneficiariesDetail\", \n                \"ReadDirectDebits\", \n                \"ReadTransactionsBasic\", \n                \"ReadTransactionsCredits\", \n                \"ReadTransactionsDebits\", \n                \"ReadTransactionsDetail\", \n                \"ReadProducts\", \n                \"ReadStandingOrdersDetail\", \n                \"ReadProducts\", \n                \"ReadStandingOrdersDetail\"\n            ],\n            \"TransactionFromDateTime\" : \"2016-01-01T10:40:00+02:00\",\n            \"TransactionToDateTime\" : \"2025-12-31T10:40:00+02:00\"\n        },\n        \"Risk\" : {}\n    },\n    \"tpp\" : {\n        \"clientId\" : \"7a0734f0-41b7-4985-a7f8-023a73cc893f\",\n        \"tppId\" : \"000015000000000000000001\",\n        \"tppName\" : \"Ozone Financial Technology Limited\",\n        \"obieTppId\" : \"0015800001041RHAAY\",\n        \"softwareStatementId\" : \"000016000000000000000004\",\n        \"obieSoftwareStatementId\" : \"HQuZPIt3ipkh33Uxytox1E\",\n        \"obieSoftwareStatementName\" : \"tpp2019\"\n    }\n}"
								},
								"url": {
									"raw": "{{cs}}/v2.2/consents",
									"host": [
										"{{cs}}"
									],
									"path": [
										"v2.2",
										"consents"
									]
								}
							},
							"response": []
						},
						{
							"name": "PUT  Consent manager",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// var jsonData = JSON.parse(responseBody);",
											"",
											"// postman.setEnvironmentVariable(\"account-access-consent-id\", jsonData.consentBody.Data.ConsentId);",
											"// postman.setEnvironmentVariable(\"request-scope\", 'accounts');",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid'); ",
											"pm.environment.set(\"interactionId\", uuid.v4());",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-client-credentials-grant-accounts}}"
									},
									{
										"key": "x-fapi-customer-ip-address",
										"value": "Mon, 19 Oct 2018 08:51:49 GMT",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"consentBody.Data.Status\": \"Consumed\",\n    \"psuIdentifiers\": {\n        \"userId\": \"001001000000000000000002\"\n    },\n    \"accountIds\": [ \n        \"001004000000000000000002\", \n        \"001004000000000000000003\", \n        \"001004000000000000000005\"\n  ]\n}"
								},
								"url": {
									"raw": "{{cs}}/v2.2/consents/{{account-access-consent-id}}",
									"host": [
										"{{cs}}"
									],
									"path": [
										"v2.2",
										"consents",
										"{{account-access-consent-id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get consent by Id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"pm.environment.set(\"userId\", jsonData.psuIdentifiers.userId);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid'); ",
											"pm.environment.set(\"interactionId\", uuid.v4());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{tppAccessToken}}"
									},
									{
										"key": "x-fapi-customer-ip-address",
										"value": "Mon, 19 Oct 2018 08:51:49 GMT",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{cs}}/v2.2/consents/{{account-access-consent-id}}",
									"host": [
										"{{cs}}"
									],
									"path": [
										"v2.2",
										"consents",
										"{{account-access-consent-id}}"
									]
								},
								"description": "2000: Request\n2013: Response\n\nThe ASPSP-specific Consents API (2007/2010) can also be simulated through /Consents/POST /consents"
							},
							"response": []
						},
						{
							"name": "Get consents by psuId",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid'); ",
											"pm.environment.set(\"interactionId\", uuid.v4());",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{tppAccessToken}}"
									},
									{
										"key": "x-fapi-customer-ip-address",
										"value": "Mon, 19 Oct 2018 08:51:49 GMT",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{cs}}/v2.2/psu/{{userId}}/consents",
									"host": [
										"{{cs}}"
									],
									"path": [
										"v2.2",
										"psu",
										"{{userId}}",
										"consents"
									]
								},
								"description": "2000: Request\n2013: Response\n\nThe ASPSP-specific Consents API (2007/2010) can also be simulated through /Consents/POST /consents"
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.environment.set(\"cs\", \"http://localhost:1001\");"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			]
		},
		{
			"name": "OpenID Connect",
			"item": [
				{
					"name": "well-known endpoint",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"url": {
							"raw": "{{configEndpoint}}",
							"host": [
								"{{configEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Client Credentials Grant (accounts scope)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-accounts\", jsonData.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"value": "Basic {{basicToken}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "accounts openid",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{tokenEndpoint}}",
							"host": [
								"{{tokenEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Client Credentials Grant (payments scope)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
									""
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"value": "Basic {{basicToken}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "payments openid",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{tokenEndpoint}}",
							"host": [
								"{{tokenEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Client Credentials Grant (fundsconfirmations scope)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-fundsconfirmations\", jsonData.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"value": "Basic {{basicToken}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "client_credentials",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "fundsconfirmations openid",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{tokenEndpoint}}",
							"host": [
								"{{tokenEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Auth-code Grant (get authorization code)",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"postman.setEnvironmentVariable(\"authorizationCode\", responseBody);",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{authCodeUrl}}",
							"host": [
								"{{authCodeUrl}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Auth Code Grant (accounts scope)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"token-from-auth-code-grant-accounts\", jsonData.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"value": "Basic {{basicToken}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "accounts ",
									"type": "text"
								},
								{
									"key": "code",
									"value": "{{authorizationCode}}",
									"type": "text"
								},
								{
									"key": "redirect_uri",
									"value": "{{redirectUrl}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{tokenEndpoint}}",
							"host": [
								"{{tokenEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Auth Code Grant (payments scope)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"value": "Basic {{basicToken}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "payments",
									"type": "text"
								},
								{
									"key": "code",
									"value": "{{authorizationCode}}",
									"type": "text"
								},
								{
									"key": "redirect_uri",
									"value": "{{redirectUrl}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{tokenEndpoint}}",
							"host": [
								"{{tokenEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Auth Code Grant (fundsconfirmations scope)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"",
									"postman.setEnvironmentVariable(\"token-from-auth-code-grant-fundsconfirmations\", jsonData.access_token);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"value": "Basic {{basicToken}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "authorization_code",
									"type": "text"
								},
								{
									"key": "scope",
									"value": "fundsconfirmations",
									"type": "text"
								},
								{
									"key": "code",
									"value": "{{authorizationCode}}",
									"type": "text"
								},
								{
									"key": "redirect_uri",
									"value": "{{redirectUrl}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{tokenEndpoint}}",
							"host": [
								"{{tokenEndpoint}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "dcr",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:3102/dynamic-client-registration/v3.1/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3102",
							"path": [
								"dynamic-client-registration",
								"v3.1",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /register",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-fapi-financial-id",
								"value": "{{obParticipantId}}"
							},
							{
								"key": "x-fapi-interaction-id",
								"value": "{{interactionId}}"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token-from-client-credentials-grant-accounts}}"
							}
						],
						"url": {
							"raw": "{{rs}}/open-banking/v3.1/dynamic-client-registration/v3.1/register/{{oidcClient}}",
							"host": [
								"{{rs}}"
							],
							"path": [
								"open-banking",
								"v3.1",
								"dynamic-client-registration",
								"v3.1",
								"register",
								"{{oidcClient}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /register",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-fapi-financial-id",
								"value": "{{obParticipantId}}"
							},
							{
								"key": "x-fapi-interaction-id",
								"value": "{{interactionId}}"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token-from-client-credentials-grant-accounts}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{rs}}/dynamic-client-registration/v3.1/register/{{oidcClient}}",
							"host": [
								"{{rs}}"
							],
							"path": [
								"dynamic-client-registration",
								"v3.1",
								"register",
								"{{oidcClient}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "API",
			"item": [
				{
					"name": "Retrieves all the consents associated with a given PSU",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{cm}}/v2.2/psu/{{userId}}/consents",
							"host": [
								"{{cm}}"
							],
							"path": [
								"v2.2",
								"psu",
								"{{userId}}",
								"consents"
							]
						},
						"description": "Retrieves an array of consents associated with the PSU.\n\nIf no consents could be found associated with the PSU, then an empty array is returned.\n\nThe userId path parameter is matched with the `psuIdentifiers.userId` field in the consent.\n"
					},
					"response": [
						{
							"name": "Indicates a failure to retrieve the consents\n",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/psu/:userId/consents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"psu",
										":userId",
										"consents"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorCode\": \"in veniam\",\n \"errorMessage\": \"minim est\"\n}"
						},
						{
							"name": "Successful response\n",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/psu/:userId/consents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"psu",
										":userId",
										"consents"
									],
									"variable": [
										{
											"key": "userId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"cillum ex aliquip\",\n  \"consentType\": \"<string>\",\n  \"request\": \"<object>\",\n  \"requestHeaders\": \"<object>\",\n  \"tpp\": {\n   \"clientId\": \"<string>\",\n   \"orgId\": \"<string>\",\n   \"softwareStatementId\": \"<string>\",\n   \"directoryRecord\": \"<object>\"\n  },\n  \"consentBody\": {\n   \"Data\": {\n    \"ConsentId\": \"ex aute qui fugiat\",\n    \"CreationDateTime\": \"2013-09-26T03:44:19.140Z\",\n    \"Status\": \"Consumed\",\n    \"StatusUpdateDateTime\": \"1968-03-04T06:34:43.092Z\"\n   }\n  },\n  \"psuIdentifiers\": {\n   \"userId\": \"sunt et ullamco irure\"\n  },\n  \"accountIds\": [\n   \"cillum deserunt nostrud\"\n  ]\n },\n {\n  \"id\": \"aliqua ut\",\n  \"consentType\": \"<string>\",\n  \"request\": \"<object>\",\n  \"requestHeaders\": \"<object>\",\n  \"tpp\": {\n   \"clientId\": \"<string>\",\n   \"orgId\": \"<string>\",\n   \"softwareStatementId\": \"<string>\",\n   \"directoryRecord\": \"<object>\"\n  },\n  \"consentBody\": {\n   \"Data\": {\n    \"ConsentId\": \"ex ut\",\n    \"CreationDateTime\": \"1948-04-22T01:49:15.193Z\",\n    \"Status\": \"Revoked\",\n    \"StatusUpdateDateTime\": \"1950-10-19T23:52:42.904Z\"\n   }\n  },\n  \"psuIdentifiers\": {\n   \"userId\": \"in adipisicing ullamco et Lorem\"\n  },\n  \"accountIds\": [\n   \"id commodo\"\n  ]\n }\n]"
						}
					]
				},
				{
					"name": "2001: Ozone-Ozone Creates a new consent",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"consentType\": \"<string>\",\n    \"request\": \"<object>\",\n    \"requestHeaders\": \"<object>\",\n    \"tpp\": {\n        \"clientId\": \"<string>\",\n        \"orgId\": \"<string>\",\n        \"softwareStatementId\": \"<string>\",\n        \"directoryRecord\": \"<object>\"\n    },\n    \"requestUrl\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{cm}}/v2.2/consents",
							"host": [
								"{{cm}}"
							],
							"path": [
								"v2.2",
								"consents"
							]
						}
					},
					"response": [
						{
							"name": "Indicates a failure to create the consent\n",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"consentType\": \"<string>\",\n    \"request\": \"<object>\",\n    \"requestHeaders\": \"<object>\",\n    \"tpp\": {\n        \"clientId\": \"<string>\",\n        \"orgId\": \"<string>\",\n        \"softwareStatementId\": \"<string>\",\n        \"directoryRecord\": \"<object>\"\n    },\n    \"requestUrl\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/consents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"consents"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorCode\": \"in veniam\",\n \"errorMessage\": \"minim est\"\n}"
						},
						{
							"name": "Indicates the successful creation of a consent\n",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"consentType\": \"<string>\",\n    \"request\": \"<object>\",\n    \"requestHeaders\": \"<object>\",\n    \"tpp\": {\n        \"clientId\": \"<string>\",\n        \"orgId\": \"<string>\",\n        \"softwareStatementId\": \"<string>\",\n        \"directoryRecord\": \"<object>\"\n    },\n    \"requestUrl\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/consents",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"consents"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"est dolor non sunt\",\n \"consentType\": \"<string>\",\n \"request\": \"<object>\",\n \"requestHeaders\": \"<object>\",\n \"tpp\": {\n  \"clientId\": \"<string>\",\n  \"orgId\": \"<string>\",\n  \"softwareStatementId\": \"<string>\",\n  \"directoryRecord\": \"<object>\"\n },\n \"requestUrl\": \"laborum sit in\",\n \"consentBody\": {\n  \"Data\": {\n   \"ConsentId\": \"Excepteur magna\",\n   \"CreationDateTime\": \"1965-01-02T03:43:38.640Z\",\n   \"Status\": \"Authorised\",\n   \"StatusUpdateDateTime\": \"1954-04-18T07:59:38.945Z\"\n  }\n }\n}"
						}
					]
				},
				{
					"name": "3005: ASPSP - Ozone Retrieve a consent by its id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{cm}}/v2.2/consents/{{intent-id}}",
							"host": [
								"{{cm}}"
							],
							"path": [
								"v2.2",
								"consents",
								"{{intent-id}}"
							]
						}
					},
					"response": [
						{
							"name": "Indicates a failure to create the consent\n",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/consents/:consentId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"consents",
										":consentId"
									],
									"variable": [
										{
											"key": "consentId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorCode\": \"in veniam\",\n \"errorMessage\": \"minim est\"\n}"
						},
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/consents/:consentId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"consents",
										":consentId"
									],
									"variable": [
										{
											"key": "consentId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"Lorem labore enim ir\",\n \"consentType\": \"<string>\",\n \"request\": \"<object>\",\n \"requestHeaders\": \"<object>\",\n \"tpp\": {\n  \"clientId\": \"<string>\",\n  \"orgId\": \"<string>\",\n  \"softwareStatementId\": \"<string>\",\n  \"directoryRecord\": \"<object>\"\n },\n \"consentBody\": {\n  \"Data\": {\n   \"ConsentId\": \"nisi laborum dolor\",\n   \"CreationDateTime\": \"1967-04-17T11:00:27.222Z\",\n   \"Status\": \"Consumed\",\n   \"StatusUpdateDateTime\": \"1999-09-20T06:14:49.705Z\"\n  }\n },\n \"psuIdentifiers\": {\n  \"userId\": \"laboris sunt fugiat non\"\n },\n \"accountIds\": [\n  \"sed nostrud\"\n ]\n}"
						}
					]
				},
				{
					"name": "Patches one or more fields in a consent",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"psuIdentifiers\": {\n        \"userId\": \"{{userId}}\"\n    },\n    \"accountIds\": {{accountIds}},\n    \"consentBody.Data.Status\": \"Rejected\"\n}"
						},
						"url": {
							"raw": "{{cm}}/v2.2/consents/{{intent-id}}",
							"host": [
								"{{cm}}"
							],
							"path": [
								"v2.2",
								"consents",
								"{{intent-id}}"
							]
						},
						"description": "This operation allows an ASPSP modify fields within a consent's `consentBody`.\n\nTypically, this API would be called after the PSU has authorised a consent. This would \nallow the ASPSP to \"patch in\" the `psuIdentifier` and `accountIds` associated with the\nconsent\n"
					},
					"response": [
						{
							"name": "An empty response",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"psuIdentifiers\": {\n        \"userId\": \"officia labore amet minim\"\n    },\n    \"accountIds\": [\n        \"deserunt i\"\n    ],\n    \"supplementaryInformation\": \"<object>\",\n    \"consentBody.Data.Status\": \"Revoked\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/consents/:consentId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"consents",
										":consentId"
									],
									"variable": [
										{
											"key": "consentId"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Indicates a failure to create the consent\n",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"psuIdentifiers\": {\n        \"userId\": \"officia labore amet minim\"\n    },\n    \"accountIds\": [\n        \"deserunt i\"\n    ],\n    \"supplementaryInformation\": \"<object>\",\n    \"consentBody.Data.Status\": \"Revoked\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/consents/:consentId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"consents",
										":consentId"
									],
									"variable": [
										{
											"key": "consentId"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"errorCode\": \"in veniam\",\n \"errorMessage\": \"minim est\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Open Banking v3.1",
			"item": [
				{
					"name": "Payment Initiation v3.1",
					"item": [
						{
							"name": "Domestic Payments",
							"item": [
								{
									"name": "POST domestic-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"Data\": {\r\n\t\t\"Initiation\": {\r\n\t\t\t\"InstructionIdentification\": \"SIDP01\",\r\n\t\t\t\"EndToEndIdentification\": \"FRESCO.21302.GFX.20\",\r\n\t\t\t\"RemittanceInformation\": {\r\n\t\t\t\t\"Reference\": \"ReferenceReference\"\r\n\t\t\t},\r\n\t\t\t\"InstructedAmount\": {\r\n\t\t\t\t\"Amount\": \"15.00\",\r\n\t\t\t\t\"Currency\": \"GBP\"\r\n\t\t\t},\r\n\t\t\t\"CreditorAccount\": {\r\n\t\t\t\t\"SchemeName\": \"SortCodeAccountNumber\",\r\n\t\t\t\t\"Identification\": \"20000319470104\",\r\n\t\t\t\t\"Name\": \"Messers Simplex & Co\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "POST domestic-payment-consents (force single auth)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"Data\": {\r\n\t\t\"Initiation\": {\r\n\t\t\t\"InstructionIdentification\": \"SIDP01\",\r\n\t\t\t\"EndToEndIdentification\": \"FRESCO.21302.GFX.20\",\r\n\t\t\t\"InstructedAmount\": {\r\n\t\t\t\t\"Amount\": \"15.00\",\r\n\t\t\t\t\"Currency\": \"GBP\"\r\n\t\t\t},\r\n\t\t\t\"CreditorAccount\": {\r\n\t\t\t\t\"SchemeName\": \"SortCodeAccountNumber\",\r\n\t\t\t\t\"Identification\": \"20000319470104\",\r\n\t\t\t\t\"Name\": \"Messers Simplex & Co\"\r\n\t\t\t}\r\n\t\t},\r\n\t\t\t\"Authorisation\": {\r\n\t\t\t\t\"AuthorisationType\": \"Single\"\r\n\t\t\t}\r\n\t},\r\n\t\"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "POST domestic-payment-consents With Debtor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"Data\": {\r\n\t\t\"Initiation\": {\r\n\t\t\t\"InstructionIdentification\": \"SIDP02\",\r\n\t\t\t\"EndToEndIdentification\": \"FRESCO.21302.GFX.20\",\r\n\t\t\t\"InstructedAmount\": {\r\n\t\t\t\t\"Amount\": \"15.00\",\r\n\t\t\t\t\"Currency\": \"GBP\"\r\n\t\t\t},\r\n\t\t\t\"CreditorAccount\": {\r\n\t\t\t\t\"SchemeName\": \"SortCodeAccountNumber\",\r\n\t\t\t\t\"Identification\": \"50000120050999\",\r\n\t\t\t\t\"Name\": \"Messers Simplex & C\"\r\n\t\t\t},\r\n\r\n        \t\"DebtorAccount\": {\r\n            \t\"SchemeName\": \"SortCodeAccountNumber\",\r\n            \t\"Identification\": \"70000170000001\"\r\n        \t}\t\t\t\r\n\t\t}\r\n\t},\r\n\t\"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "POST domestic-payment-consents With MA Debtor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"Data\": {\r\n\t\t\"Initiation\": {\r\n\t\t\t\"InstructionIdentification\": \"SIDP03\",\r\n\t\t\t\"EndToEndIdentification\": \"FRESCO.21302.GFX.20\",\r\n\t\t\t\"InstructedAmount\": {\r\n\t\t\t\t\"Amount\": \"15.00\",\r\n\t\t\t\t\"Currency\": \"GBP\"\r\n\t\t\t},\r\n\t\t\t\"CreditorAccount\": {\r\n\t\t\t\t\"SchemeName\": \"SortCodeAccountNumber\",\r\n\t\t\t\t\"Identification\": \"20000319470104\",\r\n\t\t\t\t\"Name\": \"Messers Simplex & Co\"\r\n\t\t\t},\r\n      \"DebtorAccount\": {\r\n        \"SchemeName\" : \"UK.OBIE.SortCodeAccountNumber\",\r\n        \"Identification\" : \"70000170000005\",\r\n        \"Name\" : \"Octon Inc\"\r\n      }\t\t\t\r\n\t\t}\r\n\t},\r\n\t\"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "POST payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.DomesticPaymentId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'domestic-payments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\":  {{Initiation}}\n    },\n    \"Risk\": {}\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET domestic-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "domestic-payments funds-confirmation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payment-consents/{{intent-id}}/funds-confirmation",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-payment-consents",
												"{{intent-id}}",
												"funds-confirmation"
											]
										}
									},
									"response": []
								},
								{
									"name": "DELETE domestic-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payments/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-payments",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Domestic Scheduled Payments",
							"item": [
								{
									"name": "POST domestic-scheduled-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJhcHBsaWNhdGlvbi9qc29uIiwiYjY0IjpmYWxzZSwiaHR0cDovL29wZW5iYW5raW5nLm9yZy51ay9pYXQiOjE1NDM3MTc1NDcuODM2LCJodHRwOi8vb3BlbmJhbmtpbmcub3JnLnVrL2lzcyI6IkM9R0IsIE89T3BlbkJhbmtpbmcsIE9VPXVuZGVmaW5lZCwgQ049dW5kZWZpbmVkIiwiY3JpdCI6WyJiNjQiLCJodHRwOi8vb3BlbmJhbmtpbmcub3JnLnVrL2lhdCIsImh0dHA6Ly9vcGVuYmFua2luZy5vcmcudWsvaXNzIl0sImtpZCI6ImpDSk5mWkFjVGc0ZHNjQ3IzYy0xUXd1eXNBRSJ9.eyJEYXRhIjp7IlBlcm1pc3Npb24iOiJDcmVhdGUiLCJJbml0aWF0aW9uIjp7IlJlcXVlc3RlZEV4ZWN1dGlvbkRhdGVUaW1lIjoiMjAyMC0xMC0wMVQxMzoxNDoyNSswMDowMCIsIkluc3RydWN0aW9uSWRlbnRpZmljYXRpb24iOiJBQ01FNDEyIiwiRW5kVG9FbmRJZGVudGlmaWNhdGlvbiI6IkZSRVNDTy4yMTMwMi5HRlguMjAiLCJJbnN0cnVjdGVkQW1vdW50Ijp7IkFtb3VudCI6IjE1LjAwIiwiQ3VycmVuY3kiOiJHQlAifSwiQ3JlZGl0b3JBY2NvdW50Ijp7IlNjaGVtZU5hbWUiOiJTb3J0Q29kZUFjY291bnROdW1iZXIiLCJJZGVudGlmaWNhdGlvbiI6IjIwMDAwMzE5NDcwMTA0IiwiTmFtZSI6Ik1lc3NlcnMgU2ltcGxleCAmIENvIn19fSwiUmlzayI6e319.AzJCoxil-g9XDIRGMXdjwKmWltp7riS-Rv9t6earRAr_cQDpFbqZkDBTMOedoeYMmJGqwM2DJzjeuqGUIhGMWw_qEKuIObNzBr4ouVsKGI13vh4_1yJ60mWraDMzI0dBIPYLlkb3lgCAlHMRap15aygO_eGmzhp7HYn-2UoIvUpY-3yRFSL5MhX4W6mOLeVmBZtqzKCAZ1LszTyt1Sg33L_wjXauRvxxlJXhydiuYNbVR8WvJ3y25MNCqqDjI3vilBG3-1ycnHJpq3_ywxltcgoCnO3H7pEe0SJG5PiOe3vmVVlcD9OuOAMa6o6GCBEwTZbG493QrKDr9jZShmtjXg",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\"Data\": {\r\n\t\t\"Permission\": \"Create\",\r\n\t\t\"Initiation\": {\r\n\t\t\t\"RequestedExecutionDateTime\":  \"2020-10-01T13:14:25+00:00\",\r\n\t\t\t\"InstructionIdentification\": \"ACME412\",\r\n\t\t\t\"EndToEndIdentification\": \"FRESCO.21302.GFX.20\",\r\n\t\t\t\"InstructedAmount\": {\r\n\t\t\t\t\"Amount\": \"15.00\",\r\n\t\t\t\t\"Currency\": \"GBP\"\r\n\t\t\t},\r\n\t\t\t\"CreditorAccount\": {\r\n\t\t\t\t\"SchemeName\": \"SortCodeAccountNumber\",\r\n\t\t\t\t\"Identification\": \"20000319470104\",\r\n\t\t\t\t\"Name\": \"Messers Simplex & Co\"\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-scheduled-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-scheduled-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "POST domestic-scheduled-payment-consents With Debtor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"Data\": {\r\n\t\t\"Permission\": \"Create\",\r\n\t\t\"Initiation\": {\r\n            \"RequestedExecutionDateTime\": \"2020-10-01T13:14:25+00:00\",\r\n\t\t\t\"InstructionIdentification\": \"ACME412\",\r\n\t\t\t\"EndToEndIdentification\": \"FRESCO.21302.GFX.20\",\r\n\t\t\t\"InstructedAmount\": {\r\n\t\t\t\t\"Amount\": \"15.00\",\r\n\t\t\t\t\"Currency\": \"GBP\"\r\n\t\t\t},\r\n\t\t\t\"CreditorAccount\": {\r\n\t\t\t\t\"SchemeName\": \"SortCodeAccountNumber\",\r\n\t\t\t\t\"Identification\": \"50000120050999\",\r\n\t\t\t\t\"Name\": \"Messers Simplex & C\"\r\n\t\t\t},\r\n\r\n        \t\"DebtorAccount\": {\r\n            \t\"SchemeName\": \"SortCodeAccountNumber\",\r\n            \t\"Identification\": \"70000170000002\",\r\n            \t\"Name\": \"Dr Foo\"\r\n        \t}\t\t\t\r\n\t\t}\r\n\t},\r\n\t\"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-scheduled-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-scheduled-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "POST domestic-scheduled-payment-consents With MA Debtor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"Data\": {\r\n\t\t\"Permission\": \"Create\",\r\n\t\t\"Initiation\": {\r\n            \"RequestedExecutionDateTime\": \"2020-10-01T13:14:25+00:00\",\r\n\t\t\t\"InstructionIdentification\": \"ACME412\",\r\n\t\t\t\"EndToEndIdentification\": \"FRESCO.21302.GFX.20\",\r\n\t\t\t\"InstructedAmount\": {\r\n\t\t\t\t\"Amount\": \"15.00\",\r\n\t\t\t\t\"Currency\": \"GBP\"\r\n\t\t\t},\r\n\t\t\t\"CreditorAccount\": {\r\n\t\t\t\t\"SchemeName\": \"SortCodeAccountNumber\",\r\n\t\t\t\t\"Identification\": \"20000319470104\",\r\n\t\t\t\t\"Name\": \"Messers Simplex & Co\"\r\n\t\t\t},\r\n            \"DebtorAccount\": {\r\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\r\n                \"Identification\": \"70000170000005\",\r\n                \"Name\": \"Octon Inc\"\r\n            }\t\t\t\r\n\t\t}\r\n\t},\r\n\t\"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-scheduled-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-scheduled-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "POST domestic-scheduled-payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.DomesticScheduledPaymentId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'domestic-scheduled-payments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}}\n    },\n    \"Risk\": {}\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-scheduled-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-scheduled-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET domestic-scheduled-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-scheduled-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "DELETE domestic-scheduled-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-scheduled-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET domestic-scheduled-payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-scheduled-payments/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-scheduled-payments",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Domestic Standing Orders",
							"item": [
								{
									"name": "POST domestic-standing-order-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": " {\r\n      \"Data\": {\r\n        \"Permission\": \"Create\",\r\n        \"Initiation\": {\r\n          \"Frequency\": \"EvryDay\",\r\n          \"FirstPaymentDateTime\": \"2020-10-01T13:14:25+00:00\",\r\n          \"FinalPaymentDateTime\": \"2020-10-01T13:14:25+00:00\",\r\n          \"FirstPaymentAmount\": {\r\n            \"Amount\": \"10.00\",\r\n            \"Currency\": \"GBP\"\r\n          },\r\n          \"CreditorAccount\": {\r\n            \"SchemeName\": \"SortCodeAccountNumber\",\r\n            \"Identification\": \"20202010981789\",\r\n            \"Name\": \"Dr Foo\"\r\n          }\r\n        }\r\n      },\r\n      \"Risk\": {}\r\n    }"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-standing-order-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-standing-order-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "POST domestic-standing-order-consents With Debtor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"Data\": {\r\n\t\t\"Permission\": \"Create\",\r\n\t\t\"Initiation\": {\r\n\t\t\t\"Frequency\": \"EvryDay\",\r\n\t\t\t\"FirstPaymentDateTime\": \"2020-10-01T13:14:25+00:00\",\r\n\t\t\t\"FirstPaymentAmount\": {\r\n\t\t\t\t\"Amount\": \"10.00\",\r\n\t\t\t\t\"Currency\": \"GBP\"\r\n\t\t\t},\r\n\t\t\t\"CreditorAccount\": {\r\n\t\t\t\t\"SchemeName\": \"SortCodeAccountNumber\",\r\n\t\t\t\t\"Identification\": \"20202010981789\",\r\n\t\t\t\t\"Name\": \"Dr Foo\"\r\n\t\t\t},\r\n        \t\"DebtorAccount\": {\r\n            \t\"SchemeName\": \"SortCodeAccountNumber\",\r\n            \t\"Identification\": \"70000170000002\",\r\n            \t\"Name\": \"Dr Foo\"\r\n        \t}  \r\n\t\t}\r\n\t},\r\n\t\"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-standing-order-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-standing-order-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "POST domestic-standing-order-consents With MA Debtor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"Data\": {\r\n\t\t\"Permission\": \"Create\",\r\n\t\t\"Initiation\": {\r\n\t\t\t\"Frequency\": \"EvryDay\",\r\n\t\t\t\"FirstPaymentDateTime\": \"2020-10-01T13:14:25+00:00\",\r\n\t\t\t\"FirstPaymentAmount\": {\r\n\t\t\t\t\"Amount\": \"10.00\",\r\n\t\t\t\t\"Currency\": \"GBP\"\r\n\t\t\t},\r\n\t\t\t\"CreditorAccount\": {\r\n\t\t\t\t\"SchemeName\": \"SortCodeAccountNumber\",\r\n\t\t\t\t\"Identification\": \"20202010981789\",\r\n\t\t\t\t\"Name\": \"Dr Foo\"\r\n\t\t\t},\r\n            \"DebtorAccount\": {\r\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\r\n                \"Identification\": \"70000170000005\",\r\n                \"Name\": \"Octon Inc\"\r\n            }        \r\n\t\t}\r\n\t},\r\n\t\"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-standing-order-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-standing-order-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "POST domestic-standing-orders",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.DomesticStandingOrderId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'domestic-standing-orders');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"Data\": {\n\t\t\"ConsentId\": \"{{payment-consent-id}}\",\n\t\t\"Initiation\": {{Initiation}}\n\t},\n\t\"Risk\": {}\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-standing-orders",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-standing-orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET domestic-standing-order-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-standing-order-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-standing-order-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "DELETE domestic-standing-order-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-standing-order-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-standing-order-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET domestic-standing-orders",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-standing-orders/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-standing-orders",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "International Payments",
							"item": [
								{
									"name": "POST international-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"Data\": {\r\n   \"Initiation\": {\r\n     \"InstructionIdentification\": \"Excaliber International\",\r\n     \"EndToEndIdentification\": \"Excaliber International\",\r\n     \"CurrencyOfTransfer\": \"USD\",\r\n     \"InstructedAmount\": {\r\n       \"Amount\": \"10.00\",\r\n       \"Currency\": \"USD\"\r\n     },\r\n     \"CreditorAccount\": {\r\n       \"SchemeName\": \"SortCodeAccountNumber\",\r\n       \"Identification\": \"20202010981789\",\r\n       \"Name\": \"Dr Foo\"\r\n     },\r\n     \"ExchangeRateInformation\": {\r\n     \t\"RateType\": \"Agreed\",\r\n     \t\"UnitCurrency\": \"GBP\",\r\n     \t\"ContractIdentification\": \"A/2019/2001\",\r\n     \t\"ExchangeRate\": 0.78\r\n     }\r\n   }\r\n },\r\n \"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "POST international-payment-consents With Debtor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\r\n\r\n{\r\n \"Data\": {\r\n   \"Initiation\": {\r\n     \"InstructionIdentification\": \"Excaliber International\",\r\n     \"EndToEndIdentification\": \"Excaliber International\",\r\n     \"CurrencyOfTransfer\": \"USD\",\r\n     \"InstructedAmount\": {\r\n       \"Amount\": \"10.00\",\r\n       \"Currency\": \"USD\"\r\n     },\r\n     \"CreditorAccount\": {\r\n       \"SchemeName\": \"SortCodeAccountNumber\",\r\n       \"Identification\": \"70000170000002\",\r\n       \"Name\": \"Dr Foo\"\r\n     },\r\n\r\n\r\n        \t\"DebtorAccount\": {\r\n            \t\"SchemeName\": \"IBAN\",\r\n            \t\"Identification\": \"GB29OBI170000170000001\",\r\n            \t\"Name\": \"Dr Foo\"}\t\r\n            \t\r\n   }\r\n },\r\n \"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "POST international-payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.InternationalPaymentId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'international-payments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n\t   \"Initiation\": {{Initiation}}\n    },\n    \"Risk\": {}\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET international-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "international-payment-consents/funds-confirmation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-payment-consents/{{intent-id}}/funds-confirmation",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-payment-consents",
												"{{intent-id}}",
												"funds-confirmation"
											]
										}
									},
									"response": []
								},
								{
									"name": "DELETE international-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET international-payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-payments/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-payments",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "International Scheduled Payments",
							"item": [
								{
									"name": "POST international-scheduled-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"Data\": {\r\n \t\"Permission\": \"Create\",\r\n   \"Initiation\": {\r\n   \"RequestedExecutionDateTime\": \"2020-10-01T13:14:25+00:00\",\r\n     \"InstructionIdentification\": \"Excaliber International\",\r\n     \"EndToEndIdentification\": \"Excaliber International\",\r\n     \"CurrencyOfTransfer\": \"USD\",\r\n     \"InstructedAmount\": {\r\n       \"Amount\": \"10.00\",\r\n       \"Currency\": \"USD\"\r\n     },\r\n     \"CreditorAccount\": {\r\n       \"SchemeName\": \"SortCodeAccountNumber\",\r\n       \"Identification\": \"20202010981789\",\r\n       \"Name\": \"Dr Foo\"\r\n     }\r\n   }\r\n },\r\n \"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-scheduled-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-scheduled-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "POST international-scheduled-payment-consents With Debtor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\r\n\r\n{\r\n \"Data\": {\r\n \t \t\"Permission\": \"Create\",\r\n\r\n   \"Initiation\": {\r\n          \"RequestedExecutionDateTime\": \"2020-10-01T13:14:25+00:00\",\r\n   \t\r\n     \"InstructionIdentification\": \"Excaliber International\",\r\n     \"EndToEndIdentification\": \"Excaliber International\",\r\n     \"CurrencyOfTransfer\": \"USD\",\r\n     \"InstructedAmount\": {\r\n       \"Amount\": \"10.00\",\r\n       \"Currency\": \"USD\"\r\n     },\r\n     \"CreditorAccount\": {\r\n       \"SchemeName\": \"SortCodeAccountNumber\",\r\n       \"Identification\": \"20202010981789\",\r\n       \"Name\": \"Dr Foo\"\r\n     },\r\n\r\n\r\n        \t\"DebtorAccount\": {\r\n            \t\"SchemeName\": \"IBAN\",\r\n            \t\"Identification\": \"GB29OBI170000170000001\",\r\n            \t\"Name\": \"Dr Foo\"}\t\r\n            \t\r\n   }\r\n },\r\n \"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-scheduled-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-scheduled-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "POST international-scheduled-payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.InternationalScheduledPaymentId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'international-scheduled-payments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n\t   \"Initiation\": {{Initiation}}\n    },\n    \"Risk\": {}\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-scheduled-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-scheduled-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET international-scheduled-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-scheduled-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-scheduled-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "international-scheduled-payment-consents funds-confirmation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-scheduled-payment-consents/{{intent-id}}/funds-confirmation",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-scheduled-payment-consents",
												"{{intent-id}}",
												"funds-confirmation"
											]
										}
									},
									"response": []
								},
								{
									"name": "DELETE international-scheduled-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-scheduled-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-scheduled-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET international-scheduled-payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-scheduled-payments/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-scheduled-payments",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "International Standing Order",
							"item": [
								{
									"name": "POST international-standing-order-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n \"Data\": {\r\n   \"Permission\": \"Create\",\r\n   \"Initiation\": {\r\n     \"Frequency\": \"EvryDay\",\r\n     \"FirstPaymentDateTime\": \"2020-10-01T13:14:25+00:00\",\r\n     \"CurrencyOfTransfer\": \"USD\",\r\n     \"InstructedAmount\": {\r\n       \"Amount\": \"7.41\",\r\n       \"Currency\": \"USD\"\r\n     },\r\n     \"CreditorAccount\": {\r\n       \"SchemeName\": \"SortCodeAccountNumber\",\r\n       \"Identification\": \"20202010981789\",\r\n       \"Name\": \"Dr Foo\"\r\n     }\r\n   }\r\n },\r\n \"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-standing-order-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-standing-order-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "POST international-standing-order-consents With Debtor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\r\n\r\n\r\n{\r\n\t\"Data\": {\r\n\t\t\"Permission\": \"Create\",\r\n\t\t\"Initiation\": {\r\n\t\t\t\"Frequency\": \"EvryDay\",\r\n\t\t\t\"FirstPaymentDateTime\": \"2020-10-01T13:14:25+00:00\",\r\n\t\t\t\"CurrencyOfTransfer\": \"USD\",\r\n\t\t\t\t\"InstructedAmount\": {\r\n\t\t\t\t\"Amount\": \"7.41\",\r\n\t\t\t\t\"Currency\": \"USD\"\r\n\t\t\t},\r\n\t\t\t\"CreditorAccount\": {\r\n\t\t\t\t\"SchemeName\": \"SortCodeAccountNumber\",\r\n\t\t\t\t\"Identification\": \"20202010981789\",\r\n\t\t\t\t\"Name\": \"Dr Foo\"\r\n\t\t\t},\r\n\t\t\t\t\"DebtorAccount\": {\r\n\t\t\t\t\"SchemeName\": \"IBAN\",\r\n\t\t\t\t\"Identification\": \"GB29OBI170000170000001\",\r\n\t\t\t\t\"Name\": \"Dr Foo\"}\t     \r\n\t\t}\r\n\t},\r\n\t\"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-standing-order-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-standing-order-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "POST international-standing-orders",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.InternationalStandingOrderId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'international-standing-orders');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n   \"Initiation\": {{Initiation}}\n },\n \"Risk\": {}\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-standing-orders",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-standing-orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET international-standing-order-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-standing-order-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-standing-order-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET international-standing-orders",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-standing-orders/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-standing-orders",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "File Payments",
							"item": [
								{
									"name": "POST file-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Data\": {\r\n    \"Initiation\": {\r\n      \"FileType\": \"UK.Ozone\",\r\n      \"FileHash\": \"m5ah/h1UjLvJYMxqAoZmj9dKdjZnsGNm+yMkJp/KuqQ\",\r\n      \"FileReference\": \"GB2OK238\",\r\n      \"NumberOfTransactions\": \"3\",\r\n      \"ControlSum\": 151.56\r\n    }\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/file-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"file-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "POST file-payment-consents With Debtor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"Data\": {\r\n\t    \"Initiation\": {\r\n\t    \t\"FileType\": \"UK.Ozone\",\r\n\t    \t\"FileHash\": \"m5ah/h1UjLvJYMxqAoZmj9dKdjZnsGNm+yMkJp/KuqQ\",\r\n\t    \t\"FileReference\": \"GB2OK238\",\r\n\t    \t\"NumberOfTransactions\": \"3\",\r\n\t    \t\"ControlSum\": 151.56,\r\n\t\t\t\"DebtorAccount\": {\r\n\t    \t\t\"SchemeName\": \"IBAN\",\r\n\t    \t\t\"Identification\": \"GB29OBI170000170000001\",\r\n\t    \t\t\"Name\": \"Dr Foo\"}\t\t\t\r\n\t\t}\r\n\t}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/file-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"file-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "POST file-payment-consents With MA Debtor",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"Data\": {\r\n\t    \"Initiation\": {\r\n\t    \t\"FileType\": \"UK.Ozone\",\r\n\t    \t\"FileHash\": \"m5ah/h1UjLvJYMxqAoZmj9dKdjZnsGNm+yMkJp/KuqQ\",\r\n\t    \t\"FileReference\": \"GB2OK238\",\r\n\t\t      \"NumberOfTransactions\": \"3\",\r\n\t\t      \"ControlSum\": 151.56,\r\n\t    \t\"RequestedExecutionDateTime\": \"2020-10-01T13:14:25+00:00\",\r\n\t\t    \"DebtorAccount\": {\r\n\t\t        \"SchemeName\" : \"IBAN\",\r\n\t\t        \"Identification\" : \"GB29OBI170000170000001\",\r\n\t\t        \"Name\" : \"Mario Carpentry\"\r\n\t\t    }\t\t\t\r\n\t\t}\r\n\t}\r\n}\r\n"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/file-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"file-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "POST file-payment-consents/<consent-id>/file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Payments\": [\r\n  \t{ \"Creditor\": \"10000119820101\", \"Amount\": \"50.51\", \"Description\": \"Salary for Dec1, 2018\"},\r\n  \t{ \"Creditor\": \"10000119820101\", \"Amount\": \"50.52\", \"Description\": \"Salary for Dec2, 2018\"},\r\n  \t{ \"Creditor\": \"10000119820101\", \"Amount\": \"50.53\", \"Description\": \"Salary for De3c, 2018\"}\r\n  ]\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/file-payment-consents/{{intent-id}}/file",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"file-payment-consents",
												"{{intent-id}}",
												"file"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET file-payment-consents/<consent-id>/file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/file-payment-consents/{{intent-id}}/file",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"file-payment-consents",
												"{{intent-id}}",
												"file"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET file-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/file-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"file-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "DELETE file-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/file-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"file-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "POST payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.FilePaymentId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'file-payments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\":  {{Initiation}}\n    }\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/file-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"file-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/file-payments/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"file-payments",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Account & Transaction Information v3.1",
					"item": [
						{
							"name": "account-access-consents",
							"item": [
								{
									"name": "POST  account-access-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"account-access-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"request-scope\", 'accounts');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-accounts}}"
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "Mon, 19 Oct 2018 08:51:49 GMT",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"Permissions\": [\r\n            \"ReadAccountsBasic\",\r\n            \"ReadAccountsDetail\",\r\n            \"ReadBalances\",\r\n\t\t\t\"ReadBeneficiariesBasic\",\r\n\t\t\t\"ReadBeneficiariesDetail\",\r\n            \"ReadDirectDebits\",\r\n            \"ReadTransactionsBasic\",\r\n            \"ReadTransactionsCredits\",\r\n            \"ReadTransactionsDebits\",\r\n            \"ReadTransactionsDetail\",\r\n            \"ReadProducts\",\r\n            \"ReadStandingOrdersDetail\",\r\n            \"ReadProducts\",\r\n            \"ReadStandingOrdersDetail\"],\r\n        \"TransactionFromDateTime\": \"2016-01-01T10:40:00+02:00\",\r\n        \"TransactionToDateTime\": \"2025-12-31T10:40:00+02:00\"\r\n    }, \r\n    \"Risk\": {}\r\n}\r\n"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/account-access-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"account-access-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET account-access-consents",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/account-access-consents/{{account-access-consent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"account-access-consents",
												"{{account-access-consent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "DELETE account-access-consents",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-accounts}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/account-access-consents/{{account-access-consent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"account-access-consents",
												"{{account-access-consent-id}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "accounts",
							"item": [
								{
									"name": "GET accounts",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET account/{accountId} - Bank1",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/500000000000000000000001",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"500000000000000000000001"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET account/{accountId} - Referenco",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/500000000000000000000004",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"500000000000000000000004"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "balances",
							"item": [
								{
									"name": "GET balances",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/balances",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"balances"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET accounts/{AccountId}/balances - Modelo",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/500000000000000000000001/balances",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"500000000000000000000001",
												"balances"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET accounts/{AccountId}/balances - Referenco",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/500000000000000000000004/balances",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"500000000000000000000004",
												"balances"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "beneficiaries",
							"item": [
								{
									"name": "GET beneficiaries",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/beneficiaries",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"beneficiaries"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET accounts/{AccountId}/beneficiaries - Modelo",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/500000000000000000000001/balances",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"500000000000000000000001",
												"balances"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET accounts/{AccountId}/beneficiaries - Referenco",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/500000000000000000000004/balances",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"500000000000000000000004",
												"balances"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "direct-debits",
							"item": [
								{
									"name": "GET direct-debits",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/direct-debits",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"direct-debits"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET accounts/{AccountId}/direct-debits - Modelo",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/500000000000000000000001/direct-debits",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"500000000000000000000001",
												"direct-debits"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET accounts/{AccountId}/direct-debits - Referenco",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/500000000000000000000004/direct-debits",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"500000000000000000000004",
												"direct-debits"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "products",
							"item": [
								{
									"name": "GET products",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/products",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"products"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET accounts/{AccountId}/products - Modelo",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/500000000000000000000001/direct-debits",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"500000000000000000000001",
												"direct-debits"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET accounts/{AccountId}/products - Referenco",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/500000000000000000000004/direct-debits",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"500000000000000000000004",
												"direct-debits"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "standing-orders",
							"item": [
								{
									"name": "GET standing-orders",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/standing-orders",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"standing-orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET accounts/{AccountId}/standing-orders - Modelo",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/500000000000000000000001/standing-orders",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"500000000000000000000001",
												"standing-orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET accounts/{AccountId}/standing-orders - Referenco",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/500000000000000000000004/standing-orders",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"500000000000000000000004",
												"standing-orders"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "transactions",
							"item": [
								{
									"name": "GET transactions",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/transactions",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET accounts/{AccountId}/transactions - Modelo",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/500000000000000000000001/transactions",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"500000000000000000000001",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET accounts/{AccountId}/transactions - Referenco",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/500000000000000000000004/transactions",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"500000000000000000000004",
												"transactions"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "events",
					"item": [
						{
							"name": "POST callback-urls",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-customer-last-logged-time",
										"value": "{{now}}",
										"disabled": true
									},
									{
										"key": "x-fapi-customer-ip-address",
										"value": "10.1.1.10"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{$guid}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-client-credentials-grant-payments}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"Data\": {\r\n\t\t\"Url\": \"http://localhost:8888/callback\",\r\n\t\t\"Version\": \"3.1\"\r\n\t}\r\n}"
								},
								"url": {
									"raw": "{{rs}}/open-banking/v3.1/callback-urls",
									"host": [
										"{{rs}}"
									],
									"path": [
										"open-banking",
										"v3.1",
										"callback-urls"
									]
								}
							},
							"response": []
						},
						{
							"name": "PUT callback-urls",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-customer-last-logged-time",
										"value": "{{now}}",
										"disabled": true
									},
									{
										"key": "x-fapi-customer-ip-address",
										"value": "10.1.1.10"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{$guid}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-client-credentials-grant-payments}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"Data\": {\r\n\t\t\"Url\": \"http://localhost:8888/callback\",\r\n\t\t\"Version\": \"3.1\"\r\n\t}\r\n}"
								},
								"url": {
									"raw": "{{rs}}/open-banking/v3.1/callback-urls",
									"host": [
										"{{rs}}"
									],
									"path": [
										"open-banking",
										"v3.1",
										"callback-urls"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET callback-urls",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-customer-last-logged-time",
										"value": "{{now}}",
										"disabled": true
									},
									{
										"key": "x-fapi-customer-ip-address",
										"value": "10.1.1.10"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{$guid}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-client-credentials-grant-payments}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{rs}}/open-banking/v3.1/callback-urls",
									"host": [
										"{{rs}}"
									],
									"path": [
										"open-banking",
										"v3.1",
										"callback-urls"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE callback-urls",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-customer-last-logged-time",
										"value": "{{now}}",
										"disabled": true
									},
									{
										"key": "x-fapi-customer-ip-address",
										"value": "10.1.1.10"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{$guid}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-client-credentials-grant-payments}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{rs}}/open-banking/v3.1/callback-urls",
									"host": [
										"{{rs}}"
									],
									"path": [
										"open-banking",
										"v3.1",
										"callback-urls"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CBPII v3.1",
					"item": [
						{
							"name": "funds-confirmation-consents",
							"item": [
								{
									"name": "POST  funds-confirmation-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"",
													"postman.setEnvironmentVariable(\"funds-confirmation-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"request-scope\", 'fundsconfirmations');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-fundsconfirmations}}"
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "Mon, 19 Oct 2018 08:51:49 GMT",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n    \t\"ExpirationDateTime\": \"2021-05-02T00:00:00+00:00\",\r\n    \t\"DebtorAccount\": {\r\n            \t\"SchemeName\": \"SortCodeAccountNumber\",\r\n            \t\"Identification\": \"70000170000001\",\r\n            \t\"Name\": \"Dr Foo\"\r\n        \t}\r\n    }\r\n}\r\n"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/cbpii/funds-confirmation-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"cbpii",
												"funds-confirmation-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "GET funds-confirmation-consents",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-fundsconfirmations}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/cbpii/funds-confirmation-consents/{{funds-confirmation-consent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"cbpii",
												"funds-confirmation-consents",
												"{{funds-confirmation-consent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "DELETE funds-confirmation-consents",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-fundsconfirmations}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/cbpii/funds-confirmation-consents/{{funds-confirmation-consent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"cbpii",
												"funds-confirmation-consents",
												"{{funds-confirmation-consent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "POST funds-confirmations",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{uuid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-fundsconfirmations}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{funds-confirmation-consent-id}}\",\n        \"Reference\": \"xxxxx\",\n        \"InstructedAmount\": {\n        \t\"Amount\": \"1927.00\",\n        \t\"Currency\": \"GBP\"\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/cbpii/funds-confirmations",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"cbpii",
												"funds-confirmations"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						}
					]
				},
				{
					"name": "CIBA - Mode B - With Debtor Account",
					"item": [
						{
							"name": "Register Device",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"device_id\", jsonData.data.device.deviceId);",
											"postman.setEnvironmentVariable(\"shortDeviceId\", jsonData.data.device.shortDeviceId);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"Data\": {\n\t\t\"UserName\": \"mits\",\n\t\t\"Password\": \"mits\",\n\t\t\"DeviceToken\": \"c5IRGtxFKBc:APA91bGyAO9wRJTrPUQtvrmphj7Ok_46YpkDWWUGTJZSn6Lugo-PYaLYIQBaq__oBukDx1_vao5YvEKat2UqCtdUnnC7NW0AAUql073INuUmfjHrRE3G1m1JpMxI9kEJ94qEW6NT7AGW\"\n\t}\n}"
								},
								"url": {
									"raw": "{{issuer}}/register",
									"host": [
										"{{issuer}}"
									],
									"path": [
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 1 - Client Credentials Grant (payments scope)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "payments openid",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{tokenEndpoint}}",
									"host": [
										"{{tokenEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 2: POST domestic-payment-consents With Debtor",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
											"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
											"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
											"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
											"const uuid = require('uuid'); ",
											"pm.environment.set(\"interactionId\", uuid.v4());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-customer-last-logged-time",
										"value": "{{now}}",
										"disabled": true
									},
									{
										"key": "x-fapi-customer-ip-address",
										"value": "10.1.1.10"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-client-credentials-grant-payments}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"Data\": {\r\n\t\t\"Initiation\": {\r\n\t\t\t\"InstructionIdentification\": \"SIDP02\",\r\n\t\t\t\"EndToEndIdentification\": \"FRESCO.21302.GFX.20\",\r\n\t\t\t\"InstructedAmount\": {\r\n\t\t\t\t\"Amount\": \"15.00\",\r\n\t\t\t\t\"Currency\": \"GBP\"\r\n\t\t\t},\r\n\t\t\t\"CreditorAccount\": {\r\n\t\t\t\t\"SchemeName\": \"SortCodeAccountNumber\",\r\n\t\t\t\t\"Identification\": \"50000120050999\",\r\n\t\t\t\t\"Name\": \"Messers Simplex & C\"\r\n\t\t\t},\r\n\r\n        \t\"DebtorAccount\": {\r\n            \t\"SchemeName\": \"SortCodeAccountNumber\",\r\n            \t\"Identification\": \"50000120050103\"\r\n        \t}\t\t\t\r\n\t\t}\r\n\t},\r\n\t\"Risk\": {}\r\n}"
								},
								"url": {
									"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payment-consents",
									"host": [
										"{{rs}}"
									],
									"path": [
										"open-banking",
										"v3.1",
										"pisp",
										"domestic-payment-consents"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 3: GET bc-authorize url",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"requestObject\", responseBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									}
								],
								"url": {
									"raw": "{{rs}}/o3/v1.0/bc-authorize-url/{{intent-id}}?mode=C&alg=none",
									"host": [
										"{{rs}}"
									],
									"path": [
										"o3",
										"v1.0",
										"bc-authorize-url",
										"{{intent-id}}"
									],
									"query": [
										{
											"key": "mode",
											"value": "C"
										},
										{
											"key": "alg",
											"value": "none"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 4: bc-authorize - Mode C",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"auth-req-id\", jsonData.auth_req_id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "request",
											"value": "{{requestObject}}",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "openid payments",
											"type": "text",
											"disabled": true
										},
										{
											"key": "client_notification_token",
											"value": "{{$guid}}",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "https://o3in-auth1.o3bank.co.uk:4201/bc-authorize",
									"protocol": "https",
									"host": [
										"o3in-auth1",
										"o3bank",
										"co",
										"uk"
									],
									"port": "4201",
									"path": [
										"bc-authorize"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 5: QR Code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.qrserver.com/v1/create-qr-code/?data={{payment-consent-id}}:{{auth-req-id}}",
									"protocol": "https",
									"host": [
										"api",
										"qrserver",
										"com"
									],
									"path": [
										"v1",
										"create-qr-code",
										""
									],
									"query": [
										{
											"key": "size",
											"value": "10x10",
											"disabled": true
										},
										{
											"key": "data",
											"value": "{{payment-consent-id}}:{{auth-req-id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 6: Auto-authorize (without debtor account)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic {{device_id}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "intent_id",
											"value": "{{intent-id}}",
											"type": "text"
										},
										{
											"key": "auth_req_id",
											"value": "{{auth-req-id}}",
											"type": "text"
										},
										{
											"key": "user_name",
											"value": "mits",
											"type": "text",
											"disabled": true
										},
										{
											"key": "password",
											"value": "mits",
											"type": "text",
											"disabled": true
										},
										{
											"key": "debtorAccountScan",
											"value": "1234512345",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{issuer}}/ciba/authorize",
									"host": [
										"{{issuer}}"
									],
									"path": [
										"ciba",
										"authorize"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 8: Retrieve access token (CIBA)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "urn:openid:params:grant-type:ciba",
											"type": "text"
										},
										{
											"key": "auth_req_id",
											"value": "{{auth-req-id}}",
											"type": "text"
										},
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{tokenEndpoint}}",
									"host": [
										"{{tokenEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 9: POST payments",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.DomesticPaymentId);",
											"postman.setEnvironmentVariable(\"payment-type\", 'domestic-payments');",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
											"const uuid = require('uuid'); ",
											"pm.environment.set(\"interactionId\", uuid.v4());",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-customer-last-logged-time",
										"value": "{{now}}",
										"disabled": true
									},
									{
										"key": "x-fapi-customer-ip-address",
										"value": "10.1.1.10"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-auth-code-grant-payments}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\":  {{Initiation}}\n    },\n    \"Risk\": {}\n}"
								},
								"url": {
									"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payments",
									"host": [
										"{{rs}}"
									],
									"path": [
										"open-banking",
										"v3.1",
										"pisp",
										"domestic-payments"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "CIBA - Mode B - Without Debtor Account",
					"item": [
						{
							"name": "Register Device",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"device_id\", jsonData.data.device.deviceId);",
											"postman.setEnvironmentVariable(\"shortDeviceId\", jsonData.data.device.shortDeviceId);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"Data\": {\n\t\t\"UserName\": \"mits\",\n\t\t\"Password\": \"mits\",\n\t\t\"DeviceToken\": \"c5IRGtxFKBc:APA91bGyAO9wRJTrPUQtvrmphj7Ok_46YpkDWWUGTJZSn6Lugo-PYaLYIQBaq__oBukDx1_vao5YvEKat2UqCtdUnnC7NW0AAUql073INuUmfjHrRE3G1m1JpMxI9kEJ94qEW6NT7AGW\"\n\t}\n}"
								},
								"url": {
									"raw": "{{issuer}}/register",
									"host": [
										"{{issuer}}"
									],
									"path": [
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 1 - Client Credentials Grant (payments scope)",
							"event": [
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
											""
										]
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "payments openid",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{tokenEndpoint}}",
									"host": [
										"{{tokenEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 2: POST domestic-payment-consents",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
											"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
											"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
											"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
											"const uuid = require('uuid'); ",
											"pm.environment.set(\"interactionId\", uuid.v4());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-customer-last-logged-time",
										"value": "{{now}}",
										"disabled": true
									},
									{
										"key": "x-fapi-customer-ip-address",
										"value": "10.1.1.10"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-client-credentials-grant-payments}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"Data\": {\r\n\t\t\"Initiation\": {\r\n\t\t\t\"InstructionIdentification\": \"SIDP02\",\r\n\t\t\t\"EndToEndIdentification\": \"FRESCO.21302.GFX.20\",\r\n\t\t\t\"InstructedAmount\": {\r\n\t\t\t\t\"Amount\": \"15.00\",\r\n\t\t\t\t\"Currency\": \"GBP\"\r\n\t\t\t},\r\n\t\t\t\"CreditorAccount\": {\r\n\t\t\t\t\"SchemeName\": \"SortCodeAccountNumber\",\r\n\t\t\t\t\"Identification\": \"50000120050999\",\r\n\t\t\t\t\"Name\": \"Messers Simplex & C\"\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t},\r\n\t\"Risk\": {}\r\n}"
								},
								"url": {
									"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payment-consents",
									"host": [
										"{{rs}}"
									],
									"path": [
										"open-banking",
										"v3.1",
										"pisp",
										"domestic-payment-consents"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 3: GET bc-authorize url",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"requestObject\", responseBody);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									}
								],
								"url": {
									"raw": "{{rs}}/o3/v1.0/bc-authorize-url/{{intent-id}}?mode=C&alg=none",
									"host": [
										"{{rs}}"
									],
									"path": [
										"o3",
										"v1.0",
										"bc-authorize-url",
										"{{intent-id}}"
									],
									"query": [
										{
											"key": "mode",
											"value": "C"
										},
										{
											"key": "alg",
											"value": "none"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 4: bc-authorize - Mode C",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"auth-req-id\", jsonData.auth_req_id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "request",
											"value": "{{requestObject}}",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "openid payments",
											"type": "text",
											"disabled": true
										},
										{
											"key": "client_notification_token",
											"value": "{{$guid}}",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{issuer}}/bc-authorize",
									"host": [
										"{{issuer}}"
									],
									"path": [
										"bc-authorize"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 5: QR Code",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.qrserver.com/v1/create-qr-code/?data={{payment-consent-id}}:{{auth-req-id}}",
									"protocol": "https",
									"host": [
										"api",
										"qrserver",
										"com"
									],
									"path": [
										"v1",
										"create-qr-code",
										""
									],
									"query": [
										{
											"key": "size",
											"value": "10x10",
											"disabled": true
										},
										{
											"key": "data",
											"value": "{{payment-consent-id}}:{{auth-req-id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 6: Auto-authorize (debtor account)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic {{device_id}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "intent_id",
											"value": "{{intent-id}}",
											"type": "text"
										},
										{
											"key": "auth_req_id",
											"value": "{{auth-req-id}}",
											"type": "text"
										},
										{
											"key": "account",
											"value": "500004000000000000000002",
											"type": "text"
										},
										{
											"key": "password",
											"value": "mits",
											"type": "text",
											"disabled": true
										},
										{
											"key": "debtorAccountScan",
											"value": "1234512345",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{issuer}}/ciba/authorizeWithAccount",
									"host": [
										"{{issuer}}"
									],
									"path": [
										"ciba",
										"authorizeWithAccount"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 8: Retrieve access token (CIBA)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "urn:openid:params:grant-type:ciba",
											"type": "text"
										},
										{
											"key": "auth_req_id",
											"value": "{{auth-req-id}}",
											"type": "text"
										},
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										},
										{
											"key": "",
											"value": "",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "{{tokenEndpoint}}",
									"host": [
										"{{tokenEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 9: POST payments",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.DomesticPaymentId);",
											"postman.setEnvironmentVariable(\"payment-type\", 'domestic-payments');",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
											"const uuid = require('uuid'); ",
											"pm.environment.set(\"interactionId\", uuid.v4());",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-customer-last-logged-time",
										"value": "{{now}}",
										"disabled": true
									},
									{
										"key": "x-fapi-customer-ip-address",
										"value": "10.1.1.10"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-auth-code-grant-payments}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\":  {{Initiation}}\n    },\n    \"Risk\": {}\n}"
								},
								"url": {
									"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payments",
									"host": [
										"{{rs}}"
									],
									"path": [
										"open-banking",
										"v3.1",
										"pisp",
										"domestic-payments"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Open Banking Sequences",
			"item": [
				{
					"name": "OBIE v3.1.11",
					"item": [
						{
							"name": "AIS Flow - HH",
							"item": [
								{
									"name": "Step 1: Client Credentials Grant (accounts scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-accounts\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "accounts openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST  account-access-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"account-access-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"request-scope\", 'accounts');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-accounts}}"
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "Mon, 19 Oct 2018 08:51:49 GMT",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"Permissions\": [\r\n            \"ReadAccountsBasic\",\r\n            \"ReadAccountsDetail\",\r\n            \"ReadBalances\",\r\n            \"ReadBeneficiariesBasic\",\r\n            \"ReadBeneficiariesDetail\",\r\n            \"ReadDirectDebits\",\r\n            \"ReadTransactionsBasic\",\r\n            \"ReadTransactionsCredits\",\r\n            \"ReadTransactionsDebits\",\r\n            \"ReadTransactionsDetail\",\r\n            \"ReadProducts\",\r\n            \"ReadStandingOrdersDetail\",\r\n            \"ReadProducts\",\r\n            \"ReadStandingOrdersDetail\",\r\n            \"ReadStatementsDetail\",\r\n            \"ReadParty\",\r\n            \"ReadPartyPSU\",\r\n            \"ReadOffers\",\r\n            \"ReadScheduledPaymentsBasic\",\r\n            \"ReadScheduledPaymentsDetail\"\r\n        ],\r\n        \"TransactionFromDateTime\": \"2016-01-01T10:40:00.415Z\",\r\n        \"TransactionToDateTime\": \"2025-12-31T10:40:00.415Z\"\r\n    },\r\n    \"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/account-access-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"account-access-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												},
												{
													"key": "responseType",
													"value": "code",
													"disabled": true
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "3003: ASPSP-O3 Call headless-heimdall auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"consent-id-from-hh\", jsonData.interaction.params.claims.id_token.openbanking_intent_id.value);\r",
													"postman.setEnvironmentVariable(\"interaction-id\", jsonData.interaction.interactionId);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDgyMS44OSwiaWF0IjoxNjA5MTIwODExLjg5LCJuYmYiOjE2MDkxMjA4MTEuODksImp0aSI6IjdhNzVlYmU4LTMxZjktNDU2Yy1iNWU1LTlmOTJkMmMzOTkxOCJ9.O1rBKF87h7LqHgC5sd4pHuVPuKn2CP-feD7xZ1wCT77dfLU8HDDug3zcZdbcMOKH7cnb59MWKTgCcd3aGHfUsfVdT2cE2LrU_pPG7IW1km2Qri89M65241iUR8Ra_By3lULV4AwVywMH7dgjFCWFLWTbQW9idcImt0h9MaSTQyjErPO9Mkp64XqIvIz6lYOhWe6wwZpB5b2S6F6ysDfXkQbkEccKuDNgQAB0_Eh_I_4E9JZU6j_NyxDg6mlT2y1nozX_3-5dGKhgdU4IleqRK8qASosSSSAvjqfeE-3vkbahAcrdM6E8oQaoz2m6hMr5TRpuBF6LRJjqpu2G-KPU7w",
												"disabled": true
											},
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{authCodeUrl}}",
											"host": [
												"{{authCodeUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "3005: ASPSP - O3 Retrieve a consent by its id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB"
											},
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{cs}}/v2.2/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2.2",
												"consents",
												"{{consent-id-from-hh}}"
											],
											"query": [
												{
													"key": "authorization",
													"value": "foo",
													"disabled": true
												},
												{
													"key": "x-cert-dn",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4003: ASPSP-O3: Patch the consent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											},
											{
												"key": "content-type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"psuIdentifiers\": {\r\n        \"userId\": \"{{userId}}\"\r\n    },\r\n    \"accountIds\": {{accountIds}},\r\n    \"consentBody.Data.Status\": \"Authorised\"\r\n}"
										},
										"url": {
											"raw": "{{cs}}/v2.2/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2.2",
												"consents",
												"{{consent-id-from-hh}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "4005: ASPSP-O3: Confirm with Heimdall",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													" postman.setEnvironmentVariable(\"authorizationCode\", responseBody);\r",
													"  "
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "heimdall.suppressRefreshToken",
													"value": "false",
													"type": "text"
												},
												{
													"key": "heimdall.accessTokenValidity",
													"value": "3600",
													"type": "text",
													"disabled": true
												},
												{
													"key": "heimdall.refreshTokenValidity",
													"value": "7200",
													"type": "text",
													"disabled": true
												},
												{
													"key": "openbanking_intent_id",
													"value": "{{consent-id-from-hh}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{authEndpoint}}/{{interaction-id}}/doConfirm",
											"host": [
												"{{authEndpoint}}"
											],
											"path": [
												"{{interaction-id}}",
												"doConfirm"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (accounts scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-accounts\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "accounts ",
													"type": "text"
												},
												{
													"key": "code",
													"value": "{{authorizationCode}}",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										},
										"description": "Copy the authorization code generated into the browser into the **Body** tab in the `code` parameter"
									},
									"response": []
								},
								{
									"name": "Step 5: GET account-access-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/account-access-consents/{{account-access-consent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"account-access-consents",
												"{{account-access-consent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"account-id\", jsonData.Data.Account[0].AccountId);",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true,
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET account/{accountId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/balances",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/balances",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}",
												"balances"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET balances",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/balances",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"balances"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/beneficiaries",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/beneficiaries",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}",
												"beneficiaries"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET beneficiaries",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/beneficiaries",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"beneficiaries"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/direct-debits",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/direct-debits",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}",
												"direct-debits"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET  direct-debits",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/direct-debits",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"direct-debits"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/offers",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/offers",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}",
												"offers"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET offers",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/offers",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"offers"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/parties",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/parties",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}",
												"parties"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET accounts/{AccountId}/party",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/party",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}",
												"party"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET party",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/party",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"party"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET  accounts/{AccountId}/product",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {},
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/product",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}",
												"product"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET products",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/products",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"products"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/scheduled-payments",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/scheduled-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}",
												"scheduled-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET  scheduled-payments",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/scheduled-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"scheduled-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/standing-orders",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/standing-orders",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}",
												"standing-orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET standing-orders",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/standing-orders",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"standing-orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET account/{accountId}/statements",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"statement-id\", jsonData.Data.Statement[0].StatementId);",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/statements",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}",
												"statements"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET account/{accountId}/statement{{statement-id}}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/statements/{{statement-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}",
												"statements",
												"{{statement-id}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4: GET account/{accountId}/statements/{statementId}}/transactions",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/statements/{{statement-id}}/transactions",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}",
												"statements",
												"{{statement-id}}",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 5: GET statements",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/statements",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"statements"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET account/{accountId}/statement{{statement-id}}/file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/statements/{{statement-id}}/file",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}",
												"statements",
												"{{statement-id}}",
												"file"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/transactions",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/transactions",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET transactions",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/transactions",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: DELETE account-access-consents/{ConsentId}",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-accounts}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/account-access-consents/{{account-access-consent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"account-access-consents",
												"{{account-access-consent-id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "AIS Flow - UI",
							"item": [
								{
									"name": "Step 1: Client Credentials Grant (accounts scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-accounts\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "accounts openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST  account-access-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"account-access-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"request-scope\", 'accounts');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-accounts}}"
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "Mon, 19 Oct 2018 08:51:49 GMT",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"Permissions\": [\r\n            \"ReadAccountsBasic\",\r\n            \"ReadAccountsDetail\",\r\n            \"ReadBalances\",\r\n            \"ReadBeneficiariesBasic\",\r\n            \"ReadBeneficiariesDetail\",\r\n            \"ReadDirectDebits\",\r\n            \"ReadTransactionsBasic\",\r\n            \"ReadTransactionsCredits\",\r\n            \"ReadTransactionsDebits\",\r\n            \"ReadTransactionsDetail\",\r\n            \"ReadProducts\",\r\n            \"ReadStandingOrdersDetail\",\r\n            \"ReadProducts\",\r\n            \"ReadStandingOrdersDetail\",\r\n            \"ReadStatementsDetail\",\r\n            \"ReadParty\",\r\n            \"ReadPartyPSU\",\r\n            \"ReadOffers\",\r\n            \"ReadScheduledPaymentsBasic\",\r\n            \"ReadScheduledPaymentsDetail\"\r\n        ],\r\n        \"TransactionFromDateTime\": \"2016-01-01T10:40:00.415Z\",\r\n        \"TransactionToDateTime\": \"2025-12-31T10:40:00.415Z\"\r\n    },\r\n    \"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/account-access-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"account-access-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												},
												{
													"key": "responseType",
													"value": "code",
													"disabled": true
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (accounts scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-accounts\", jsonData.access_token);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "accounts ",
													"type": "text"
												},
												{
													"key": "code",
													"value": "3276b931-3860-4fcf-bf46-85232cf95b9a",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										},
										"description": "Copy the authorization code generated into the browser into the **Body** tab in the `code` parameter"
									},
									"response": []
								},
								{
									"name": "Step 5: GET account-access-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/account-access-consents/{{account-access-consent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"account-access-consents",
												"{{account-access-consent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"account-id\", jsonData.Data.Account[0].AccountId);",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true,
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET account/{accountId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/balances",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/balances",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}",
												"balances"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET balances",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/balances",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"balances"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/beneficiaries",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/beneficiaries",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}",
												"beneficiaries"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET beneficiaries",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/beneficiaries",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"beneficiaries"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/direct-debits",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/direct-debits",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}",
												"direct-debits"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET  direct-debits",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/direct-debits",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"direct-debits"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/offers",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/offers",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}",
												"offers"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET offers",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/offers",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"offers"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/parties",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/parties",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}",
												"parties"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET accounts/{AccountId}/party",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/party",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}",
												"party"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET party",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/party",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"party"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET  accounts/{AccountId}/product",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {},
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/product",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}",
												"product"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET products",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/products",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"products"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/scheduled-payments",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/scheduled-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}",
												"scheduled-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET  scheduled-payments",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/scheduled-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"scheduled-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/standing-orders",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/standing-orders",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}",
												"standing-orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET standing-orders",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/standing-orders",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"standing-orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET account/{accountId}/statements",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"statement-id\", jsonData.Data.Statement[0].StatementId);",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/statements",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}",
												"statements"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET account/{accountId}/statement{{statement-id}}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/statements/{{statement-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}",
												"statements",
												"{{statement-id}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET account/{accountId}/statement{{statement-id}}/file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/statements/{{statement-id}}/file",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}",
												"statements",
												"{{statement-id}}",
												"file"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4: GET account/{accountId}/statements/{statementId}}/transactions",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/statements/{{statement-id}}/transactions",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}",
												"statements",
												"{{statement-id}}",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 5: GET statements",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/statements",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"statements"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/transactions",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/transactions",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"accounts",
												"{{account-id}}",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET transactions",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/transactions",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: DELETE account-access-consents/{ConsentId}",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-accounts}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/aisp/account-access-consents/{{account-access-consent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"aisp",
												"account-access-consents",
												"{{account-access-consent-id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "PIS Flow - Single Domestic Payments Headless",
							"item": [
								{
									"name": "Step 1: POST Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST domestic-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"",
													"const data1 = {",
													"    \"Data\": {",
													"        \"Initiation\": {",
													"            \"InstructionIdentification\": pm.environment.get(\"randomString-1\"),",
													"            \"EndToEndIdentification\": pm.environment.get(\"randomString-2\"),",
													"            \"InstructedAmount\": {",
													"                \"Amount\": pm.environment.get(\"randomPrice\"),",
													"                \"Currency\": \"GBP\"",
													"            },",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",",
													"                \"Identification\": \"000000\" + pm.environment.get(\"randomBankAccount\"),",
													"                \"Name\": pm.environment.get(\"randomCompanyName\")",
													"            },",
													"            \"RemittanceInformation\": {",
													"                \"Reference\": \"Remitce ormation\",",
													"                \"Unstructured\": pm.environment.get(\"randomCreditCardMask\") + \" \" + pm.environment.get(\"randomLoremWords\")",
													"            }",
													"        }",
													"    },",
													"    \"Risk\": {}",
													"}",
													"",
													"",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"",
													"var options = {",
													"",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.d",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"Initiation\": {\r\n            \"InstructionIdentification\": \"{{randomString-1}}\",\r\n            \"EndToEndIdentification\": \"{{randomString-2}}\",\r\n            \"InstructedAmount\": {\r\n                \"Amount\": \"{{randomPrice}}\",\r\n                \"Currency\": \"GBP\"\r\n            },\r\n            \"CreditorAccount\": {\r\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\r\n                \"Identification\": \"000000{{randomBankAccount}}\",\r\n                \"Name\": \"{{randomCompanyName}}\"\r\n            },\r\n            \"RemittanceInformation\": {\r\n                \"Reference\": \"Remitce ormation\",\r\n                \"Unstructured\": \"{{randomCreditCardMask}} {{randomLoremWords}}\"\r\n            }\r\n        }\r\n    },\r\n    \"Risk\": {}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "3003: O3 Call headless-heimdall auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"let jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"consent-id-from-hh\", jsonData.interaction.params.claims.id_token.openbanking_intent_id.value);\r",
													"postman.setEnvironmentVariable(\"interaction-id\", jsonData.interaction.interactionId);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDgyMS44OSwiaWF0IjoxNjA5MTIwODExLjg5LCJuYmYiOjE2MDkxMjA4MTEuODksImp0aSI6IjdhNzVlYmU4LTMxZjktNDU2Yy1iNWU1LTlmOTJkMmMzOTkxOCJ9.O1rBKF87h7LqHgC5sd4pHuVPuKn2CP-feD7xZ1wCT77dfLU8HDDug3zcZdbcMOKH7cnb59MWKTgCcd3aGHfUsfVdT2cE2LrU_pPG7IW1km2Qri89M65241iUR8Ra_By3lULV4AwVywMH7dgjFCWFLWTbQW9idcImt0h9MaSTQyjErPO9Mkp64XqIvIz6lYOhWe6wwZpB5b2S6F6ysDfXkQbkEccKuDNgQAB0_Eh_I_4E9JZU6j_NyxDg6mlT2y1nozX_3-5dGKhgdU4IleqRK8qASosSSSAvjqfeE-3vkbahAcrdM6E8oQaoz2m6hMr5TRpuBF6LRJjqpu2G-KPU7w",
												"disabled": true
											},
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{authCodeUrl}}",
											"host": [
												"{{authCodeUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "3005: O3 Retrieve a consent by its id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB"
											},
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{cs}}/v2.2/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2.2",
												"consents",
												"{{consent-id-from-hh}}"
											],
											"query": [
												{
													"key": "authorization",
													"value": "foo",
													"disabled": true
												},
												{
													"key": "x-cert-dn",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4003: O3: Patch the consent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											},
											{
												"key": "content-type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"psuIdentifiers\": {\r\n        \"userId\": \"{{userId}}\"\r\n    },\r\n\r\n    \"accountIds\": {{accountIds}},\r\n    \"consentBody.Data.Status\": \"Authorised\"\r\n}"
										},
										"url": {
											"raw": "{{cs}}/v2.2/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2.2",
												"consents",
												"{{consent-id-from-hh}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "4005: O3: Confirm with Heimdall",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authorizationCode\", responseBody);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "heimdall.suppressRefreshToken",
													"value": "false",
													"type": "text"
												},
												{
													"key": "heimdall.accessTokenValidity",
													"value": "3600",
													"type": "text",
													"disabled": true
												},
												{
													"key": "heimdall.refreshTokenValidity",
													"value": "7200",
													"type": "text",
													"disabled": true
												},
												{
													"key": "openbanking_intent_id",
													"value": "{{consent-id-from-hh}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{authEndpoint}}/{{interaction-id}}/doConfirm",
											"host": [
												"{{authEndpoint}}"
											],
											"path": [
												"{{interaction-id}}",
												"doConfirm"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments",
													"type": "text"
												},
												{
													"key": "code",
													"value": "{{authorizationCode}}",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 5: GET domestic-payment-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: GET domestic-payment-consents/funds-confirmation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payment-consents/{{intent-id}}/funds-confirmation",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-payment-consents",
												"{{intent-id}}",
												"funds-confirmation"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: POST domestic-payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.DomesticPaymentId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'domestic-payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//  set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\"))",
													"    },",
													"    \"Risk\": {}",
													"}",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"var options = {",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}}\n    },\n    \"Risk\": {}\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: GET domestic-payments/{DomesticPaymentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payments/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-payments",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 9: GET domestic-payments/{DomesticPaymentId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payments/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-payments",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "PIS Flow - Single Domestic Payments UI",
							"item": [
								{
									"name": "Step 1: POST Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST domestic-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"",
													"const data1 = {",
													"    \"Data\": {",
													"        \"Initiation\": {",
													"            \"InstructionIdentification\": pm.environment.get(\"randomString-1\"),",
													"            \"EndToEndIdentification\": pm.environment.get(\"randomString-2\"),",
													"            \"InstructedAmount\": {",
													"                \"Amount\": pm.environment.get(\"randomPrice\"),",
													"                \"Currency\": \"GBP\"",
													"            },",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",",
													"                \"Identification\": \"000000\" + pm.environment.get(\"randomBankAccount\"),",
													"                \"Name\": pm.environment.get(\"randomCompanyName\")",
													"            },",
													"            \"RemittanceInformation\": {",
													"                \"Reference\": \"Remitce ormation\",",
													"                \"Unstructured\": pm.environment.get(\"randomCreditCardMask\") + \" \" + pm.environment.get(\"randomLoremWords\")",
													"            }",
													"        }",
													"    },",
													"    \"Risk\": {}",
													"}",
													"",
													"",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"",
													"var options = {",
													"",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.tc",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"Initiation\": {\r\n            \"InstructionIdentification\": \"{{randomString-1}}\",\r\n            \"EndToEndIdentification\": \"{{randomString-2}}\",\r\n            \"InstructedAmount\": {\r\n                \"Amount\": \"{{randomPrice}}\",\r\n                \"Currency\": \"GBP\"\r\n            },\r\n            \"CreditorAccount\": {\r\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\r\n                \"Identification\": \"000000{{randomBankAccount}}\",\r\n                \"Name\": \"{{randomCompanyName}}\"\r\n            },\r\n            \"RemittanceInformation\": {\r\n                \"Reference\": \"Remitce ormation\",\r\n                \"Unstructured\": \"{{randomCreditCardMask}} {{randomLoremWords}}\"\r\n            }\r\n        }\r\n    },\r\n    \"Risk\": {}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments",
													"type": "text"
												},
												{
													"key": "code",
													"value": "b7d42b52-c50f-4516-a2b6-20f2746a2d9d",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 5: GET domestic-payment-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: GET domestic-payment-consents/funds-confirmation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payment-consents/{{intent-id}}/funds-confirmation",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-payment-consents",
												"{{intent-id}}",
												"funds-confirmation"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: POST domestic-payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.DomesticPaymentId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'domestic-payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//  set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\"))",
													"    },",
													"    \"Risk\": {}",
													"}",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"var options = {",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}}\n    },\n    \"Risk\": {}\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: GET domestic-payments/{DomesticPaymentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payments/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-payments",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 9: GET domestic-payments/{DomesticPaymentId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payments/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-payments",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "PIS Flow - Domestic Scheduled Payments Headless",
							"item": [
								{
									"name": "Step 1: Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST domestic-scheduled-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"",
													"const data1 = {",
													"",
													"",
													"    \"Data\": {",
													"        \"Permission\": \"Create\",",
													"        \"Initiation\": {",
													"            \"RequestedExecutionDateTime\": pm.environment.get(\"randomDateFuture\"),",
													"            \"InstructionIdentification\": pm.environment.get(\"randomString-1\"),",
													"            \"EndToEndIdentification\": pm.environment.get(\"randomString-2\"),",
													"            \"InstructedAmount\": {",
													"                \"Amount\": pm.environment.get(\"randomPrice\"),",
													"                \"Currency\": \"GBP\"",
													"            },",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"SortCodeAccountNumber\",",
													"                \"Identification\": \"000000\" + pm.environment.get(\"randomBankAccount\"),",
													"                \"Name\": pm.environment.get(\"randomCompanyName\")",
													"            },",
													"            \"RemittanceInformation\": {",
													"                \"Reference\": \"Remitce ormation\"",
													"            }",
													"        }",
													"    },",
													"    \"Risk\": {}",
													"",
													"}",
													"",
													"pm.environment.set(\"data1\", data1)",
													"",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"",
													"var options = {",
													"",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"",
													"    }",
													"};",
													"",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.tc",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"Permission\": \"Create\",\r\n        \"Initiation\": {\r\n            \"RequestedExecutionDateTime\": \"{{randomDateFuture}}\",\r\n            \"InstructionIdentification\": \"{{randomString-1}}\",\r\n            \"EndToEndIdentification\": \"{{randomString-2}}\",\r\n            \"InstructedAmount\": {\r\n                \"Amount\": \"{{randomPrice}}\",\r\n                \"Currency\": \"GBP\"\r\n            },\r\n            \"CreditorAccount\": {\r\n                \"SchemeName\": \"SortCodeAccountNumber\",\r\n                \"Identification\": \"000000{{randomBankAccount}}\",\r\n                \"Name\": \"{{randomCompanyName}}\"\r\n            },\r\n            \"RemittanceInformation\": {\r\n                \"Reference\": \"Remitce ormation\"\r\n            }\r\n        }\r\n    },\r\n    \"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-scheduled-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-scheduled-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "3003: O3 Call headless-heimdall auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"consent-id-from-hh\", jsonData.interaction.params.claims.id_token.openbanking_intent_id.value);\r",
													"postman.setEnvironmentVariable(\"interaction-id\", jsonData.interaction.interactionId);\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDgyMS44OSwiaWF0IjoxNjA5MTIwODExLjg5LCJuYmYiOjE2MDkxMjA4MTEuODksImp0aSI6IjdhNzVlYmU4LTMxZjktNDU2Yy1iNWU1LTlmOTJkMmMzOTkxOCJ9.O1rBKF87h7LqHgC5sd4pHuVPuKn2CP-feD7xZ1wCT77dfLU8HDDug3zcZdbcMOKH7cnb59MWKTgCcd3aGHfUsfVdT2cE2LrU_pPG7IW1km2Qri89M65241iUR8Ra_By3lULV4AwVywMH7dgjFCWFLWTbQW9idcImt0h9MaSTQyjErPO9Mkp64XqIvIz6lYOhWe6wwZpB5b2S6F6ysDfXkQbkEccKuDNgQAB0_Eh_I_4E9JZU6j_NyxDg6mlT2y1nozX_3-5dGKhgdU4IleqRK8qASosSSSAvjqfeE-3vkbahAcrdM6E8oQaoz2m6hMr5TRpuBF6LRJjqpu2G-KPU7w",
												"disabled": true
											},
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{authCodeUrl}}",
											"host": [
												"{{authCodeUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "3005: O3 Retrieve a consent by its id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB"
											},
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{cs}}/v2.2/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2.2",
												"consents",
												"{{consent-id-from-hh}}"
											],
											"query": [
												{
													"key": "authorization",
													"value": "foo",
													"disabled": true
												},
												{
													"key": "x-cert-dn",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4003: O3: Patch the consent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											},
											{
												"key": "content-type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"psuIdentifiers\": {\r\n        \"userId\": \"{{userId}}\"\r\n    },\r\n\r\n    \"accountIds\": {{accountIds}},\r\n    \"consentBody.Data.Status\": \"Authorised\"\r\n}"
										},
										"url": {
											"raw": "{{cs}}/v2.2/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2.2",
												"consents",
												"{{consent-id-from-hh}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "4005: O3: Confirm with Heimdall",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authorizationCode\", responseBody);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "heimdall.suppressRefreshToken",
													"value": "false",
													"type": "text"
												},
												{
													"key": "heimdall.accessTokenValidity",
													"value": "3600",
													"type": "text",
													"disabled": true
												},
												{
													"key": "heimdall.refreshTokenValidity",
													"value": "7200",
													"type": "text",
													"disabled": true
												},
												{
													"key": "openbanking_intent_id",
													"value": "{{consent-id-from-hh}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{authEndpoint}}/{{interaction-id}}/doConfirm",
											"host": [
												"{{authEndpoint}}"
											],
											"path": [
												"{{interaction-id}}",
												"doConfirm"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments",
													"type": "text"
												},
												{
													"key": "code",
													"value": "{{authorizationCode}}",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 5: GET domestic-scheduled-payment-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-scheduled-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: POST domestic-scheduled-payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.DomesticScheduledPaymentId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'domestic-scheduled-payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\"))",
													"    },",
													"    \"Risk\": {}",
													"}",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"var options = {",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}}\n    },\n    \"Risk\": {}\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-scheduled-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-scheduled-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: GET domestic-scheduled-payments/{DomesticScheduledPaymentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-scheduled-payments/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-scheduled-payments",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: GET  domestic-scheduled-payments/{DomesticScheduledPaymentId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-scheduled-payments/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-scheduled-payments",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "PIS Flow - Domestic Scheduled Payments UI",
							"item": [
								{
									"name": "Step 1: Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST domestic-scheduled-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"",
													"const data1 = {",
													"",
													"",
													"    \"Data\": {",
													"        \"Permission\": \"Create\",",
													"        \"Initiation\": {",
													"            \"RequestedExecutionDateTime\": pm.environment.get(\"randomDateFuture\"),",
													"            \"InstructionIdentification\": pm.environment.get(\"randomString-1\"),",
													"            \"EndToEndIdentification\": pm.environment.get(\"randomString-2\"),",
													"            \"InstructedAmount\": {",
													"                \"Amount\": pm.environment.get(\"randomPrice\"),",
													"                \"Currency\": \"GBP\"",
													"            },",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"SortCodeAccountNumber\",",
													"                \"Identification\": \"000000\" + pm.environment.get(\"randomBankAccount\"),",
													"                \"Name\": pm.environment.get(\"randomCompanyName\")",
													"            },",
													"            \"RemittanceInformation\": {",
													"                \"Reference\": \"Remitce ormation\"",
													"            }",
													"        }",
													"    },",
													"    \"Risk\": {}",
													"",
													"}",
													"",
													"pm.environment.set(\"data1\", data1)",
													"",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"",
													"var options = {",
													"",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"",
													"    }",
													"};",
													"",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.tc",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"Permission\": \"Create\",\r\n        \"Initiation\": {\r\n            \"RequestedExecutionDateTime\": \"{{randomDateFuture}}\",\r\n            \"InstructionIdentification\": \"{{randomString-1}}\",\r\n            \"EndToEndIdentification\": \"{{randomString-2}}\",\r\n            \"InstructedAmount\": {\r\n                \"Amount\": \"{{randomPrice}}\",\r\n                \"Currency\": \"GBP\"\r\n            },\r\n            \"CreditorAccount\": {\r\n                \"SchemeName\": \"SortCodeAccountNumber\",\r\n                \"Identification\": \"000000{{randomBankAccount}}\",\r\n                \"Name\": \"{{randomCompanyName}}\"\r\n            },\r\n            \"RemittanceInformation\": {\r\n                \"Reference\": \"Remitce ormation\"\r\n            }\r\n        }\r\n    },\r\n    \"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-scheduled-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-scheduled-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments",
													"type": "text"
												},
												{
													"key": "code",
													"value": "62fd1b03-fbf1-44b9-989c-3a7fb4bf363f",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 5: GET domestic-scheduled-payment-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-scheduled-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-scheduled-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: POST domestic-scheduled-payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.DomesticScheduledPaymentId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'domestic-scheduled-payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\"))",
													"    },",
													"    \"Risk\": {}",
													"}",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"var options = {",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}}\n    },\n    \"Risk\": {}\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-scheduled-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-scheduled-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: GET domestic-scheduled-payments/{DomesticScheduledPaymentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-scheduled-payments/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-scheduled-payments",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: GET  domestic-scheduled-payments/{DomesticScheduledPaymentId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-scheduled-payments/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-scheduled-payments",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "PIS Flow - Domestic Standing Orders Headless",
							"item": [
								{
									"name": "Step 1: Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST domestic-standing-order-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"",
													"const data1 = {",
													"    \"Data\": {",
													"        \"Permission\": \"Create\",",
													"        \"Initiation\": {",
													"            \"Frequency\": \"EvryDay\",",
													"            \"FirstPaymentDateTime\": \"2025-07-01T13:14:25+00:00\",",
													"            \"FinalPaymentDateTime\": \"2025-07-01T15:14:25+00:00\",",
													"            \"FirstPaymentAmount\": {",
													"                \"Amount\": \"10.00\",",
													"                \"Currency\": \"GBP\"",
													"            },",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"SortCodeAccountNumber\",",
													"                \"Identification\": \"20202010981789\",",
													"                \"Name\": \"Dr Foo\"",
													"            }",
													"        }",
													"    },",
													"    \"Risk\": {}",
													"}",
													"",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"",
													"var options = {",
													"",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.it",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"Permission\": \"Create\",\r\n        \"Initiation\": {\r\n            \"Frequency\": \"EvryDay\",\r\n            \"FirstPaymentDateTime\": \"2025-07-01T13:14:25+00:00\",\r\n            \"FinalPaymentDateTime\": \"2025-07-01T15:14:25+00:00\",\r\n            \"FirstPaymentAmount\": {\r\n                \"Amount\": \"10.00\",\r\n                \"Currency\": \"GBP\"\r\n            },\r\n            \"CreditorAccount\": {\r\n                \"SchemeName\": \"SortCodeAccountNumber\",\r\n                \"Identification\": \"20202010981789\",\r\n                \"Name\": \"Dr Foo\"\r\n            }\r\n        }\r\n    },\r\n    \"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-standing-order-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-standing-order-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "3003: O3 Call headless-heimdall auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"consent-id-from-hh\", jsonData.interaction.params.claims.id_token.openbanking_intent_id.value);\r",
													"postman.setEnvironmentVariable(\"interaction-id\", jsonData.interaction.interactionId);\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDgyMS44OSwiaWF0IjoxNjA5MTIwODExLjg5LCJuYmYiOjE2MDkxMjA4MTEuODksImp0aSI6IjdhNzVlYmU4LTMxZjktNDU2Yy1iNWU1LTlmOTJkMmMzOTkxOCJ9.O1rBKF87h7LqHgC5sd4pHuVPuKn2CP-feD7xZ1wCT77dfLU8HDDug3zcZdbcMOKH7cnb59MWKTgCcd3aGHfUsfVdT2cE2LrU_pPG7IW1km2Qri89M65241iUR8Ra_By3lULV4AwVywMH7dgjFCWFLWTbQW9idcImt0h9MaSTQyjErPO9Mkp64XqIvIz6lYOhWe6wwZpB5b2S6F6ysDfXkQbkEccKuDNgQAB0_Eh_I_4E9JZU6j_NyxDg6mlT2y1nozX_3-5dGKhgdU4IleqRK8qASosSSSAvjqfeE-3vkbahAcrdM6E8oQaoz2m6hMr5TRpuBF6LRJjqpu2G-KPU7w",
												"disabled": true
											},
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{authCodeUrl}}",
											"host": [
												"{{authCodeUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "3005: O3 Retrieve a consent by its id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB"
											},
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{cs}}/v2.2/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2.2",
												"consents",
												"{{consent-id-from-hh}}"
											],
											"query": [
												{
													"key": "authorization",
													"value": "foo",
													"disabled": true
												},
												{
													"key": "x-cert-dn",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4003: O3: Patch the consent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											},
											{
												"key": "content-type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"psuIdentifiers\": {\r\n        \"userId\": \"{{userId}}\"\r\n    },\r\n\r\n    \"accountIds\": {{accountIds}},\r\n    \"consentBody.Data.Status\": \"Authorised\"\r\n}"
										},
										"url": {
											"raw": "{{cs}}/v2.2/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2.2",
												"consents",
												"{{consent-id-from-hh}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "4005: O3: Confirm with Heimdall",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authorizationCode\", responseBody);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "heimdall.suppressRefreshToken",
													"value": "false",
													"type": "text"
												},
												{
													"key": "heimdall.accessTokenValidity",
													"value": "3600",
													"type": "text",
													"disabled": true
												},
												{
													"key": "heimdall.refreshTokenValidity",
													"value": "7200",
													"type": "text",
													"disabled": true
												},
												{
													"key": "openbanking_intent_id",
													"value": "{{consent-id-from-hh}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{authEndpoint}}/{{interaction-id}}/doConfirm",
											"host": [
												"{{authEndpoint}}"
											],
											"path": [
												"{{interaction-id}}",
												"doConfirm"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments",
													"type": "text"
												},
												{
													"key": "code",
													"value": "{{authorizationCode}}",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 5: GET domestic-standing-order-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-standing-order-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-standing-order-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: POST domestic-standing-orders",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.DomesticStandingOrderId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'domestic-standing-orders');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\"))",
													"    },",
													"    \"Risk\": {}",
													"}",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"var options = {",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}}\n    },\n    \"Risk\": {}\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-standing-orders",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-standing-orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: GET domestic-standing-orders/{DomesticStandingOrderId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-standing-orders/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-standing-orders",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: GET  domestic-standing-orders/{DomesticStandingOrderId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-standing-orders/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-standing-orders",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "PIS Flow - Domestic Standing Orders UI",
							"item": [
								{
									"name": "Step 1: Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST domestic-standing-order-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"",
													"const data1 = {",
													"    \"Data\": {",
													"        \"Permission\": \"Create\",",
													"        \"Initiation\": {",
													"            \"Frequency\": \"EvryDay\",",
													"            \"FirstPaymentDateTime\": \"2025-07-01T13:14:25+00:00\",",
													"            \"FinalPaymentDateTime\": \"2025-07-01T15:14:25+00:00\",",
													"            \"FirstPaymentAmount\": {",
													"                \"Amount\": \"10.00\",",
													"                \"Currency\": \"GBP\"",
													"            },",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"SortCodeAccountNumber\",",
													"                \"Identification\": \"20202010981789\",",
													"                \"Name\": \"Dr Foo\"",
													"            }",
													"        }",
													"    },",
													"    \"Risk\": {}",
													"}",
													"",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"",
													"var options = {",
													"",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.vn",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"Permission\": \"Create\",\r\n        \"Initiation\": {\r\n            \"Frequency\": \"EvryDay\",\r\n            \"FirstPaymentDateTime\": \"2025-07-01T13:14:25+00:00\",\r\n            \"FinalPaymentDateTime\": \"2025-07-01T15:14:25+00:00\",\r\n            \"FirstPaymentAmount\": {\r\n                \"Amount\": \"10.00\",\r\n                \"Currency\": \"GBP\"\r\n            },\r\n            \"CreditorAccount\": {\r\n                \"SchemeName\": \"SortCodeAccountNumber\",\r\n                \"Identification\": \"20202010981789\",\r\n                \"Name\": \"Dr Foo\"\r\n            }\r\n        }\r\n    },\r\n    \"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-standing-order-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-standing-order-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments",
													"type": "text"
												},
												{
													"key": "code",
													"value": "f12b3609-5122-4bac-a084-284b8d778aa1",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: GET domestic-standing-order-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-standing-order-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-standing-order-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 5: POST domestic-standing-orders",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.DomesticStandingOrderId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'domestic-standing-orders');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\"))",
													"    },",
													"    \"Risk\": {}",
													"}",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"var options = {",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}}\n    },\n    \"Risk\": {}\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-standing-orders",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-standing-orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: GET domestic-standing-orders/{DomesticStandingOrderId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-standing-orders/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-standing-orders",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: GET  domestic-standing-orders/{DomesticStandingOrderId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-standing-orders/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-standing-orders",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "PIS Flow - File Payments Headless",
							"item": [
								{
									"name": "Step 1: POST Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST file-payment-consents",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const fileContent =[",
													"      {",
													"         \"Creditor\":\"10000119820101\",",
													"         \"amount\":\"50.50\",",
													"         \"Description\":\"Salary for Dec1, 2018\"",
													"      },",
													"      {",
													"         \"Creditor\":\"10000119820101\",",
													"         \"amount\":\"50.50\",",
													"         \"Description\":\"Salary for Dec1, 2018\"",
													"      },",
													"      {",
													"         \"Creditor\":\"10000119820101\",",
													"         \"amount\":\"50.50\",",
													"         \"Description\":\"Salary for Dec1, 2018\"",
													"      }",
													"   ]",
													"   const strFileContent = JSON.stringify(fileContent);",
													"   postman.setEnvironmentVariable(\"fileContent\", strFileContent);",
													"",
													"      ",
													"const hashedFile = CryptoJS.SHA256(strFileContent);",
													"let fileHash = CryptoJS.enc.Base64.stringify(hashedFile);",
													"postman.setEnvironmentVariable(\"fileHash\", fileHash);",
													"const data1 = {",
													"    \"Data\": {",
													"        \"Initiation\": {",
													"            \"FileType\": \"x\",",
													"            \"FileHash\": fileHash,",
													"            \"FileReference\": \"GB2OK238\",",
													"            \"NumberOfTransactions\": \"3\",",
													"            \"ControlSum\": 151.50",
													"        }",
													"    }",
													"}",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"",
													"var options = {",
													"",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments'); ",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.ev",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"Initiation\": {\r\n            \"FileType\": \"x\",\r\n            \"FileHash\": \"{{fileHash}}\",\r\n            \"FileReference\": \"GB2OK238\",\r\n            \"NumberOfTransactions\": \"3\",\r\n            \"ControlSum\": 151.50\r\n        }\r\n    }\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/file-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"file-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: POST file-payment-consents/{ConsentId}/file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{fileContent}}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/file-payment-consents/{{intent-id}}/file",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"file-payment-consents",
												"{{intent-id}}",
												"file"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												},
												{
													"key": "login_hint",
													"value": "foo",
													"disabled": true
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "3003: O3 Call headless-heimdall auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"consent-id-from-hh\", jsonData.interaction.params.claims.id_token.openbanking_intent_id.value);\r",
													"postman.setEnvironmentVariable(\"interaction-id\", jsonData.interaction.interactionId);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDgyMS44OSwiaWF0IjoxNjA5MTIwODExLjg5LCJuYmYiOjE2MDkxMjA4MTEuODksImp0aSI6IjdhNzVlYmU4LTMxZjktNDU2Yy1iNWU1LTlmOTJkMmMzOTkxOCJ9.O1rBKF87h7LqHgC5sd4pHuVPuKn2CP-feD7xZ1wCT77dfLU8HDDug3zcZdbcMOKH7cnb59MWKTgCcd3aGHfUsfVdT2cE2LrU_pPG7IW1km2Qri89M65241iUR8Ra_By3lULV4AwVywMH7dgjFCWFLWTbQW9idcImt0h9MaSTQyjErPO9Mkp64XqIvIz6lYOhWe6wwZpB5b2S6F6ysDfXkQbkEccKuDNgQAB0_Eh_I_4E9JZU6j_NyxDg6mlT2y1nozX_3-5dGKhgdU4IleqRK8qASosSSSAvjqfeE-3vkbahAcrdM6E8oQaoz2m6hMr5TRpuBF6LRJjqpu2G-KPU7w",
												"disabled": true
											},
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{authCodeUrl}}",
											"host": [
												"{{authCodeUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "3005: O3 Retrieve a consent by its id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB"
											},
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{cs}}/v2.2/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2.2",
												"consents",
												"{{consent-id-from-hh}}"
											],
											"query": [
												{
													"key": "authorization",
													"value": "foo",
													"disabled": true
												},
												{
													"key": "x-cert-dn",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4003: O3: Patch the consent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											},
											{
												"key": "content-type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"psuIdentifiers\": {\r\n        \"userId\": \"{{userId}}\"\r\n    },\r\n    \"accountIds\": {{accountIds}},\r\n    \"consentBody.Data.Status\": \"Authorised\"\r\n}"
										},
										"url": {
											"raw": "{{cs}}/v2.2/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2.2",
												"consents",
												"{{consent-id-from-hh}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "4005: O3: Confirm with Heimdall",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authorizationCode\", responseBody);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "heimdall.suppressRefreshToken",
													"value": "false",
													"type": "text"
												},
												{
													"key": "heimdall.accessTokenValidity",
													"value": "3600",
													"type": "text",
													"disabled": true
												},
												{
													"key": "heimdall.refreshTokenValidity",
													"value": "7200",
													"type": "text",
													"disabled": true
												},
												{
													"key": "openbanking_intent_id",
													"value": "{{consent-id-from-hh}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{authEndpoint}}/{{interaction-id}}/doConfirm",
											"host": [
												"{{authEndpoint}}"
											],
											"path": [
												"{{interaction-id}}",
												"doConfirm"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 5: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments ",
													"type": "text"
												},
												{
													"key": "code",
													"value": "{{authorizationCode}}",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										},
										"description": "Copy the authorization code generated into the browser into the **Body** tab in the `code` parameter"
									},
									"response": []
								},
								{
									"name": "Step 6: GET file-payment-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/file-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"file-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: GET file-payment-consents/{ConsentId}/file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/file-payment-consents/{{intent-id}}/file",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"file-payment-consents",
												"{{intent-id}}",
												"file"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: POST file-payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.FilePaymentId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'file-payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\"))",
													"    }",
													"}",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"var options = {",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}}\n    }\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/file-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"file-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 9: GET file-payments/{FilePaymentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/file-payments/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"file-payments",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 10: GET file-payments/{FilePaymentId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/file-payments/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"file-payments",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 11: GET file-payments/{FilePaymentId}/report-file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/file-payments/{{payment-id}}/report-file",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"file-payments",
												"{{payment-id}}",
												"report-file"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "PIS Flow - File payment UI",
							"item": [
								{
									"name": "Step 1: POST Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST file-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments'); ",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const fileContent =[",
													"      {",
													"         \"Creditor\":\"10000119820101\",",
													"         \"amount\":\"50.50\",",
													"         \"Description\":\"Salary for Dec1, 2018\"",
													"      },",
													"      {",
													"         \"Creditor\":\"10000119820101\",",
													"         \"amount\":\"50.50\",",
													"         \"Description\":\"Salary for Dec1, 2018\"",
													"      },",
													"      {",
													"         \"Creditor\":\"10000119820101\",",
													"         \"amount\":\"50.50\",",
													"         \"Description\":\"Salary for Dec1, 2018\"",
													"      }",
													"   ]",
													"   const strFileContent = JSON.stringify(fileContent);",
													"   postman.setEnvironmentVariable(\"fileContent\", strFileContent);",
													"",
													"      ",
													"const hashedFile = CryptoJS.SHA256(strFileContent);",
													"let fileHash = CryptoJS.enc.Base64.stringify(hashedFile);",
													"postman.setEnvironmentVariable(\"fileHash\", fileHash);",
													"const data1 = {",
													"    \"Data\": {",
													"        \"Initiation\": {",
													"            \"FileType\": \"x\",",
													"            \"FileHash\": fileHash,",
													"            \"FileReference\": \"GB2OK238\",",
													"            \"NumberOfTransactions\": \"3\",",
													"            \"ControlSum\": 151.50",
													"        }",
													"    }",
													"}",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"",
													"var options = {",
													"",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.ev",
												"disabled": true
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"Initiation\": {\r\n            \"FileType\": \"x\",\r\n            \"FileHash\": \"{{fileHash}}\",\r\n            \"FileReference\": \"GB2OK238\",\r\n            \"NumberOfTransactions\": \"3\",\r\n            \"ControlSum\": 151.50\r\n        }\r\n    }\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/file-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"file-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: POST file-payment-consents/{ConsentId}/file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{fileContent}}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/file-payment-consents/{{intent-id}}/file",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"file-payment-consents",
												"{{intent-id}}",
												"file"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												},
												{
													"key": "login_hint",
													"value": "foo",
													"disabled": true
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "Step 5: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments ",
													"type": "text"
												},
												{
													"key": "code",
													"value": "6b7e4f9a-e884-46e3-963b-c62f14e5aeeb",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										},
										"description": "Copy the authorization code generated into the browser into the **Body** tab in the `code` parameter"
									},
									"response": []
								},
								{
									"name": "Step 6: GET file-payment-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/file-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"file-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: GET file-payment-consents/{ConsentId}/file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/file-payment-consents/{{intent-id}}/file",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"file-payment-consents",
												"{{intent-id}}",
												"file"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: POST file-payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.FilePaymentId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'file-payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\"))",
													"    }",
													"}",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"var options = {",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}}\n    }\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/file-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"file-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 9: GET file-payments/{FilePaymentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/file-payments/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"file-payments",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 10: GET file-payments/{FilePaymentId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/file-payments/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"file-payments",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 11: GET file-payments/{FilePaymentId}/report-file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/file-payments/{{payment-id}}/report-file",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"file-payments",
												"{{payment-id}}",
												"report-file"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "PIS Flow- International Payments Headless",
							"item": [
								{
									"name": "Step 1: POST Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step2 : POST  international-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 =",
													"{",
													"    \"Data\": {",
													"        \"Initiation\": {",
													"            \"InstructionIdentification\": pm.environment.get(\"randomString-1\"),",
													"            \"EndToEndIdentification\": pm.environment.get(\"randomString-2\"),",
													"            \"CurrencyOfTransfer\": \"GBP\",",
													"            \"InstructedAmount\": {",
													"                \"Amount\": pm.environment.get(\"randomPrice\"),",
													"                \"Currency\": \"GBP\"",
													"            },",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",",
													"                \"Identification\": \"202020\" + pm.environment.get(\"randomBankAccount\"),",
													"                \"Name\": pm.environment.get(\"randomFullName\")",
													"            },",
													"            \"ExchangeRateInformation\": {",
													"                \"RateType\": \"Agreed\",",
													"                \"UnitCurrency\": \"GBP\",",
													"                \"ContractIdentification\": \"A/2019/2001\",",
													"                \"ExchangeRate\": 0.78",
													"            }",
													"        }",
													"    },",
													"    \"Risk\": {}",
													"}",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"var options = {",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.fcr",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"Initiation\": {\r\n            \"InstructionIdentification\": \"{{randomString-1}}\",\r\n            \"EndToEndIdentification\": \"{{randomString-2}}\",\r\n            \"CurrencyOfTransfer\": \"GBP\",\r\n            \"InstructedAmount\": {\r\n                \"Amount\": \"{{randomPrice}}\",\r\n                \"Currency\": \"GBP\"\r\n            },\r\n            \"CreditorAccount\": {\r\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\r\n                \"Identification\": \"202020{{randomBankAccount}}\",\r\n                \"Name\": \"{{randomFullName}}\"\r\n            },\r\n            \"ExchangeRateInformation\": {\r\n                \"RateType\": \"Agreed\",\r\n                \"UnitCurrency\": \"GBP\",\r\n                \"ContractIdentification\": \"A/2019/2001\",\r\n                \"ExchangeRate\": 0.78\r\n            }\r\n        }\r\n    },\r\n    \"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												},
												{
													"key": "login_hint",
													"value": "foo",
													"disabled": true
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "3003: O3 Call headless-heimdall auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"consent-id-from-hh\", jsonData.interaction.params.claims.id_token.openbanking_intent_id.value);\r",
													"postman.setEnvironmentVariable(\"interaction-id\", jsonData.interaction.interactionId);\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDgyMS44OSwiaWF0IjoxNjA5MTIwODExLjg5LCJuYmYiOjE2MDkxMjA4MTEuODksImp0aSI6IjdhNzVlYmU4LTMxZjktNDU2Yy1iNWU1LTlmOTJkMmMzOTkxOCJ9.O1rBKF87h7LqHgC5sd4pHuVPuKn2CP-feD7xZ1wCT77dfLU8HDDug3zcZdbcMOKH7cnb59MWKTgCcd3aGHfUsfVdT2cE2LrU_pPG7IW1km2Qri89M65241iUR8Ra_By3lULV4AwVywMH7dgjFCWFLWTbQW9idcImt0h9MaSTQyjErPO9Mkp64XqIvIz6lYOhWe6wwZpB5b2S6F6ysDfXkQbkEccKuDNgQAB0_Eh_I_4E9JZU6j_NyxDg6mlT2y1nozX_3-5dGKhgdU4IleqRK8qASosSSSAvjqfeE-3vkbahAcrdM6E8oQaoz2m6hMr5TRpuBF6LRJjqpu2G-KPU7w",
												"disabled": true
											},
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{authCodeUrl}}",
											"host": [
												"{{authCodeUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "3005: O3 Retrieve a consent by its id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB"
											},
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{cs}}/v2.2/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2.2",
												"consents",
												"{{consent-id-from-hh}}"
											],
											"query": [
												{
													"key": "authorization",
													"value": "foo",
													"disabled": true
												},
												{
													"key": "x-cert-dn",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4003: O3: Patch the consent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											},
											{
												"key": "content-type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"psuIdentifiers\": {\r\n        \"userId\": \"{{userId}}\"\r\n    },\r\n\r\n    \"accountIds\": {{accountIds}},\r\n    \"consentBody.Data.Status\": \"Authorised\"\r\n}"
										},
										"url": {
											"raw": "{{cs}}/v2.2/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2.2",
												"consents",
												"{{consent-id-from-hh}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "4005: O3: Confirm with Heimdall",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authorizationCode\", responseBody);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "heimdall.suppressRefreshToken",
													"value": "false",
													"type": "text"
												},
												{
													"key": "heimdall.accessTokenValidity",
													"value": "3600",
													"type": "text",
													"disabled": true
												},
												{
													"key": "heimdall.refreshTokenValidity",
													"value": "7200",
													"type": "text",
													"disabled": true
												},
												{
													"key": "openbanking_intent_id",
													"value": "{{consent-id-from-hh}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{authEndpoint}}/{{interaction-id}}/doConfirm",
											"host": [
												"{{authEndpoint}}"
											],
											"path": [
												"{{interaction-id}}",
												"doConfirm"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments ",
													"type": "text"
												},
												{
													"key": "code",
													"value": "{{authorizationCode}}",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										},
										"description": "Copy the authorization code generated into the browser into the **Body** tab in the `code` parameter"
									},
									"response": []
								},
								{
									"name": "Step 5: GET international-payment-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: POST international-payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.InternationalPaymentId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'international-payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//  set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\"))",
													"    },",
													"    \"Risk\": {}",
													"}",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"var options = {",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}}\n    },\n    \"Risk\": {}\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: GET international-payments/{InternationalPaymentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-payments/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-payments",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: GET international-payments/{InternationalPaymentId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-payments/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-payments",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "PIS Flow- International Payments UI",
							"item": [
								{
									"name": "Step 1: POST Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST international-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 =",
													"{",
													"    \"Data\": {",
													"        \"Initiation\": {",
													"            \"InstructionIdentification\": pm.environment.get(\"randomString-1\"),",
													"            \"EndToEndIdentification\": pm.environment.get(\"randomString-2\"),",
													"            \"CurrencyOfTransfer\": \"GBP\",",
													"            \"InstructedAmount\": {",
													"                \"Amount\": pm.environment.get(\"randomPrice\"),",
													"                \"Currency\": \"GBP\"",
													"            },",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",",
													"                \"Identification\": \"202020\" + pm.environment.get(\"randomBankAccount\"),",
													"                \"Name\": pm.environment.get(\"randomFullName\")",
													"            },",
													"            \"ExchangeRateInformation\": {",
													"                \"RateType\": \"Agreed\",",
													"                \"UnitCurrency\": \"GBP\",",
													"                \"ContractIdentification\": \"A/2019/2001\",",
													"                \"ExchangeRate\": 0.78",
													"            }",
													"        }",
													"    },",
													"    \"Risk\": {}",
													"}",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"var options = {",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.fcr",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"Initiation\": {\r\n            \"InstructionIdentification\": \"{{randomString-1}}\",\r\n            \"EndToEndIdentification\": \"{{randomString-2}}\",\r\n            \"CurrencyOfTransfer\": \"GBP\",\r\n            \"InstructedAmount\": {\r\n                \"Amount\": \"{{randomPrice}}\",\r\n                \"Currency\": \"GBP\"\r\n            },\r\n            \"CreditorAccount\": {\r\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\r\n                \"Identification\": \"202020{{randomBankAccount}}\",\r\n                \"Name\": \"{{randomFullName}}\"\r\n            },\r\n            \"ExchangeRateInformation\": {\r\n                \"RateType\": \"Agreed\",\r\n                \"UnitCurrency\": \"GBP\",\r\n                \"ContractIdentification\": \"A/2019/2001\",\r\n                \"ExchangeRate\": 0.78\r\n            }\r\n        }\r\n    },\r\n    \"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												},
												{
													"key": "login_hint",
													"value": "foo",
													"disabled": true
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments ",
													"type": "text"
												},
												{
													"key": "code",
													"value": "df13993a-beb2-45d4-93ba-8d8a70efecfa",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										},
										"description": "Copy the authorization code generated into the browser into the **Body** tab in the `code` parameter"
									},
									"response": []
								},
								{
									"name": "Step 5: GET international-payment-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: POST international-payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.InternationalPaymentId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'international-payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//  set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\"))",
													"    },",
													"    \"Risk\": {}",
													"}",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"var options = {",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}}\n    },\n    \"Risk\": {}\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: GET international-payments/{InternationalPaymentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-payments/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-payments",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: GET international-payments/{InternationalPaymentId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-payments/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-payments",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "PIS Flow - International Scheduled Payments Headless",
							"item": [
								{
									"name": "Step 1:  Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST international-scheduled-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"",
													"const data1 = {",
													"    \"Data\": {",
													"        \"Permission\": \"Create\",",
													"        \"Initiation\": {",
													"",
													"            \"InstructionIdentification\": pm.environment.get(\"randomString-1\"),",
													"            \"RequestedExecutionDateTime\": pm.environment.get(\"randomDateFuture\"),",
													"            \"CurrencyOfTransfer\": \"GBP\",",
													"            \"EndToEndIdentification\": \"FRESCO.21302.GFX.20\",",
													"            \"InstructedAmount\": {",
													"                \"Amount\": \"15.00\",",
													"                \"Currency\": \"GBP\"",
													"            },",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",",
													"                \"Identification\": \"08080021325698\",",
													"                \"Name\": \"Tom Hanks\"",
													"            },",
													"            \"RemittanceInformation\": {",
													"                \"Unstructured\": \"NAR. TEST\",",
													"                \"Reference\": \"TEST FV DNS\"",
													"            }",
													"",
													"        }",
													"    },",
													"    \"Risk\": {",
													"    }",
													"}",
													"",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"",
													"var options = {",
													"",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.gjb",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"Permission\": \"Create\",\r\n        \"Initiation\": {\r\n            \"InstructionIdentification\": \"{{randomString-1}}\",\r\n            \"RequestedExecutionDateTime\": \"{{randomDateFuture}}\",\r\n            \"CurrencyOfTransfer\": \"GBP\",\r\n            \"EndToEndIdentification\": \"FRESCO.21302.GFX.20\",\r\n            \"InstructedAmount\": {\r\n                \"Amount\": \"15.00\",\r\n                \"Currency\": \"GBP\"\r\n            },\r\n            \"CreditorAccount\": {\r\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\r\n                \"Identification\": \"08080021325698\",\r\n                \"Name\": \"Tom Hanks\"\r\n            },\r\n            \"RemittanceInformation\": {\r\n                \"Unstructured\": \"NAR. TEST\",\r\n                \"Reference\": \"TEST FV DNS\"\r\n            }\r\n        }\r\n    },\r\n    \"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-scheduled-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-scheduled-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												},
												{
													"key": "login_hint",
													"value": "foo",
													"disabled": true
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "3003: O3 Call headless-heimdall auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"consent-id-from-hh\", jsonData.interaction.params.claims.id_token.openbanking_intent_id.value);\r",
													"postman.setEnvironmentVariable(\"interaction-id\", jsonData.interaction.interactionId);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDgyMS44OSwiaWF0IjoxNjA5MTIwODExLjg5LCJuYmYiOjE2MDkxMjA4MTEuODksImp0aSI6IjdhNzVlYmU4LTMxZjktNDU2Yy1iNWU1LTlmOTJkMmMzOTkxOCJ9.O1rBKF87h7LqHgC5sd4pHuVPuKn2CP-feD7xZ1wCT77dfLU8HDDug3zcZdbcMOKH7cnb59MWKTgCcd3aGHfUsfVdT2cE2LrU_pPG7IW1km2Qri89M65241iUR8Ra_By3lULV4AwVywMH7dgjFCWFLWTbQW9idcImt0h9MaSTQyjErPO9Mkp64XqIvIz6lYOhWe6wwZpB5b2S6F6ysDfXkQbkEccKuDNgQAB0_Eh_I_4E9JZU6j_NyxDg6mlT2y1nozX_3-5dGKhgdU4IleqRK8qASosSSSAvjqfeE-3vkbahAcrdM6E8oQaoz2m6hMr5TRpuBF6LRJjqpu2G-KPU7w",
												"disabled": true
											},
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{authCodeUrl}}",
											"host": [
												"{{authCodeUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "3005: O3 Retrieve a consent by its id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB"
											},
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{cs}}/v2.2/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2.2",
												"consents",
												"{{consent-id-from-hh}}"
											],
											"query": [
												{
													"key": "authorization",
													"value": "foo",
													"disabled": true
												},
												{
													"key": "x-cert-dn",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4003: O3: Patch the consent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											},
											{
												"key": "content-type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"psuIdentifiers\": {\r\n        \"userId\": \"{{userId}}\"\r\n    },\r\n\r\n    \"accountIds\": {{accountIds}},\r\n    \"consentBody.Data.Status\": \"Authorised\"\r\n}"
										},
										"url": {
											"raw": "{{cs}}/v2.2/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2.2",
												"consents",
												"{{consent-id-from-hh}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "4005: O3: Confirm with Heimdall",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authorizationCode\", responseBody);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "heimdall.suppressRefreshToken",
													"value": "false",
													"type": "text"
												},
												{
													"key": "heimdall.accessTokenValidity",
													"value": "3600",
													"type": "text",
													"disabled": true
												},
												{
													"key": "heimdall.refreshTokenValidity",
													"value": "7200",
													"type": "text",
													"disabled": true
												},
												{
													"key": "openbanking_intent_id",
													"value": "{{consent-id-from-hh}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{authEndpoint}}/{{interaction-id}}/doConfirm",
											"host": [
												"{{authEndpoint}}"
											],
											"path": [
												"{{interaction-id}}",
												"doConfirm"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments ",
													"type": "text"
												},
												{
													"key": "code",
													"value": "{{authorizationCode}}",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										},
										"description": "Copy the authorization code generated into the browser into the **Body** tab in the `code` parameter"
									},
									"response": []
								},
								{
									"name": "Step 5: GET international-scheduled-payment-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-scheduled-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-scheduled-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: POST international-scheduled-payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.InternationalScheduledPaymentId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'Internatopayments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//  set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\"))",
													"    },",
													"    \"Risk\": {}",
													"}",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"var options = {",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {},
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}}\n    },\n    \"Risk\": {}\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-scheduled-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-scheduled-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: GET  international-scheduled-payments/{InternationalScheduledPaymentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-scheduled-payments/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-scheduled-payments",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: GET  international-scheduled-payments/{InternationalScheduledPaymentId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-scheduled-payments/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-scheduled-payments",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "PIS Flow - International Scheduled Payments UI",
							"item": [
								{
									"name": "Step 1: POST Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST international-scheduled-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"",
													"const data1 = {",
													"    \"Data\": {",
													"        \"Permission\": \"Create\",",
													"        \"Initiation\": {",
													"",
													"            \"InstructionIdentification\": pm.environment.get(\"randomString-1\"),",
													"            \"RequestedExecutionDateTime\": pm.environment.get(\"randomDateFuture\"),",
													"            \"CurrencyOfTransfer\": \"GBP\",",
													"            \"EndToEndIdentification\": \"FRESCO.21302.GFX.20\",",
													"            \"InstructedAmount\": {",
													"                \"Amount\": \"15.00\",",
													"                \"Currency\": \"GBP\"",
													"            },",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",",
													"                \"Identification\": \"08080021325698\",",
													"                \"Name\": \"Tom Hanks\"",
													"            },",
													"            \"RemittanceInformation\": {",
													"                \"Unstructured\": \"NAR. TEST\",",
													"                \"Reference\": \"TEST FV DNS\"",
													"            }",
													"",
													"        }",
													"    },",
													"    \"Risk\": {",
													"    }",
													"}",
													"",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"",
													"var options = {",
													"",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.gjbq",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"Permission\": \"Create\",\r\n        \"Initiation\": {\r\n            \"InstructionIdentification\": \"{{randomString-1}}\",\r\n            \"RequestedExecutionDateTime\": \"{{randomDateFuture}}\",\r\n            \"CurrencyOfTransfer\": \"GBP\",\r\n            \"EndToEndIdentification\": \"FRESCO.21302.GFX.20\",\r\n            \"InstructedAmount\": {\r\n                \"Amount\": \"15.00\",\r\n                \"Currency\": \"GBP\"\r\n            },\r\n            \"CreditorAccount\": {\r\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\r\n                \"Identification\": \"08080021325698\",\r\n                \"Name\": \"Tom Hanks\"\r\n            },\r\n            \"RemittanceInformation\": {\r\n                \"Unstructured\": \"NAR. TEST\",\r\n                \"Reference\": \"TEST FV DNS\"\r\n            }\r\n        }\r\n    },\r\n    \"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-scheduled-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-scheduled-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												},
												{
													"key": "login_hint",
													"value": "foo",
													"disabled": true
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments ",
													"type": "text"
												},
												{
													"key": "code",
													"value": "48189bc7-f1fb-44db-9783-9359cf0e9d0e",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										},
										"description": "Copy the authorization code generated into the browser into the **Body** tab in the `code` parameter"
									},
									"response": []
								},
								{
									"name": "Step 5: GET international-scheduled-payment-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-scheduled-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-scheduled-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: POST international-scheduled-payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.InternationalScheduledPaymentId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'Internatopayments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//  set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\"))",
													"    },",
													"    \"Risk\": {}",
													"}",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"var options = {",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {},
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}}\n    },\n    \"Risk\": {}\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-scheduled-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-scheduled-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: GET international-scheduled-payments/{InternationalScheduledPaymentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-scheduled-payments/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-scheduled-payments",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: GET international-scheduled-payments/{InternationalScheduledPaymentId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-scheduled-payments/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-scheduled-payments",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "PIS Flow- International Standing order Headless",
							"item": [
								{
									"name": "Step 1: POST Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2 : POST international-standing-order-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments'); ",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"Permission\": \"Create\",",
													"        \"Initiation\": {",
													"            \"Frequency\": \"EvryDay\",",
													"            \"FirstPaymentDateTime\": \"2024-10-01T13:14:25Z\",",
													"            \"CurrencyOfTransfer\": \"GBP\",",
													"            \"InstructedAmount\": {",
													"                \"Amount\": pm.environment.get(\"randomPrice\"),",
													"                \"Currency\": \"GBP\"",
													"            },",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"SortCodeAccountNumber\",",
													"                \"Identification\": \"202020\" + pm.environment.get(\"randomBankAccount\"),",
													"                \"Name\": pm.environment.get(\"randomFullName\")",
													"            }",
													"        }",
													"    },",
													"    \"Risk\": {}",
													"}",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"var options = {",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.er",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"Permission\": \"Create\",\r\n        \"Initiation\": {\r\n            \"Frequency\": \"EvryDay\",\r\n            \"FirstPaymentDateTime\": \"2024-10-01T13:14:25Z\",\r\n            \"CurrencyOfTransfer\": \"GBP\",\r\n            \"InstructedAmount\": {\r\n                \"Amount\": \"{{randomPrice}}\",\r\n                \"Currency\": \"GBP\"\r\n            },\r\n            \"CreditorAccount\": {\r\n                \"SchemeName\": \"SortCodeAccountNumber\",\r\n                \"Identification\": \"202020{{randomBankAccount}}\",\r\n                \"Name\": \"{{randomFullName}}\"\r\n            }\r\n        }\r\n    },\r\n    \"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-standing-order-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-standing-order-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												},
												{
													"key": "login_hint",
													"value": "foo",
													"disabled": true
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "3003: O3 Call headless-heimdall auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"consent-id-from-hh\", jsonData.interaction.params.claims.id_token.openbanking_intent_id.value);\r",
													"postman.setEnvironmentVariable(\"interaction-id\", jsonData.interaction.interactionId);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDgyMS44OSwiaWF0IjoxNjA5MTIwODExLjg5LCJuYmYiOjE2MDkxMjA4MTEuODksImp0aSI6IjdhNzVlYmU4LTMxZjktNDU2Yy1iNWU1LTlmOTJkMmMzOTkxOCJ9.O1rBKF87h7LqHgC5sd4pHuVPuKn2CP-feD7xZ1wCT77dfLU8HDDug3zcZdbcMOKH7cnb59MWKTgCcd3aGHfUsfVdT2cE2LrU_pPG7IW1km2Qri89M65241iUR8Ra_By3lULV4AwVywMH7dgjFCWFLWTbQW9idcImt0h9MaSTQyjErPO9Mkp64XqIvIz6lYOhWe6wwZpB5b2S6F6ysDfXkQbkEccKuDNgQAB0_Eh_I_4E9JZU6j_NyxDg6mlT2y1nozX_3-5dGKhgdU4IleqRK8qASosSSSAvjqfeE-3vkbahAcrdM6E8oQaoz2m6hMr5TRpuBF6LRJjqpu2G-KPU7w",
												"disabled": true
											},
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{authCodeUrl}}",
											"host": [
												"{{authCodeUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "3005: O3 Retrieve a consent by its id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB"
											},
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{cs}}/v2.2/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2.2",
												"consents",
												"{{consent-id-from-hh}}"
											],
											"query": [
												{
													"key": "authorization",
													"value": "foo",
													"disabled": true
												},
												{
													"key": "x-cert-dn",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4003: O3: Patch the consent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											},
											{
												"key": "content-type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"psuIdentifiers\": {\r\n        \"userId\": \"{{userId}}\"\r\n    },\r\n\r\n    \"accountIds\": {{accountIds}},\r\n    \"consentBody.Data.Status\": \"Authorised\"\r\n}"
										},
										"url": {
											"raw": "{{cs}}/v2.2/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2.2",
												"consents",
												"{{consent-id-from-hh}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "4005: O3: Confirm with Heimdall",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authorizationCode\", responseBody);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "heimdall.suppressRefreshToken",
													"value": "false",
													"type": "text"
												},
												{
													"key": "heimdall.accessTokenValidity",
													"value": "3600",
													"type": "text",
													"disabled": true
												},
												{
													"key": "heimdall.refreshTokenValidity",
													"value": "7200",
													"type": "text",
													"disabled": true
												},
												{
													"key": "openbanking_intent_id",
													"value": "{{consent-id-from-hh}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{authEndpoint}}/{{interaction-id}}/doConfirm",
											"host": [
												"{{authEndpoint}}"
											],
											"path": [
												"{{interaction-id}}",
												"doConfirm"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments ",
													"type": "text"
												},
												{
													"key": "code",
													"value": "{{authorizationCode}}",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										},
										"description": "Copy the authorization code generated into the browser into the **Body** tab in the `code` parameter"
									},
									"response": []
								},
								{
									"name": "Step 5: GET international-standing-order-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-standing-order-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-standing-order-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: POST international-standing-orders",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.InternationalStandingOrderId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'international-standing-order-payments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//  set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\"))",
													"    },",
													"    \"Risk\": {}",
													"}",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"var options = {",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}}\n    },\n    \"Risk\": {}\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-standing-orders",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-standing-orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: GET international-standing-orders/{InternationalStandingOrderPaymentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-standing-orders/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-standing-orders",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: GET international-standing-orders/{InternationalStandingOrderPaymentId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-standing-orders/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-standing-orders",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "PIS Flow- International Standing order UI",
							"item": [
								{
									"name": "Step 1: POST Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2 : POST international-standing-order-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments'); ",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"Permission\": \"Create\",",
													"        \"Initiation\": {",
													"            \"Frequency\": \"EvryDay\",",
													"            \"FirstPaymentDateTime\": \"2024-10-01T13:14:25Z\",",
													"            \"CurrencyOfTransfer\": \"GBP\",",
													"            \"InstructedAmount\": {",
													"                \"Amount\": pm.environment.get(\"randomPrice\"),",
													"                \"Currency\": \"GBP\"",
													"            },",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"SortCodeAccountNumber\",",
													"                \"Identification\": \"202020\" + pm.environment.get(\"randomBankAccount\"),",
													"                \"Name\": pm.environment.get(\"randomFullName\")",
													"            }",
													"        }",
													"    },",
													"    \"Risk\": {}",
													"}",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"var options = {",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.qw",
												"disabled": true
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"Permission\": \"Create\",\r\n        \"Initiation\": {\r\n            \"Frequency\": \"EvryDay\",\r\n            \"FirstPaymentDateTime\": \"2024-10-01T13:14:25Z\",\r\n            \"CurrencyOfTransfer\": \"GBP\",\r\n            \"InstructedAmount\": {\r\n                \"Amount\": \"{{randomPrice}}\",\r\n                \"Currency\": \"GBP\"\r\n            },\r\n            \"CreditorAccount\": {\r\n                \"SchemeName\": \"SortCodeAccountNumber\",\r\n                \"Identification\": \"202020{{randomBankAccount}}\",\r\n                \"Name\": \"{{randomFullName}}\"\r\n            }\r\n        }\r\n    },\r\n    \"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-standing-order-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-standing-order-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												},
												{
													"key": "login_hint",
													"value": "foo",
													"disabled": true
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "Step 4 : POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments ",
													"type": "text"
												},
												{
													"key": "code",
													"value": "565111fb-bcd8-4726-b836-822799fa9c86",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										},
										"description": "Copy the authorization code generated into the browser into the **Body** tab in the `code` parameter"
									},
									"response": []
								},
								{
									"name": "Step 5: GET international-standing-order-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-standing-order-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-standing-order-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: POST international-standing-orders",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.InternationalStandingOrderId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'international-standing-order-payments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//  set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\"))",
													"    },",
													"    \"Risk\": {}",
													"}",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"var options = {",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}}\n    },\n    \"Risk\": {}\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-standing-orders",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-standing-orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: GET international-standing-orders/{InternationalStandingOrderPaymentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-standing-orders/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-standing-orders",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: GET international-standing-orders/{InternationalStandingOrderPaymentId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/international-standing-orders/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"international-standing-orders",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "CBPII - Fund confirmation Headless",
							"item": [
								{
									"name": "Step 1: POST Client Credentials Grant (fundsconfirmations scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-fundsconfirmations\", jsonData.access_token);",
													"postman.clearEnvironmentVariable(\"cm\");",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											},
											{
												"key": "x-cert-fingerprint",
												"value": "foo",
												"disabled": true
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "fundsconfirmations openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST funds-confirmation-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"funds-confirmation-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"request-scope\", 'fundsconfirmations');",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-fundsconfirmations}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"ExpirationDateTime\": \"2025-05-02T00:00:00+00:00\",\r\n        \"DebtorAccount\": {\r\n            \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\r\n            \"Identification\": \"10000109010102\",\r\n            \"Name\": \"Mitsuhirato\"\r\n        }\r\n    }\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/cbpii/funds-confirmation-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"cbpii",
												"funds-confirmation-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "3003: O3 Call headless-heimdall auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"consent-id-from-hh\", jsonData.interaction.params.claims.id_token.openbanking_intent_id.value);\r",
													"postman.setEnvironmentVariable(\"interaction-id\", jsonData.interaction.interactionId);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDgyMS44OSwiaWF0IjoxNjA5MTIwODExLjg5LCJuYmYiOjE2MDkxMjA4MTEuODksImp0aSI6IjdhNzVlYmU4LTMxZjktNDU2Yy1iNWU1LTlmOTJkMmMzOTkxOCJ9.O1rBKF87h7LqHgC5sd4pHuVPuKn2CP-feD7xZ1wCT77dfLU8HDDug3zcZdbcMOKH7cnb59MWKTgCcd3aGHfUsfVdT2cE2LrU_pPG7IW1km2Qri89M65241iUR8Ra_By3lULV4AwVywMH7dgjFCWFLWTbQW9idcImt0h9MaSTQyjErPO9Mkp64XqIvIz6lYOhWe6wwZpB5b2S6F6ysDfXkQbkEccKuDNgQAB0_Eh_I_4E9JZU6j_NyxDg6mlT2y1nozX_3-5dGKhgdU4IleqRK8qASosSSSAvjqfeE-3vkbahAcrdM6E8oQaoz2m6hMr5TRpuBF6LRJjqpu2G-KPU7w",
												"disabled": true
											},
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{authCodeUrl}}",
											"host": [
												"{{authCodeUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "3005: O3 Retrieve a consent by its id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB"
											},
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{cs}}/v2.2/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2.2",
												"consents",
												"{{consent-id-from-hh}}"
											],
											"query": [
												{
													"key": "authorization",
													"value": "foo",
													"disabled": true
												},
												{
													"key": "x-cert-dn",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4003: O3: Patch the consent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											},
											{
												"key": "content-type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"psuIdentifiers\": {\r\n        \"userId\": \"{{userId}}\"\r\n    },\r\n\r\n    \"accountIds\": [{{accountIdsPayment}}],\r\n    \"consentBody.Data.Status\": \"Authorised\"\r\n}"
										},
										"url": {
											"raw": "{{cs}}/v2.2/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2.2",
												"consents",
												"{{consent-id-from-hh}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "4005: O3: Confirm with Heimdall",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authorizationCode\", responseBody);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "heimdall.suppressRefreshToken",
													"value": "false",
													"type": "text"
												},
												{
													"key": "heimdall.accessTokenValidity",
													"value": "3600",
													"type": "text",
													"disabled": true
												},
												{
													"key": "heimdall.refreshTokenValidity",
													"value": "7200",
													"type": "text",
													"disabled": true
												},
												{
													"key": "openbanking_intent_id",
													"value": "{{consent-id-from-hh}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{authEndpoint}}/{{interaction-id}}/doConfirm",
											"host": [
												"{{authEndpoint}}"
											],
											"path": [
												"{{interaction-id}}",
												"doConfirm"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (accounts scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-fundsconfirmations\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "fundsconfirmations",
													"type": "text"
												},
												{
													"key": "code",
													"value": "{{authorizationCode}}",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										},
										"description": "Copy the authorization code generated into the browser into the **Body** tab in the `code` parameter"
									},
									"response": []
								},
								{
									"name": "Step 5: GET funds-confirmation-consents/{consentsId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"",
													"",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true,
										"followOriginalHttpMethod": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-fundsconfirmations}}"
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "Mon, 19 Oct 2018 08:51:49 GMT",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/cbpii/funds-confirmation-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"cbpii",
												"funds-confirmation-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: POST funds-confirmations",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-fundsconfirmations}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{funds-confirmation-consent-id}}\",\n        \"Reference\": \"xxxxx\",\n        \"InstructedAmount\": {\n            \"Amount\": \"1927.00\",\n            \"Currency\": \"GBP\"\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/cbpii/funds-confirmations",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"cbpii",
												"funds-confirmations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: DELETE funds-confirmation-consents/{consentsId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-fundsconfirmations}}"
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "Mon, 19 Oct 2018 08:51:49 GMT",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/cbpii/funds-confirmation-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"cbpii",
												"funds-confirmation-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "CBPII Flow - Fund confirmation UI",
							"item": [
								{
									"name": "Step 1: POST Client Credentials Grant (fundsconfirmations scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-fundsconfirmations\", jsonData.access_token);",
													"postman.clearEnvironmentVariable(\"cm\");    ",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											},
											{
												"key": "x-cert-fingerprint",
												"value": "foo",
												"disabled": true
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "fundsconfirmations openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST funds-confirmation-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"funds-confirmation-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"request-scope\", 'fundsconfirmations');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-fundsconfirmations}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"ExpirationDateTime\": \"2025-05-02T00:00:00+00:00\",\r\n        \"DebtorAccount\": {\r\n            \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\r\n            \"Identification\": \"10000109010102\",\r\n            \"Name\": \"Mitsuhirato\"\r\n        }\r\n    }\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/cbpii/funds-confirmation-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"cbpii",
												"funds-confirmation-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (accounts scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-fundsconfirmations\", jsonData.access_token);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "fundsconfirmations",
													"type": "text"
												},
												{
													"key": "code",
													"value": "66d0e8b9-ffaf-4673-b402-3e959d479430",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										},
										"description": "Copy the authorization code generated into the browser into the **Body** tab in the `code` parameter"
									},
									"response": []
								},
								{
									"name": "Step 5: GET funds-confirmation-consents/{consentsId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true,
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-fundsconfirmations}}"
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "Mon, 19 Oct 2018 08:51:49 GMT",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/cbpii/funds-confirmation-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"cbpii",
												"funds-confirmation-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: POST funds-confirmations",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-fundsconfirmations}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{funds-confirmation-consent-id}}\",\n        \"Reference\": \"xxxxx\",\n        \"InstructedAmount\": {\n            \"Amount\": \"1927.00\",\n            \"Currency\": \"GBP\"\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/cbpii/funds-confirmations",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"cbpii",
												"funds-confirmations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: DELETE funds-confirmation-consents/{consentsId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-fundsconfirmations}}"
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "Mon, 19 Oct 2018 08:51:49 GMT",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/cbpii/funds-confirmation-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"cbpii",
												"funds-confirmation-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "VRP Flow - Variable Recurring Payments Headless",
							"item": [
								{
									"name": "Step 1: POST Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST variable-recurring-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"PSUAuthenticationMethod\", JSON.stringify(jsonData.Data.ControlParameters.PSUAuthenticationMethods));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ReadRefundAccount\": \"Yes\",",
													"        \"ControlParameters\": {",
													"            \"PSUAuthenticationMethods\": [\"UK.OBIE.SCA\"],",
													"            \"VRPType\": [\"UK.OBIE.VRPType.Sweeping\"],",
													"            \"ValidFromDateTime\": \"2017-06-05T15:15:13+00:00\",",
													"            \"ValidToDateTime\": \"2025-06-05T15:15:13+00:00\",",
													"            \"MaximumIndividualAmount\": {",
													"                \"Amount\": \"100.00\",",
													"                \"Currency\": \"GBP\"",
													"            },",
													"            \"PeriodicLimits\": [",
													"                {",
													"                    \"Amount\": \"200.00\",",
													"                    \"Currency\": \"GBP\",",
													"                    \"PeriodAlignment\": \"Consent\",",
													"                    \"PeriodType\": \"Week\"",
													"                }",
													"            ]",
													"        },",
													"        \"Initiation\": {",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"SortCodeAccountNumber\",",
													"                \"Identification\": \"01000160000001\",",
													"                \"SecondaryIdentification\": \"Roll 90210\",",
													"                \"Name\": \"Marcus Sweepimus\"",
													"            },",
													"            \"DebtorAccount\": {",
													"                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",",
													"                \"Identification\": \"10000109010102\",",
													"                \"Name\": pm.environment.get(\"randomCompanyName\")",
													"            },",
													"            \"RemittanceInformation\": {",
													"                \"Reference\": \"Sweepco\"",
													"            }",
													"        }",
													"    },",
													"    \"Risk\": {}",
													"}",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"var options = {",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCOX.htn",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"ReadRefundAccount\": \"Yes\",\r\n        \"ControlParameters\": {\r\n            \"PSUAuthenticationMethods\": [\r\n                \"UK.OBIE.SCA\"\r\n            ],\r\n            \"VRPType\": [\r\n                \"UK.OBIE.VRPType.Sweeping\"\r\n            ],\r\n            \"ValidFromDateTime\": \"2017-06-05T15:15:13+00:00\",\r\n            \"ValidToDateTime\": \"2025-06-05T15:15:13+00:00\",\r\n            \"MaximumIndividualAmount\": {\r\n                \"Amount\": \"100.00\",\r\n                \"Currency\": \"GBP\"\r\n            },\r\n            \"PeriodicLimits\": [\r\n                {\r\n                    \"Amount\": \"200.00\",\r\n                    \"Currency\": \"GBP\",\r\n                    \"PeriodAlignment\": \"Consent\",\r\n                    \"PeriodType\": \"Week\"\r\n                }\r\n            ]\r\n        },\r\n        \"Initiation\": {\r\n            \"CreditorAccount\": {\r\n                \"SchemeName\": \"SortCodeAccountNumber\",\r\n                \"Identification\": \"01000160000001\",\r\n                \"SecondaryIdentification\": \"Roll 90210\",\r\n                \"Name\": \"Marcus Sweepimus\"\r\n            },\r\n            \"DebtorAccount\": {\r\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\r\n                \"Identification\": \"10000109010102\",\r\n                \"Name\": \"{{randomCompanyName}}\"\r\n            },\r\n            \"RemittanceInformation\": {\r\n                \"Reference\": \"Sweepco\"\r\n            }\r\n        }\r\n    },\r\n    \"Risk\": {}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-vrp-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-vrp-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "3003: O3 Call headless-heimdall auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"consent-id-from-hh\", jsonData.interaction.params.claims.id_token.openbanking_intent_id.value);\r",
													"postman.setEnvironmentVariable(\"interaction-id\", jsonData.interaction.interactionId);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDgyMS44OSwiaWF0IjoxNjA5MTIwODExLjg5LCJuYmYiOjE2MDkxMjA4MTEuODksImp0aSI6IjdhNzVlYmU4LTMxZjktNDU2Yy1iNWU1LTlmOTJkMmMzOTkxOCJ9.O1rBKF87h7LqHgC5sd4pHuVPuKn2CP-feD7xZ1wCT77dfLU8HDDug3zcZdbcMOKH7cnb59MWKTgCcd3aGHfUsfVdT2cE2LrU_pPG7IW1km2Qri89M65241iUR8Ra_By3lULV4AwVywMH7dgjFCWFLWTbQW9idcImt0h9MaSTQyjErPO9Mkp64XqIvIz6lYOhWe6wwZpB5b2S6F6ysDfXkQbkEccKuDNgQAB0_Eh_I_4E9JZU6j_NyxDg6mlT2y1nozX_3-5dGKhgdU4IleqRK8qASosSSSAvjqfeE-3vkbahAcrdM6E8oQaoz2m6hMr5TRpuBF6LRJjqpu2G-KPU7w",
												"disabled": true
											},
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{authCodeUrl}}",
											"host": [
												"{{authCodeUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "3005: O3 Retrieve a consent by its id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB"
											},
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{cs}}/v2.2/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2.2",
												"consents",
												"{{consent-id-from-hh}}"
											],
											"query": [
												{
													"key": "authorization",
													"value": "foo",
													"disabled": true
												},
												{
													"key": "x-cert-dn",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4003: O3: Patch the consent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											},
											{
												"key": "content-type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"psuIdentifiers\": {\r\n        \"userId\": \"{{userId}}\"\r\n    },\r\n\r\n    \"accountIds\": {{accountIds}},\r\n    \"consentBody.Data.Status\": \"Authorised\"\r\n}"
										},
										"url": {
											"raw": "{{cs}}/v2.2/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2.2",
												"consents",
												"{{consent-id-from-hh}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "4005: O3: Confirm with Heimdall",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authorizationCode\", responseBody);\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "heimdall.suppressRefreshToken",
													"value": "false",
													"type": "text"
												},
												{
													"key": "heimdall.accessTokenValidity",
													"value": "3600",
													"type": "text",
													"disabled": true
												},
												{
													"key": "heimdall.refreshTokenValidity",
													"value": "7200",
													"type": "text",
													"disabled": true
												},
												{
													"key": "openbanking_intent_id",
													"value": "{{consent-id-from-hh}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{authEndpoint}}/{{interaction-id}}/doConfirm",
											"host": [
												"{{authEndpoint}}"
											],
											"path": [
												"{{interaction-id}}",
												"doConfirm"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments",
													"type": "text"
												},
												{
													"key": "code",
													"value": "{{authorizationCode}}",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 5: GET domestic-vrps-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-vrp-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-vrp-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: POST domestic-vrp-consents/{ConsentId}/funds-confirmation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"intent-id\"),",
													"        \"Reference\": \"myReference\",",
													"        \"InstructedAmount\": {",
													"            \"Amount\": \"10.00\",",
													"            \"Currency\": \"GBP\"",
													"        }",
													"    }",
													"}",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"var options = {",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{intent-id}}\",\n        \"Reference\": \"myReference\",\n        \"InstructedAmount\": {\n            \"Amount\": \"10.00\",\n            \"Currency\": \"GBP\"\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-vrp-consents/{{intent-id}}/funds-confirmation",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-vrp-consents",
												"{{intent-id}}",
												"funds-confirmation"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: POST domestic-vrps",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.DomesticVRPId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'domestic-payments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\")),",
													"        \"PSUAuthenticationMethod\": \"UK.OBIE.SCA\",",
													"        \"VRPType\": \"UK.OBIE.VRPType.Sweeping\",",
													"        \"Instruction\": {",
													"            \"InstructionIdentification\": \"123\",",
													"            \"EndToEndIdentification\": \"123\",",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"SortCodeAccountNumber\",",
													"                \"Identification\": \"30949330000010\",",
													"                \"SecondaryIdentification\": \"Roll 90210\",",
													"                \"Name\": \"Marcus Sweepimus\"",
													"            },",
													"            \"InstructedAmount\": {",
													"                \"Amount\": \"10.00\",",
													"                \"Currency\": \"GBP\"",
													"            }",
													"        }",
													"    },",
													"    \"Risk\": {",
													"    }",
													"}",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"var options = {",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.ws",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}},\n        \"PSUAuthenticationMethod\": \"UK.OBIE.SCA\",\n        \"VRPType\": \"UK.OBIE.VRPType.Sweeping\",\n        \"Instruction\": {\n            \"InstructionIdentification\": \"123\",\n            \"EndToEndIdentification\": \"123\",\n            \"CreditorAccount\": {\n                \"SchemeName\": \"SortCodeAccountNumber\",\n                \"Identification\": \"30949330000010\",\n                \"SecondaryIdentification\": \"Roll 90210\",\n                \"Name\": \"Marcus Sweepimus\"\n            },\n            \"InstructedAmount\": {\n                \"Amount\": \"10.00\",\n                \"Currency\": \"GBP\"\n            }\n        }\n    },\n    \"Risk\": {}\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-vrps",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-vrps"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: GET domestic-vrps/{DomesticVRPId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-vrps/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-vrps",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 9: GET domestic-vrps/{DomesticVRPId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-vrps/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-vrps",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 10: DELETE domestic-vrps-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-vrp-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-vrp-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "VRP Flow - Variable Recurring Payments UI",
							"item": [
								{
									"name": "Step 1: POST Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST variable-recurring-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"PSUAuthenticationMethod\", JSON.stringify(jsonData.Data.ControlParameters.PSUAuthenticationMethods));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ReadRefundAccount\": \"Yes\",",
													"        \"ControlParameters\": {",
													"            \"PSUAuthenticationMethods\": [\"UK.OBIE.SCA\"],",
													"            \"VRPType\": [\"UK.OBIE.VRPType.Sweeping\"],",
													"            \"ValidFromDateTime\": \"2017-06-05T15:15:13+00:00\",",
													"            \"ValidToDateTime\": \"2025-06-05T15:15:13+00:00\",",
													"            \"MaximumIndividualAmount\": {",
													"                \"Amount\": \"100.00\",",
													"                \"Currency\": \"GBP\"",
													"            },",
													"            \"PeriodicLimits\": [",
													"                {",
													"                    \"Amount\": \"200.00\",",
													"                    \"Currency\": \"GBP\",",
													"                    \"PeriodAlignment\": \"Consent\",",
													"                    \"PeriodType\": \"Week\"",
													"                }",
													"            ]",
													"        },",
													"        \"Initiation\": {",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"SortCodeAccountNumber\",",
													"                \"Identification\": \"01000160000001\",",
													"                \"SecondaryIdentification\": \"Roll 90210\",",
													"                \"Name\": \"Marcus Sweepimus\"",
													"            },",
													"            \"DebtorAccount\": {",
													"                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",",
													"                \"Identification\": \"10000109010102\",",
													"                \"Name\": pm.environment.get(\"randomCompanyName\")",
													"            },",
													"            \"RemittanceInformation\": {",
													"                \"Reference\": \"Sweepco\"",
													"            }",
													"        }",
													"    },",
													"    \"Risk\": {}",
													"}",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"var options = {",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.ws",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"ReadRefundAccount\": \"Yes\",\r\n        \"ControlParameters\": {\r\n            \"PSUAuthenticationMethods\": [\r\n                \"UK.OBIE.SCA\"\r\n            ],\r\n            \"VRPType\": [\r\n                \"UK.OBIE.VRPType.Sweeping\"\r\n            ],\r\n            \"ValidFromDateTime\": \"2017-06-05T15:15:13+00:00\",\r\n            \"ValidToDateTime\": \"2025-06-05T15:15:13+00:00\",\r\n            \"MaximumIndividualAmount\": {\r\n                \"Amount\": \"100.00\",\r\n                \"Currency\": \"GBP\"\r\n            },\r\n            \"PeriodicLimits\": [\r\n                {\r\n                    \"Amount\": \"200.00\",\r\n                    \"Currency\": \"GBP\",\r\n                    \"PeriodAlignment\": \"Consent\",\r\n                    \"PeriodType\": \"Week\"\r\n                }\r\n            ]\r\n        },\r\n        \"Initiation\": {\r\n            \"CreditorAccount\": {\r\n                \"SchemeName\": \"SortCodeAccountNumber\",\r\n                \"Identification\": \"01000160000001\",\r\n                \"SecondaryIdentification\": \"Roll 90210\",\r\n                \"Name\": \"Marcus Sweepimus\"\r\n            },\r\n            \"DebtorAccount\": {\r\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\r\n                \"Identification\": \"10000109010102\",\r\n                \"Name\": \"{{randomCompanyName}}\"\r\n            },\r\n            \"RemittanceInformation\": {\r\n                \"Reference\": \"Sweepco\"\r\n            }\r\n        }\r\n    },\r\n    \"Risk\": {}\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-vrp-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-vrp-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments",
													"type": "text"
												},
												{
													"key": "code",
													"value": "b1240d0e-df96-4dfd-93c9-47e3a170d4b8",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 5: GET domestic-vrps-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-vrp-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-vrp-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: POST domestic-vrp-consents/{ConsentId}/funds-confirmation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"intent-id\"),",
													"        \"Reference\": \"myReference\",",
													"        \"InstructedAmount\": {",
													"            \"Amount\": \"10.00\",",
													"            \"Currency\": \"GBP\"",
													"        }",
													"    }",
													"}",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"var options = {",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{intent-id}}\",\n        \"Reference\": \"myReference\",\n        \"InstructedAmount\": {\n            \"Amount\": \"10.00\",\n            \"Currency\": \"GBP\"\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-vrp-consents/{{intent-id}}/funds-confirmation",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-vrp-consents",
												"{{intent-id}}",
												"funds-confirmation"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: POST domestic-vrps",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.DomesticVRPId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'domestic-payments');",
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\")),",
													"        \"PSUAuthenticationMethod\": \"UK.OBIE.SCA\",",
													"        \"VRPType\": \"UK.OBIE.VRPType.Sweeping\",",
													"        \"Instruction\": {",
													"            \"InstructionIdentification\": \"123\",",
													"            \"EndToEndIdentification\": \"123\",",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"SortCodeAccountNumber\",",
													"                \"Identification\": \"30949330000010\",",
													"                \"SecondaryIdentification\": \"Roll 90210\",",
													"                \"Name\": \"Marcus Sweepimus\"",
													"            },",
													"            \"InstructedAmount\": {",
													"                \"Amount\": \"10.00\",",
													"                \"Currency\": \"GBP\"",
													"            }",
													"        }",
													"    },",
													"    \"Risk\": {",
													"    }",
													"}",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"var options = {",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCOX.hfv",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}},\n        \"PSUAuthenticationMethod\": \"UK.OBIE.SCA\",\n        \"VRPType\": \"UK.OBIE.VRPType.Sweeping\",\n        \"Instruction\": {\n            \"InstructionIdentification\": \"123\",\n            \"EndToEndIdentification\": \"123\",\n            \"CreditorAccount\": {\n                \"SchemeName\": \"SortCodeAccountNumber\",\n                \"Identification\": \"30949330000010\",\n                \"SecondaryIdentification\": \"Roll 90210\",\n                \"Name\": \"Marcus Sweepimus\"\n            },\n            \"InstructedAmount\": {\n                \"Amount\": \"10.00\",\n                \"Currency\": \"GBP\"\n            }\n        }\n    },\n    \"Risk\": {}\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-vrps",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-vrps"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: GET domestic-vrps/{DomesticVRPId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-vrps/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-vrps",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 9: GET domestic-vrps/{DomesticVRPId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-vrps/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-vrps",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 10: DELETE domestic-vrps-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-vrp-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v3.1",
												"pisp",
												"domestic-vrp-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								}
							]
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									"const msgSign = {",
									"    header: {",
									"        'content-type': 'application/json',",
									"        'kid': 'suvAuFTM6F4xzZKbudVO1oGGDnY',",
									"        'iss': '0015800001041RHAAY/HQuZPIt3ipkh33Uxytox1E',",
									"        'tan': 'openbanking.org.uk',",
									"        'key': '-----BEGIN PRIVATE KEY-----MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCE4aF6ip6TeGPaBHmYmYWGh+pzfBDQNM1lQUl+nKjrUfY4S+udVccS3rSQECl+ViSsJBZLJkWnAXYctnJ+MYr4PAMjXku07AXyvegB3BfN6jEUcgJI5ttS8R+Oum6sLStbhh3o97HVj+sipzPtaA+Y360+dEV1HqxcToD5qpAuNABIgaRfhoHA5hIHGE971CJbBIUetYQ0Kd7k5VUzxfqwpCsBPlKoV8uhYd9UBVjBALFB6/qib5LnPZiIw7a7LnF8tlxhaIFCQZsjjiDOmXngeXmp9QGpqQxcSsytLXU/LmZfHF10hGT2B7ktiBqLLZDc4T435TvNH5pcJ3meGga3AgMBAAECggEAEVCDJYAFfKq9vA1EON2cN/Ti2ExstmyC7PQuWuiX3B3QavJ9j4E7UNqjBXiNp5Aa9DE5lG42ujWnCcO+NHJJLOJI+GVTkQ4GEmSrY/6lPWgMICFg6dXm8y5HEeZ6AEZcdW8K263WxsCbf2bxDbi2+5D9tnsZB9NI2zhBdwbCBbsB05OxHlOG+MTdElTH/TEX2TRhyP+FDizTDetYz1tGPQHXfzSOnZu1f+W28oYRscnUKe/alkRgM8ZEZKgchH12s7/skBgV5WXZiV24DsMDeRGsy3lgsmrfXqKhNJYRBu02t8BUszCiGN2OHbINmMfZkJ5fg7MkltZO3F876dz9YQKBgQC5ClGCJj/FYh7mp0OISAw/lPs4Snz/VuVlzku4oX6jy5Ksc9u5d3HGUAG+ymbILPzY0OFmAtsU8b11NXr7kkua1Hi480oQVu6OnM4/zp7p4fOWX/D8q81mO8pgzGt0KO64yTutCcMrMZckzgeihgWeVJj626wydp5mIlBhYVzmlwKBgQC31srNEdm17lWOaruSXcNT8qb03HSnaJSVTjpRjzu8JzaP+7gDFaNzXXr2XauwUISiQ0ONvV1ZCUHWherZRRik06kdyUN6yFjpYqIJqoX8FCIIukOwOBLnx37447uGiSIs0Idil7ZZkwu/fUe9tbM3ZL6sbp/xhU3QsUVkMw8E4QKBgQCWvbYq7Zfz53w+8LIOOotn3KlPcTclGBgm+IktLrqpGvUw8e1kyM5x/Ml/MQnMNwIAayHD5b2t8UUjT98RRFu9FSwHl4KVjwwmN825o0xIQh8bOKtsW1Un3LuAYeeDqLjY5m5sB9DrxilX/VOw7bd0BXzel8hPD9z4XSnYOuXgnwKBgQCjwGeUkrniHBGJcfjyPyKlvBaLNXOTSsxO0geQbo0+447uYcFevf+B21qT6Ivt2UrLXi7mKi7kCCLk+xRdw/ZXm1Ggfo3k6GCKQpkjEwmVqDlInOF+LfRpEIJBIFkBVVVjpbtyTsDWuOxV/TnR+e9RACP3Y/KEJ8FQixbMUc6nAQKBgEQ13x3jWfeNkwWS1V2g3k1Dv3X8LH1vUyHisIvuukCAHfCo3d51gk12li9EnjsnxwoYDH1Rw9Ybmxx12f/HJrL5Lu+0DfZAvx/qBBnyeKVD3WMRS0vOmPTZdOhphwFb7vHsxLx4ei1uSlC2As3nH3zJwnUo5i0Sz7RQyQJAAMmD-----END PRIVATE KEY-----'",
									"    }",
									"}",
									"pm.environment.set('msgSign', JSON.stringify(msgSign));"
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "OBIE v4.0",
					"item": [
						{
							"name": "AIS Flow - HH",
							"item": [
								{
									"name": "Step 1: Client Credentials Grant (accounts scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-accounts\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "accounts openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST  account-access-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"account-access-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"request-scope\", 'accounts');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-accounts}}"
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "Mon, 19 Oct 2018 08:51:49 GMT",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"Permissions\": [\r\n            \"ReadAccountsBasic\",\r\n            \"ReadAccountsDetail\",\r\n            \"ReadBalances\",\r\n            \"ReadBeneficiariesBasic\",\r\n            \"ReadBeneficiariesDetail\",\r\n            \"ReadDirectDebits\",\r\n            \"ReadTransactionsBasic\",\r\n            \"ReadTransactionsCredits\",\r\n            \"ReadTransactionsDebits\",\r\n            \"ReadTransactionsDetail\",\r\n            \"ReadProducts\",\r\n            \"ReadStandingOrdersDetail\",\r\n            \"ReadProducts\",\r\n            \"ReadStandingOrdersDetail\",\r\n            \"ReadStatementsDetail\",\r\n            \"ReadParty\",\r\n            \"ReadPartyPSU\",\r\n            \"ReadOffers\",\r\n            \"ReadScheduledPaymentsBasic\",\r\n            \"ReadScheduledPaymentsDetail\"\r\n        ],\r\n        \"TransactionFromDateTime\": \"2016-01-01T10:40:00.415Z\",\r\n        \"TransactionToDateTime\": \"2025-12-31T10:40:00.415Z\"\r\n    },\r\n    \"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/account-access-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"account-access-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												},
												{
													"key": "responseType",
													"value": "code",
													"disabled": true
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "3003: ASPSP-O3 Call headless-heimdall auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"consent-id-from-hh\", jsonData.interaction.params.claims.id_token.openbanking_intent_id.value);\r",
													"postman.setEnvironmentVariable(\"interaction-id\", jsonData.interaction.interactionId);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDgyMS44OSwiaWF0IjoxNjA5MTIwODExLjg5LCJuYmYiOjE2MDkxMjA4MTEuODksImp0aSI6IjdhNzVlYmU4LTMxZjktNDU2Yy1iNWU1LTlmOTJkMmMzOTkxOCJ9.O1rBKF87h7LqHgC5sd4pHuVPuKn2CP-feD7xZ1wCT77dfLU8HDDug3zcZdbcMOKH7cnb59MWKTgCcd3aGHfUsfVdT2cE2LrU_pPG7IW1km2Qri89M65241iUR8Ra_By3lULV4AwVywMH7dgjFCWFLWTbQW9idcImt0h9MaSTQyjErPO9Mkp64XqIvIz6lYOhWe6wwZpB5b2S6F6ysDfXkQbkEccKuDNgQAB0_Eh_I_4E9JZU6j_NyxDg6mlT2y1nozX_3-5dGKhgdU4IleqRK8qASosSSSAvjqfeE-3vkbahAcrdM6E8oQaoz2m6hMr5TRpuBF6LRJjqpu2G-KPU7w",
												"disabled": true
											},
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{authCodeUrl}}",
											"host": [
												"{{authCodeUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "3005: ASPSP - O3 Retrieve a consent by its id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB"
											},
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{cs}}/v2024.31/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2024.31",
												"consents",
												"{{consent-id-from-hh}}"
											],
											"query": [
												{
													"key": "authorization",
													"value": "foo",
													"disabled": true
												},
												{
													"key": "x-cert-dn",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4003: ASPSP-O3: Patch the consent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											},
											{
												"key": "content-type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"psuIdentifiers\": {\r\n        \"userId\": \"{{userId}}\"\r\n    },\r\n    \"accountIds\": {{accountIds}},\r\n    \"consentBody.Data.Status\": \"AUTH\"\r\n\r\n    // AWAU, RJCT, AUTH, EXPD, CANC\r\n\r\n\r\n    // \"consentBody.Data.Status\": \"RJCT\",\r\n    // \"consentBody.Data.StatusReason\": [\r\n    //     {\r\n    //         \"StatusReasonCode\": \"abc\",\r\n    //         \"StatusReasonDescription\": \"abc\",\r\n    //         \"Path\": \"abc\"\r\n    //     }\r\n    // ]\r\n}"
										},
										"url": {
											"raw": "{{cs}}/v2024.31/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2024.31",
												"consents",
												"{{consent-id-from-hh}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "4005: ASPSP-O3: Confirm with Heimdall",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													" postman.setEnvironmentVariable(\"authorizationCode\", responseBody);\r",
													"  "
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "heimdall.suppressRefreshToken",
													"value": "false",
													"type": "text"
												},
												{
													"key": "heimdall.accessTokenValidity",
													"value": "3600",
													"type": "text",
													"disabled": true
												},
												{
													"key": "heimdall.refreshTokenValidity",
													"value": "7200",
													"type": "text",
													"disabled": true
												},
												{
													"key": "openbanking_intent_id",
													"value": "{{consent-id-from-hh}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{authEndpoint}}/{{interaction-id}}/doConfirm",
											"host": [
												"{{authEndpoint}}"
											],
											"path": [
												"{{interaction-id}}",
												"doConfirm"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (accounts scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-accounts\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "accounts ",
													"type": "text"
												},
												{
													"key": "code",
													"value": "{{authorizationCode}}",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										},
										"description": "Copy the authorization code generated into the browser into the **Body** tab in the `code` parameter"
									},
									"response": []
								},
								{
									"name": "Step 5: GET account-access-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/account-access-consents/{{account-access-consent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"account-access-consents",
												"{{account-access-consent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"account-id\", jsonData.Data.Account[0].AccountId);",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true,
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET account/{accountId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/balances",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/balances",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"balances"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET balances",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/balances",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"balances"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/beneficiaries",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/beneficiaries",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"beneficiaries"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET beneficiaries",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/beneficiaries",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"beneficiaries"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/direct-debits",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/direct-debits",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"direct-debits"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET  direct-debits",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/direct-debits",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"direct-debits"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/offers",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/offers",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"offers"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET offers",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/offers",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"offers"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/parties",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/parties",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"parties"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET accounts/{AccountId}/party",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/party",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"party"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET party",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/party",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"party"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET  accounts/{AccountId}/product",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {},
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/product",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"product"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET products",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/products",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"products"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/scheduled-payments",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/scheduled-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"scheduled-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET  scheduled-payments",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/scheduled-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"scheduled-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/standing-orders",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/standing-orders",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"standing-orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET standing-orders",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/standing-orders",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"standing-orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET account/{accountId}/statements",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"statement-id\", jsonData.Data.Statement[0].StatementId);",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/statements",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"statements"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET account/{accountId}/statement{{statement-id}}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/statements/{{statement-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"statements",
												"{{statement-id}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4: GET account/{accountId}/statements/{statementId}}/transactions",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/statements/{{statement-id}}/transactions",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"statements",
												"{{statement-id}}",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 5: GET statements",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/statements",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"statements"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET account/{accountId}/statement{{statement-id}}/file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/statements/{{statement-id}}/file",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"statements",
												"{{statement-id}}",
												"file"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/transactions",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/transactions",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET transactions",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/transactions",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: DELETE account-access-consents/{ConsentId}",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-accounts}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/account-access-consents/{{account-access-consent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"account-access-consents",
												"{{account-access-consent-id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "AIS Flow - UI",
							"item": [
								{
									"name": "Step 1: Client Credentials Grant (accounts scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-accounts\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "accounts openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST  account-access-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"account-access-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"request-scope\", 'accounts');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-accounts}}"
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "Mon, 19 Oct 2018 08:51:49 GMT",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"Permissions\": [\r\n            \"ReadAccountsBasic\",\r\n            \"ReadAccountsDetail\",\r\n            \"ReadBalances\",\r\n            \"ReadBeneficiariesBasic\",\r\n            \"ReadBeneficiariesDetail\",\r\n            \"ReadDirectDebits\",\r\n            \"ReadTransactionsBasic\",\r\n            \"ReadTransactionsCredits\",\r\n            \"ReadTransactionsDebits\",\r\n            \"ReadTransactionsDetail\",\r\n            \"ReadProducts\",\r\n            \"ReadStandingOrdersDetail\",\r\n            \"ReadProducts\",\r\n            \"ReadStandingOrdersDetail\",\r\n            \"ReadStatementsDetail\",\r\n            \"ReadParty\",\r\n            \"ReadPartyPSU\",\r\n            \"ReadOffers\",\r\n            \"ReadScheduledPaymentsBasic\",\r\n            \"ReadScheduledPaymentsDetail\"\r\n        ],\r\n        \"TransactionFromDateTime\": \"2016-01-01T10:40:00.415Z\",\r\n        \"TransactionToDateTime\": \"2025-12-31T10:40:00.415Z\"\r\n    },\r\n    \"Risk\": {}\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/account-access-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"account-access-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												},
												{
													"key": "responseType",
													"value": "code",
													"disabled": true
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (accounts scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-accounts\", jsonData.access_token);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "accounts ",
													"type": "text"
												},
												{
													"key": "code",
													"value": "ab7e7b18-6833-4de1-9e3a-c1b869333116",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										},
										"description": "Copy the authorization code generated into the browser into the **Body** tab in the `code` parameter"
									},
									"response": []
								},
								{
									"name": "Step 5: GET account-access-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/account-access-consents/{{account-access-consent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"account-access-consents",
												"{{account-access-consent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"account-id\", jsonData.Data.Account[0].AccountId);",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true,
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET account/{accountId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/balances",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/balances",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"balances"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET balances",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/balances",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"balances"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/beneficiaries",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/beneficiaries",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"beneficiaries"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET beneficiaries",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/beneficiaries",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"beneficiaries"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/direct-debits",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/direct-debits",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"direct-debits"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET  direct-debits",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/direct-debits",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"direct-debits"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/offers",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/offers",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"offers"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET offers",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/offers",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"offers"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/parties",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/parties",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"parties"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET accounts/{AccountId}/party",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/party",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"party"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET party",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/party",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"party"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET  accounts/{AccountId}/product",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {},
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/product",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"product"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET products",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/products",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"products"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/scheduled-payments",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/scheduled-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"scheduled-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET  scheduled-payments",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/scheduled-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"scheduled-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/standing-orders",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/standing-orders",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"standing-orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET standing-orders",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/standing-orders",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"standing-orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET account/{accountId}/statements",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"statement-id\", jsonData.Data.Statement[0].StatementId);",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/statements",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"statements"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET account/{accountId}/statement{{statement-id}}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/statements/{{statement-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"statements",
												"{{statement-id}}"
											],
											"query": [
												{
													"key": "",
													"value": null,
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET account/{accountId}/statement{{statement-id}}/file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/statements/{{statement-id}}/file",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"statements",
												"{{statement-id}}",
												"file"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4: GET account/{accountId}/statements/{statementId}}/transactions",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/statements/{{statement-id}}/transactions",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"statements",
												"{{statement-id}}",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 5: GET statements",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/statements",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"statements"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 1: GET accounts/{AccountId}/transactions",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/accounts/{{account-id}}/transactions",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"accounts",
												"{{account-id}}",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: GET transactions",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-accounts}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/transactions",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"transactions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: DELETE account-access-consents/{ConsentId}",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-accounts}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/aisp/account-access-consents/{{account-access-consent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"aisp",
												"account-access-consents",
												"{{account-access-consent-id}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"packages": {},
										"exec": [
											"",
											"if (!pm.environment.get('obieAccountDerefSchema1')) {",
											"    var options = {",
											"        method: 'POST',",
											"        url: \"https://slack-newman.dev.ozoneapi.co.uk/getDeRefSchema\",",
											"        body: {",
											"            mode: \"raw\",",
											"            raw: JSON.stringify({ \"url\": \"https://api.github.com/repos/ozoneapi/monorepo2/contents/src/api-sets/ob-api-3.1.11/swagger/de-obi-3.1.11-account-info-swagger.json?ref=feature/rc-2024.28.2\" })",
											"        },",
											"        header: {",
											"            'Content-Type': 'application/json'",
											"        }",
											"    };",
											"",
											"    pm.sendRequest(",
											"        options,",
											"        function (err, response) {",
											"            if (err) {",
											"                pm.expect.fail('Error while fetching schema deref file');",
											"            }",
											"            const schemaJson = (response.json());",
											"            pm.environment.set('obieAccountDerefSchema1', schemaJson);",
											"        }",
											"    );",
											"}",
											"",
											"obieTest = {",
											"",
											"    statusTest: function (that, testCaseNo, statuscode, endpoint, method, contentType) {",
											"        pm.test(`Test Case ${testCaseNo} : Checking response status code  for ${statuscode}`, function () {",
											"            that.pm.response.to.have.status(statuscode);",
											"",
											"            pm.test(\"Schema is valid\", function () {",
											"                const schemaJson = pm.environment.get('obieAccountDerefSchema1');",
											"                const schema = schemaJson.paths[endpoint][method]?.responses[statuscode]?.content[contentType]?.schema;",
											"",
											"                var Ajv = require('ajv');",
											"                ajv = new Ajv({ unknownFormats: ['int32'], allErrors: true });",
											"",
											"                pm.expect(schema, \"Schema is not defined\").to.be.not.undefined;",
											"                pm.expect(ajv.validate(schema, that.pm.response.json()), JSON.stringify(ajv.errors)).to.be.true;",
											"",
											"            });",
											"        });",
											"",
											"        pm.test('Verify required headers are present', function () {",
											"            const schemaJson = pm.environment.get('obieAccountDerefSchema1');",
											"            const requiredHeaders = schemaJson.paths[endpoint][method]?.responses[statuscode]?.headers;",
											"            const responseHeaders = that.pm.response.headers.toObject();",
											"            // Check if each required header is present in the response headers",
											"            Object.keys(requiredHeaders).forEach(function (key) {",
											"                pm.expect(responseHeaders).to.have.property(key);",
											"                pm.expect(responseHeaders[key]).to.be.a('string');",
											"                pm.expect(responseHeaders[key]).not.equal(\"undefined\");",
											"            });",
											"        });",
											"",
											"        pm.test(\"Response time is less than 750ms\", function () {",
											"            pm.expect(that.pm.response.responseTime).to.be.below(750);",
											"        });",
											"",
											"    }",
											"}",
											"",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"packages": {},
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "PIS Flow - SIngle Domestic Payments Headless",
							"item": [
								{
									"name": "Step 1: POST Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST domestic-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"",
													"const data1 = {",
													"    \"Data\": {",
													"        \"Initiation\": {",
													"            \"InstructionIdentification\": pm.environment.get(\"randomString-1\"),",
													"            \"EndToEndIdentification\": pm.environment.get(\"randomString-2\"),",
													"            \"InstructedAmount\": {",
													"                \"Amount\": pm.environment.get(\"randomPrice\"),",
													"                \"Currency\": \"GBP\"",
													"            },",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",",
													"                \"Identification\": \"000000\" + pm.environment.get(\"randomBankAccount\"),",
													"                \"Name\": pm.environment.get(\"randomCompanyName\")",
													"            },",
													"            \"RemittanceInformation\": {",
													"                \"Reference\": \"Remitce ormation\",",
													"                \"Unstructured\": pm.environment.get(\"randomCreditCardMask\") + \" \" + pm.environment.get(\"randomLoremWords\")",
													"            }",
													"        }",
													"    },",
													"    \"Risk\": {}",
													"}",
													"",
													"",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"",
													"// var options = {",
													"",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.d",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"ReadRefundAccount\": \"No\",\r\n        \"Initiation\": {\r\n            \"InstructionIdentification\": \"{{randomString-1}}\",\r\n            \"EndToEndIdentification\": \"{{randomString-2}}\",\r\n            \"LocalInstrument\": \"UK.OBIE.BACS\",\r\n            \"InstructedAmount\": {\r\n                \"Amount\": \"928\",\r\n                \"Currency\": \"GBP\"\r\n            },\r\n            \"DebtorAccount\": {\r\n                \"SchemeName\": \"UK.OBIE.IBAN\",\r\n                \"Identification\": \"AB12CD34EF567890123456789012345678901\",\r\n                \"Name\": \"string\",\r\n                \"SecondaryIdentification\": \"string\",\r\n                \"Proxy\": {\r\n                    \"Identification\": \"string\",\r\n                    \"Code\": \"TELE\",\r\n                    \"Type\": \"string\"\r\n                }\r\n            },\r\n            \"CreditorAccount\": {\r\n                \"SchemeName\": \"UK.OBIE.IBAN\",\r\n                \"Identification\": \"AB12CD34EF567890123456789012345678901\",\r\n                \"Name\": \"string\",\r\n                \"SecondaryIdentification\": \"string\",\r\n                \"Proxy\": {\r\n                    \"Identification\": \"string\",\r\n                    \"Code\": \"TELE\",\r\n                    \"Type\": \"string\"\r\n                }\r\n            },\r\n            \"CreditorPostalAddress\": {\r\n                \"AddressType\": \"BIZZ\",\r\n                \"Department\": \"string\",\r\n                \"SubDepartment\": \"string\",\r\n                \"StreetName\": \"string\",\r\n                \"BuildingNumber\": \"string\",\r\n                \"BuildingName\": \"string\",\r\n                \"Floor\": \"string\",\r\n                \"UnitNumber\": \"string\",\r\n                \"Room\": \"string\",\r\n                \"PostBox\": \"string\",\r\n                \"TownLocationName\": \"string\",\r\n                \"DistrictName\": \"string\",\r\n                \"CareOf\": \"string\",\r\n                \"PostCode\": \"string\",\r\n                \"TownName\": \"string\",\r\n                \"CountrySubDivision\": \"string\",\r\n                \"Country\": \"TE\",\r\n                \"AddressLine\": [\r\n                    \"string\"\r\n                ]\r\n            },\r\n            \"UltimateCreditor\": {\r\n                \"Name\": \"string\",\r\n                \"Identification\": \"string\",\r\n                \"LEI\": \"252200LN4Q4W976ZRW63\",\r\n                \"SchemeName\": \"string\",\r\n                \"PostalAddress\": {\r\n                    \"AddressType\": \"BIZZ\",\r\n                    \"Department\": \"string\",\r\n                    \"SubDepartment\": \"string\",\r\n                    \"StreetName\": \"string\",\r\n                    \"BuildingNumber\": \"string\",\r\n                    \"BuildingName\": \"string\",\r\n                    \"Floor\": \"string\",\r\n                    \"UnitNumber\": \"string\",\r\n                    \"Room\": \"string\",\r\n                    \"PostBox\": \"string\",\r\n                    \"TownLocationName\": \"string\",\r\n                    \"DistrictName\": \"string\",\r\n                    \"CareOf\": \"string\",\r\n                    \"PostCode\": \"string\",\r\n                    \"TownName\": \"string\",\r\n                    \"CountrySubDivision\": \"string\",\r\n                    \"Country\": \"XF\",\r\n                    \"AddressLine\": [\r\n                        \"string\"\r\n                    ]\r\n                }\r\n            },\r\n            \"UltimateDebtor\": {\r\n                \"Name\": \"string\",\r\n                \"Identification\": \"string\",\r\n                \"LEI\": \"679000FKMU36IXVR8H20\",\r\n                \"SchemeName\": \"string\",\r\n                \"PostalAddress\": {\r\n                    \"AddressType\": \"BIZZ\",\r\n                    \"Department\": \"string\",\r\n                    \"SubDepartment\": \"string\",\r\n                    \"StreetName\": \"string\",\r\n                    \"BuildingNumber\": \"string\",\r\n                    \"BuildingName\": \"string\",\r\n                    \"Floor\": \"string\",\r\n                    \"UnitNumber\": \"string\",\r\n                    \"Room\": \"string\",\r\n                    \"PostBox\": \"string\",\r\n                    \"TownLocationName\": \"string\",\r\n                    \"DistrictName\": \"string\",\r\n                    \"CareOf\": \"string\",\r\n                    \"PostCode\": \"string\",\r\n                    \"TownName\": \"string\",\r\n                    \"CountrySubDivision\": \"string\",\r\n                    \"Country\": \"CU\",\r\n                    \"AddressLine\": [\r\n                        \"string\"\r\n                    ]\r\n                }\r\n            },\r\n            \"RegulatoryReporting\": [\r\n                {\r\n                    \"DebitCreditReportingIndicator\": \"CRED\",\r\n                    \"Authority\": {\r\n                        \"Name\": \"string\",\r\n                        \"CountryCode\": \"LU\"\r\n                    },\r\n                    \"Details\": [\r\n                        {\r\n                            \"Type\": \"string\",\r\n                            \"Date\": \"2024-06-14T12:46:42.157Z\",\r\n                            \"Country\": \"KX\",\r\n                            \"Amount\": {\r\n                                \"Amount\": \"0586094974283\",\r\n                                \"Currency\": \"OBJ\"\r\n                            },\r\n                            \"Information\": [\r\n                                \"string\"\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"RemittanceInformation\": {\r\n                \"Structured\": [\r\n                    {\r\n                        \"ReferredDocumentInformation\": [\r\n                            {\r\n                                \"Code\": \"CINV\",\r\n                                \"Issuer\": \"string\",\r\n                                \"Number\": \"string\",\r\n                                \"RelatedDate\": \"2024-06-14T12:46:42.157Z\",\r\n                                \"LineDetails\": [\r\n                                    \"string\"\r\n                                ]\r\n                            }\r\n                        ],\r\n                        \"ReferredDocumentAmount\": 0,\r\n                        \"CreditorReferenceInformation\": {\r\n                            \"Code\": \"DISP\",\r\n                            \"Issuer\": \"string\",\r\n                            \"Reference\": \"string\"\r\n                        },\r\n                        \"Invoicer\": \"string\",\r\n                        \"Invoicee\": \"string\",\r\n                        \"TaxRemittance\": \"string\",\r\n                        \"AdditionalRemittanceInformation\": [\r\n                            \"string\"\r\n                        ]\r\n                    }\r\n                ],\r\n                \"Unstructured\": [\r\n                    \"string\"\r\n                ]\r\n            },\r\n            \"SupplementaryData\": {\r\n                \"additionalProp1\": {}\r\n            }\r\n        },\r\n        \"Authorisation\": {\r\n            \"AuthorisationType\": \"Any\",\r\n            \"CompletionDateTime\": \"2024-08-14T12:46:42.157Z\"\r\n        },\r\n        \"SCASupportData\": {\r\n            \"RequestedSCAExemptionType\": \"BillPayment\",\r\n            \"AppliedAuthenticationApproach\": \"CA\",\r\n            \"ReferencePaymentOrderId\": \"string\"\r\n        }\r\n    },\r\n    \"Risk\": {\r\n        \"PaymentContextCode\": \"BillingGoodsAndServicesInAdvance\",\r\n        \"MerchantCategoryCode\": \"stri\",\r\n        \"MerchantCustomerIdentification\": \"string\",\r\n        \"ContractPresentIndicator\": true,\r\n        \"BeneficiaryPrepopulatedIndicator\": true,\r\n        \"PaymentPurposeCode\": \"BKDF\",\r\n        \"CategoryPurposeCode\": \"BONU\",\r\n        \"BeneficiaryAccountType\": \"Business\",\r\n        \"DeliveryAddress\": {\r\n            \"AddressType\": \"BIZZ\",\r\n            \"Department\": \"string\",\r\n            \"SubDepartment\": \"string\",\r\n            \"StreetName\": \"string\",\r\n            \"BuildingNumber\": \"string\",\r\n            \"BuildingName\": \"string\",\r\n            \"Floor\": \"string\",\r\n            \"UnitNumber\": \"string\",\r\n            \"Room\": \"string\",\r\n            \"PostBox\": \"string\",\r\n            \"TownLocationName\": \"string\",\r\n            \"DistrictName\": \"string\",\r\n            \"CareOf\": \"string\",\r\n            \"PostCode\": \"string\",\r\n            \"TownName\": \"string\",\r\n            \"CountrySubDivision\": \"string\",\r\n            \"Country\": \"IM\",\r\n            \"AddressLine\": [\r\n                \"string\"\r\n            ]\r\n        },\r\n        \"ExtendedPurpose\": \"string\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "3003: O3 Call headless-heimdall auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"\r",
													"let jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"consent-id-from-hh\", jsonData.interaction.params.claims.id_token.openbanking_intent_id.value);\r",
													"postman.setEnvironmentVariable(\"interaction-id\", jsonData.interaction.interactionId);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDgyMS44OSwiaWF0IjoxNjA5MTIwODExLjg5LCJuYmYiOjE2MDkxMjA4MTEuODksImp0aSI6IjdhNzVlYmU4LTMxZjktNDU2Yy1iNWU1LTlmOTJkMmMzOTkxOCJ9.O1rBKF87h7LqHgC5sd4pHuVPuKn2CP-feD7xZ1wCT77dfLU8HDDug3zcZdbcMOKH7cnb59MWKTgCcd3aGHfUsfVdT2cE2LrU_pPG7IW1km2Qri89M65241iUR8Ra_By3lULV4AwVywMH7dgjFCWFLWTbQW9idcImt0h9MaSTQyjErPO9Mkp64XqIvIz6lYOhWe6wwZpB5b2S6F6ysDfXkQbkEccKuDNgQAB0_Eh_I_4E9JZU6j_NyxDg6mlT2y1nozX_3-5dGKhgdU4IleqRK8qASosSSSAvjqfeE-3vkbahAcrdM6E8oQaoz2m6hMr5TRpuBF6LRJjqpu2G-KPU7w",
												"disabled": true
											},
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{authCodeUrl}}",
											"host": [
												"{{authCodeUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "3005: O3 Retrieve a consent by its id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB"
											},
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{cs}}/v2024.31/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2024.31",
												"consents",
												"{{consent-id-from-hh}}"
											],
											"query": [
												{
													"key": "authorization",
													"value": "foo",
													"disabled": true
												},
												{
													"key": "x-cert-dn",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4003: O3: Patch the consent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											},
											{
												"key": "content-type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"psuIdentifiers\": {\r\n        \"userId\": \"{{userId}}\"\r\n    },\r\n    \"accountIds\": {{accountIds}},\r\n    \"consentBody.Data.Status\": \"Authorised\"\r\n}"
										},
										"url": {
											"raw": "{{cs}}/v2024.31/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2024.31",
												"consents",
												"{{consent-id-from-hh}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "4005: O3: Confirm with Heimdall",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authorizationCode\", responseBody);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "heimdall.suppressRefreshToken",
													"value": "false",
													"type": "text"
												},
												{
													"key": "heimdall.accessTokenValidity",
													"value": "3600",
													"type": "text",
													"disabled": true
												},
												{
													"key": "heimdall.refreshTokenValidity",
													"value": "7200",
													"type": "text",
													"disabled": true
												},
												{
													"key": "openbanking_intent_id",
													"value": "{{consent-id-from-hh}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{authEndpoint}}/{{interaction-id}}/doConfirm",
											"host": [
												"{{authEndpoint}}"
											],
											"path": [
												"{{interaction-id}}",
												"doConfirm"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments",
													"type": "text"
												},
												{
													"key": "code",
													"value": "{{authorizationCode}}",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 5: GET domestic-payment-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: GET domestic-payment-consents/funds-confirmation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-payment-consents/{{intent-id}}/funds-confirmation",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-payment-consents",
												"{{intent-id}}",
												"funds-confirmation"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: POST domestic-payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.DomesticPaymentId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'domestic-payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//  set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\"))",
													"    },",
													"    \"Risk\": {}",
													"}",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"// var options = {",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}}\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillingGoodsAndServicesInAdvance\",\n        \"MerchantCategoryCode\": \"stri\",\n        \"MerchantCustomerIdentification\": \"string\",\n        \"ContractPresentIndicator\": true,\n        \"BeneficiaryPrepopulatedIndicator\": true,\n        \"PaymentPurposeCode\": \"BKDF\",\n        \"CategoryPurposeCode\": \"BONU\",\n        \"BeneficiaryAccountType\": \"Business\",\n        \"DeliveryAddress\": {\n            \"AddressType\": \"BIZZ\",\n            \"Department\": \"string\",\n            \"SubDepartment\": \"string\",\n            \"StreetName\": \"string\",\n            \"BuildingNumber\": \"string\",\n            \"BuildingName\": \"string\",\n            \"Floor\": \"string\",\n            \"UnitNumber\": \"string\",\n            \"Room\": \"string\",\n            \"PostBox\": \"string\",\n            \"TownLocationName\": \"string\",\n            \"DistrictName\": \"string\",\n            \"CareOf\": \"string\",\n            \"PostCode\": \"string\",\n            \"TownName\": \"string\",\n            \"CountrySubDivision\": \"string\",\n            \"Country\": \"IM\",\n            \"AddressLine\": [\n                \"string\"\n            ]\n        },\n        \"ExtendedPurpose\": \"string\"\n    }\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: GET domestic-payments/{DomesticPaymentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-payments/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-payments",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 9: GET domestic-payments/{DomesticPaymentId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-payments/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-payments",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "PIS Flow - SIngle Domestic Payments UI",
							"item": [
								{
									"name": "Step 1: POST Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST domestic-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"",
													"const data1 = {",
													"    \"Data\": {",
													"        \"Initiation\": {",
													"            \"InstructionIdentification\": pm.environment.get(\"randomString-1\"),",
													"            \"EndToEndIdentification\": pm.environment.get(\"randomString-2\"),",
													"            \"InstructedAmount\": {",
													"                \"Amount\": pm.environment.get(\"randomPrice\"),",
													"                \"Currency\": \"GBP\"",
													"            },",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",",
													"                \"Identification\": \"000000\" + pm.environment.get(\"randomBankAccount\"),",
													"                \"Name\": pm.environment.get(\"randomCompanyName\")",
													"            },",
													"            \"RemittanceInformation\": {",
													"                \"Reference\": \"Remitce ormation\",",
													"                \"Unstructured\": pm.environment.get(\"randomCreditCardMask\") + \" \" + pm.environment.get(\"randomLoremWords\")",
													"            }",
													"        }",
													"    },",
													"    \"Risk\": {}",
													"}",
													"",
													"",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"",
													"// var options = {",
													"",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.tc",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"ReadRefundAccount\": \"No\",\r\n        \"Initiation\": {\r\n            \"InstructionIdentification\": \"12345\",\r\n            \"EndToEndIdentification\": \"string\",\r\n            \"LocalInstrument\": \"UK.OBIE.BACS\",\r\n            \"InstructedAmount\": {\r\n                \"Amount\": \"928\",\r\n                \"Currency\": \"GBP\"\r\n            },\r\n            // \"DebtorAccount\": {\r\n            //     \"SchemeName\": \"UK.OBIE.IBAN\",\r\n            //     \"Identification\": \"AB12CD34EF567890123456789012345678901\",\r\n            //     \"Name\": \"string\",\r\n            //     \"SecondaryIdentification\": \"string\",\r\n            //     \"Proxy\": {\r\n            //         \"Identification\": \"string\",\r\n            //         \"Code\": \"TELE\",\r\n            //         \"Type\": \"string\"\r\n            //     }\r\n            // },\r\n            \"CreditorAccount\": {\r\n                \"SchemeName\": \"UK.OBIE.IBAN\",\r\n                \"Identification\": \"AB12CD34EF567890123456789012345678901\",\r\n                \"Name\": \"string\",\r\n                \"SecondaryIdentification\": \"string\",\r\n                \"Proxy\": {\r\n                    \"Identification\": \"string\",\r\n                    \"Code\": \"TELE\",\r\n                    \"Type\": \"string\"\r\n                }\r\n            },\r\n            \"CreditorPostalAddress\": {\r\n                \"AddressType\": \"BIZZ\",\r\n                \"Department\": \"string\",\r\n                \"SubDepartment\": \"string\",\r\n                \"StreetName\": \"string\",\r\n                \"BuildingNumber\": \"string\",\r\n                \"BuildingName\": \"string\",\r\n                \"Floor\": \"string\",\r\n                \"UnitNumber\": \"string\",\r\n                \"Room\": \"string\",\r\n                \"PostBox\": \"string\",\r\n                \"TownLocationName\": \"string\",\r\n                \"DistrictName\": \"string\",\r\n                \"CareOf\": \"string\",\r\n                \"PostCode\": \"string\",\r\n                \"TownName\": \"string\",\r\n                \"CountrySubDivision\": \"string\",\r\n                \"Country\": \"TE\",\r\n                \"AddressLine\": [\r\n                    \"string\"\r\n                ]\r\n            },\r\n            \"UltimateCreditor\": {\r\n                \"Name\": \"string\",\r\n                \"Identification\": \"string\",\r\n                \"LEI\": \"252200LN4Q4W976ZRW63\",\r\n                \"SchemeName\": \"string\",\r\n                \"PostalAddress\": {\r\n                    \"AddressType\": \"BIZZ\",\r\n                    \"Department\": \"string\",\r\n                    \"SubDepartment\": \"string\",\r\n                    \"StreetName\": \"string\",\r\n                    \"BuildingNumber\": \"string\",\r\n                    \"BuildingName\": \"string\",\r\n                    \"Floor\": \"string\",\r\n                    \"UnitNumber\": \"string\",\r\n                    \"Room\": \"string\",\r\n                    \"PostBox\": \"string\",\r\n                    \"TownLocationName\": \"string\",\r\n                    \"DistrictName\": \"string\",\r\n                    \"CareOf\": \"string\",\r\n                    \"PostCode\": \"string\",\r\n                    \"TownName\": \"string\",\r\n                    \"CountrySubDivision\": \"string\",\r\n                    \"Country\": \"XF\",\r\n                    \"AddressLine\": [\r\n                        \"string\"\r\n                    ]\r\n                }\r\n            },\r\n            \"UltimateDebtor\": {\r\n                \"Name\": \"string\",\r\n                \"Identification\": \"string\",\r\n                \"LEI\": \"679000FKMU36IXVR8H20\",\r\n                \"SchemeName\": \"string\",\r\n                \"PostalAddress\": {\r\n                    \"AddressType\": \"BIZZ\",\r\n                    \"Department\": \"string\",\r\n                    \"SubDepartment\": \"string\",\r\n                    \"StreetName\": \"string\",\r\n                    \"BuildingNumber\": \"string\",\r\n                    \"BuildingName\": \"string\",\r\n                    \"Floor\": \"string\",\r\n                    \"UnitNumber\": \"string\",\r\n                    \"Room\": \"string\",\r\n                    \"PostBox\": \"string\",\r\n                    \"TownLocationName\": \"string\",\r\n                    \"DistrictName\": \"string\",\r\n                    \"CareOf\": \"string\",\r\n                    \"PostCode\": \"string\",\r\n                    \"TownName\": \"string\",\r\n                    \"CountrySubDivision\": \"string\",\r\n                    \"Country\": \"CU\",\r\n                    \"AddressLine\": [\r\n                        \"string\"\r\n                    ]\r\n                }\r\n            },\r\n            \"RegulatoryReporting\": [\r\n                {\r\n                    \"DebitCreditReportingIndicator\": \"CRED\",\r\n                    \"Authority\": {\r\n                        \"Name\": \"string\",\r\n                        \"CountryCode\": \"LU\"\r\n                    },\r\n                    \"Details\": [\r\n                        {\r\n                            \"Type\": \"string\",\r\n                            \"Date\": \"2024-06-14T12:46:42.157Z\",\r\n                            \"Country\": \"KX\",\r\n                            \"Amount\": {\r\n                                \"Amount\": \"0586094974283\",\r\n                                \"Currency\": \"OBJ\"\r\n                            },\r\n                            \"Information\": [\r\n                                \"string\"\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"RemittanceInformation\": {\r\n                \"Structured\": [\r\n                    {\r\n                        \"ReferredDocumentInformation\": [\r\n                            {\r\n                                \"Code\": \"CINV\",\r\n                                \"Issuer\": \"string\",\r\n                                \"Number\": \"string\",\r\n                                \"RelatedDate\": \"2024-06-14T12:46:42.157Z\",\r\n                                \"LineDetails\": [\r\n                                    \"string\"\r\n                                ]\r\n                            }\r\n                        ],\r\n                        \"ReferredDocumentAmount\": 0,\r\n                        \"CreditorReferenceInformation\": {\r\n                            \"Code\": \"DISP\",\r\n                            \"Issuer\": \"string\",\r\n                            \"Reference\": \"string\"\r\n                        },\r\n                        \"Invoicer\": \"string\",\r\n                        \"Invoicee\": \"string\",\r\n                        \"TaxRemittance\": \"string\",\r\n                        \"AdditionalRemittanceInformation\": [\r\n                            \"string\"\r\n                        ]\r\n                    }\r\n                ],\r\n                \"Unstructured\": [\r\n                    \"string\"\r\n                ]\r\n            },\r\n            \"SupplementaryData\": {\r\n                \"additionalProp1\": {}\r\n            }\r\n        },\r\n        \"Authorisation\": {\r\n            \"AuthorisationType\": \"Any\",\r\n            \"CompletionDateTime\": \"2024-08-14T12:46:42.157Z\"\r\n        },\r\n        \"SCASupportData\": {\r\n            \"RequestedSCAExemptionType\": \"BillPayment\",\r\n            \"AppliedAuthenticationApproach\": \"CA\",\r\n            \"ReferencePaymentOrderId\": \"string\"\r\n        }\r\n    },\r\n    \"Risk\": {\r\n        \"PaymentContextCode\": \"BillingGoodsAndServicesInAdvance\",\r\n        \"MerchantCategoryCode\": \"stri\",\r\n        \"MerchantCustomerIdentification\": \"string\",\r\n        \"ContractPresentIndicator\": true,\r\n        \"BeneficiaryPrepopulatedIndicator\": true,\r\n        \"PaymentPurposeCode\": \"BKDF\",\r\n        \"CategoryPurposeCode\": \"BONU\",\r\n        \"BeneficiaryAccountType\": \"Business\",\r\n        \"DeliveryAddress\": {\r\n            \"AddressType\": \"BIZZ\",\r\n            \"Department\": \"string\",\r\n            \"SubDepartment\": \"string\",\r\n            \"StreetName\": \"string\",\r\n            \"BuildingNumber\": \"string\",\r\n            \"BuildingName\": \"string\",\r\n            \"Floor\": \"string\",\r\n            \"UnitNumber\": \"string\",\r\n            \"Room\": \"string\",\r\n            \"PostBox\": \"string\",\r\n            \"TownLocationName\": \"string\",\r\n            \"DistrictName\": \"string\",\r\n            \"CareOf\": \"string\",\r\n            \"PostCode\": \"string\",\r\n            \"TownName\": \"string\",\r\n            \"CountrySubDivision\": \"string\",\r\n            \"Country\": \"IM\",\r\n            \"AddressLine\": [\r\n                \"string\"\r\n            ]\r\n        },\r\n        \"ExtendedPurpose\": \"string\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments",
													"type": "text"
												},
												{
													"key": "code",
													"value": "b6f24bd4-ab95-49f8-8c14-6a33714659d3",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 5: GET domestic-payment-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: GET domestic-payment-consents/funds-confirmation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-payment-consents/{{intent-id}}/funds-confirmation",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-payment-consents",
												"{{intent-id}}",
												"funds-confirmation"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: POST domestic-payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.DomesticPaymentId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'domestic-payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//  set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\"))",
													"    },",
													"    \"Risk\": {}",
													"}",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"// var options = {",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}}\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillingGoodsAndServicesInAdvance\",\n        \"MerchantCategoryCode\": \"stri\",\n        \"MerchantCustomerIdentification\": \"string\",\n        \"ContractPresentIndicator\": true,\n        \"BeneficiaryPrepopulatedIndicator\": true,\n        \"PaymentPurposeCode\": \"BKDF\",\n        \"CategoryPurposeCode\": \"BONU\",\n        \"BeneficiaryAccountType\": \"Business\",\n        \"DeliveryAddress\": {\n            \"AddressType\": \"BIZZ\",\n            \"Department\": \"string\",\n            \"SubDepartment\": \"string\",\n            \"StreetName\": \"string\",\n            \"BuildingNumber\": \"string\",\n            \"BuildingName\": \"string\",\n            \"Floor\": \"string\",\n            \"UnitNumber\": \"string\",\n            \"Room\": \"string\",\n            \"PostBox\": \"string\",\n            \"TownLocationName\": \"string\",\n            \"DistrictName\": \"string\",\n            \"CareOf\": \"string\",\n            \"PostCode\": \"string\",\n            \"TownName\": \"string\",\n            \"CountrySubDivision\": \"string\",\n            \"Country\": \"IM\",\n            \"AddressLine\": [\n                \"string\"\n            ]\n        },\n        \"ExtendedPurpose\": \"string\"\n    }\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8:GET domestic-payments/{DomesticPaymentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-payments/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-payments",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 9: GET domestic-payments/{DomesticPaymentId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-payments/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-payments",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "PIS Flow - Domestic Scheduled Payments Headless",
							"item": [
								{
									"name": "Step 1: Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST domestic-scheduled-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"pm.environment.set(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"",
													"const data1 = {",
													"",
													"",
													"    \"Data\": {",
													"        \"Permission\": \"Create\",",
													"        \"Initiation\": {",
													"            \"RequestedExecutionDateTime\": pm.environment.get(\"randomDateFuture\"),",
													"            \"InstructionIdentification\": pm.environment.get(\"randomString-1\"),",
													"            \"EndToEndIdentification\": pm.environment.get(\"randomString-2\"),",
													"            \"InstructedAmount\": {",
													"                \"Amount\": pm.environment.get(\"randomPrice\"),",
													"                \"Currency\": \"GBP\"",
													"            },",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"SortCodeAccountNumber\",",
													"                \"Identification\": \"000000\" + pm.environment.get(\"randomBankAccount\"),",
													"                \"Name\": pm.environment.get(\"randomCompanyName\")",
													"            },",
													"            \"RemittanceInformation\": {",
													"                \"Reference\": \"Remitce ormation\"",
													"            }",
													"        }",
													"    },",
													"    \"Risk\": {}",
													"",
													"}",
													"",
													"pm.environment.set(\"data1\", data1)",
													"",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"",
													"// var options = {",
													"",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"",
													"//     }",
													"// };",
													"",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.tc",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"Permission\": \"Create\",\r\n        \"ReadRefundAccount\": \"No\",\r\n        \"Initiation\": {\r\n            \"InstructionIdentification\": \"{{randomString-1}}\",\r\n            \"EndToEndIdentification\": \"{{randomString-2}}\",\r\n            \"LocalInstrument\": \"UK.OBIE.BACS\",\r\n            \"RequestedExecutionDateTime\": \"2025-07-05T15:57:15.032Z\",\r\n            \"InstructedAmount\": {\r\n                \"Amount\": \"3.51\",\r\n                \"Currency\": \"GBP\"\r\n            },\r\n            \"DebtorAccount\": {\r\n                \"SchemeName\": \"SortCodeAccountNumber\",\r\n                \"Identification\": \"00000078381930\",\r\n                \"Name\": \"string\",\r\n                \"SecondaryIdentification\": \"string\",\r\n                \"Proxy\": {\r\n                    \"Identification\": \"string\",\r\n                    \"Code\": \"TELE\",\r\n                    \"Type\": \"string\"\r\n                }\r\n            },\r\n            \"CreditorAccount\": {\r\n                \"SchemeName\": \"SortCodeAccountNumber\",\r\n                \"Identification\": \"00000078381930\",\r\n                \"Name\": \"string\",\r\n                \"SecondaryIdentification\": \"string\",\r\n                \"Proxy\": {\r\n                    \"Identification\": \"string\",\r\n                    \"Code\": \"TELE\",\r\n                    \"Type\": \"string\"\r\n                }\r\n            },\r\n            \"CreditorPostalAddress\": {\r\n                \"AddressType\": \"BIZZ\",\r\n                \"Department\": \"string\",\r\n                \"SubDepartment\": \"string\",\r\n                \"StreetName\": \"string\",\r\n                \"BuildingNumber\": \"string\",\r\n                \"BuildingName\": \"string\",\r\n                \"Floor\": \"string\",\r\n                \"UnitNumber\": \"string\",\r\n                \"Room\": \"string\",\r\n                \"PostBox\": \"string\",\r\n                \"TownLocationName\": \"string\",\r\n                \"DistrictName\": \"string\",\r\n                \"CareOf\": \"string\",\r\n                \"PostCode\": \"string\",\r\n                \"TownName\": \"string\",\r\n                \"CountrySubDivision\": \"string\",\r\n                \"Country\": \"AH\",\r\n                \"AddressLine\": [\r\n                    \"string\"\r\n                ]\r\n            },\r\n            \"UltimateCreditor\": {\r\n                \"Name\": \"string\",\r\n                \"Identification\": \"string\",\r\n                \"LEI\": \"406900WCHGZW2AZTY897\",\r\n                \"SchemeName\": \"string\",\r\n                \"PostalAddress\": {\r\n                    \"AddressType\": \"BIZZ\",\r\n                    \"Department\": \"string\",\r\n                    \"SubDepartment\": \"string\",\r\n                    \"StreetName\": \"string\",\r\n                    \"BuildingNumber\": \"string\",\r\n                    \"BuildingName\": \"string\",\r\n                    \"Floor\": \"string\",\r\n                    \"UnitNumber\": \"string\",\r\n                    \"Room\": \"string\",\r\n                    \"PostBox\": \"string\",\r\n                    \"TownLocationName\": \"string\",\r\n                    \"DistrictName\": \"string\",\r\n                    \"CareOf\": \"string\",\r\n                    \"PostCode\": \"string\",\r\n                    \"TownName\": \"string\",\r\n                    \"CountrySubDivision\": \"string\",\r\n                    \"Country\": \"PK\",\r\n                    \"AddressLine\": [\r\n                        \"string\"\r\n                    ]\r\n                }\r\n            },\r\n            \"UltimateDebtor\": {\r\n                \"Name\": \"string\",\r\n                \"Identification\": \"string\",\r\n                \"LEI\": \"280500PQV3PQGXZGVN67\",\r\n                \"SchemeName\": \"string\",\r\n                \"PostalAddress\": {\r\n                    \"AddressType\": \"BIZZ\",\r\n                    \"Department\": \"string\",\r\n                    \"SubDepartment\": \"string\",\r\n                    \"StreetName\": \"string\",\r\n                    \"BuildingNumber\": \"string\",\r\n                    \"BuildingName\": \"string\",\r\n                    \"Floor\": \"string\",\r\n                    \"UnitNumber\": \"string\",\r\n                    \"Room\": \"string\",\r\n                    \"PostBox\": \"string\",\r\n                    \"TownLocationName\": \"string\",\r\n                    \"DistrictName\": \"string\",\r\n                    \"CareOf\": \"string\",\r\n                    \"PostCode\": \"string\",\r\n                    \"TownName\": \"string\",\r\n                    \"CountrySubDivision\": \"string\",\r\n                    \"Country\": \"TU\",\r\n                    \"AddressLine\": [\r\n                        \"string\"\r\n                    ]\r\n                }\r\n            },\r\n            \"RegulatoryReporting\": [\r\n                {\r\n                    \"DebitCreditReportingIndicator\": \"CRED\",\r\n                    \"Authority\": {\r\n                        \"Name\": \"string\",\r\n                        \"CountryCode\": \"IX\"\r\n                    },\r\n                    \"Details\": [\r\n                        {\r\n                            \"Type\": \"string\",\r\n                            \"Date\": \"2024-06-14T15:57:15.032Z\",\r\n                            \"Country\": \"RE\",\r\n                            \"Amount\": {\r\n                                \"Amount\": \"5.4\",\r\n                                \"Currency\": \"GBP\"\r\n                            },\r\n                            \"Information\": [\r\n                                \"string\"\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"RemittanceInformation\": {\r\n                \"Structured\": [\r\n                    {\r\n                        \"ReferredDocumentInformation\": [\r\n                            {\r\n                                \"Code\": \"CINV\",\r\n                                \"Issuer\": \"string\",\r\n                                \"Number\": \"string\",\r\n                                \"RelatedDate\": \"2024-06-14T15:57:15.032Z\",\r\n                                \"LineDetails\": [\r\n                                    \"string\"\r\n                                ]\r\n                            }\r\n                        ],\r\n                        \"ReferredDocumentAmount\": 0,\r\n                        \"CreditorReferenceInformation\": {\r\n                            \"Code\": \"DISP\",\r\n                            \"Issuer\": \"string\",\r\n                            \"Reference\": \"string\"\r\n                        },\r\n                        \"Invoicer\": \"string\",\r\n                        \"Invoicee\": \"string\",\r\n                        \"TaxRemittance\": \"string\",\r\n                        \"AdditionalRemittanceInformation\": [\r\n                            \"string\"\r\n                        ]\r\n                    }\r\n                ],\r\n                \"Unstructured\": [\r\n                    \"string\"\r\n                ]\r\n            },\r\n            \"SupplementaryData\": {\r\n                \"additionalProp1\": {}\r\n            }\r\n        },\r\n        \"Authorisation\": {\r\n            \"AuthorisationType\": \"Any\",\r\n            \"CompletionDateTime\": \"2025-07-05T15:57:15.032Z\"\r\n        },\r\n        \"SCASupportData\": {\r\n            \"RequestedSCAExemptionType\": \"BillPayment\",\r\n            \"AppliedAuthenticationApproach\": \"CA\",\r\n            \"ReferencePaymentOrderId\": \"string\"\r\n        }\r\n    },\r\n    \"Risk\": {\r\n        \"PaymentContextCode\": \"BillingGoodsAndServicesInAdvance\",\r\n        \"MerchantCategoryCode\": \"stri\",\r\n        \"MerchantCustomerIdentification\": \"string\",\r\n        \"ContractPresentIndicator\": true,\r\n        \"BeneficiaryPrepopulatedIndicator\": true,\r\n        \"PaymentPurposeCode\": \"BKDF\",\r\n        \"CategoryPurposeCode\": \"BONU\",\r\n        \"BeneficiaryAccountType\": \"Business\",\r\n        \"DeliveryAddress\": {\r\n            \"AddressType\": \"BIZZ\",\r\n            \"Department\": \"string\",\r\n            \"SubDepartment\": \"string\",\r\n            \"StreetName\": \"string\",\r\n            \"BuildingNumber\": \"string\",\r\n            \"BuildingName\": \"string\",\r\n            \"Floor\": \"string\",\r\n            \"UnitNumber\": \"string\",\r\n            \"Room\": \"string\",\r\n            \"PostBox\": \"string\",\r\n            \"TownLocationName\": \"string\",\r\n            \"DistrictName\": \"string\",\r\n            \"CareOf\": \"string\",\r\n            \"PostCode\": \"string\",\r\n            \"TownName\": \"string\",\r\n            \"CountrySubDivision\": \"string\",\r\n            \"Country\": \"VI\",\r\n            \"AddressLine\": [\r\n                \"string\"\r\n            ]\r\n        },\r\n        \"ExtendedPurpose\": \"string\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-scheduled-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-scheduled-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "3003: O3 Call headless-heimdall auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"consent-id-from-hh\", jsonData.interaction.params.claims.id_token.openbanking_intent_id.value);\r",
													"postman.setEnvironmentVariable(\"interaction-id\", jsonData.interaction.interactionId);\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDgyMS44OSwiaWF0IjoxNjA5MTIwODExLjg5LCJuYmYiOjE2MDkxMjA4MTEuODksImp0aSI6IjdhNzVlYmU4LTMxZjktNDU2Yy1iNWU1LTlmOTJkMmMzOTkxOCJ9.O1rBKF87h7LqHgC5sd4pHuVPuKn2CP-feD7xZ1wCT77dfLU8HDDug3zcZdbcMOKH7cnb59MWKTgCcd3aGHfUsfVdT2cE2LrU_pPG7IW1km2Qri89M65241iUR8Ra_By3lULV4AwVywMH7dgjFCWFLWTbQW9idcImt0h9MaSTQyjErPO9Mkp64XqIvIz6lYOhWe6wwZpB5b2S6F6ysDfXkQbkEccKuDNgQAB0_Eh_I_4E9JZU6j_NyxDg6mlT2y1nozX_3-5dGKhgdU4IleqRK8qASosSSSAvjqfeE-3vkbahAcrdM6E8oQaoz2m6hMr5TRpuBF6LRJjqpu2G-KPU7w",
												"disabled": true
											},
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{authCodeUrl}}",
											"host": [
												"{{authCodeUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "3005: O3 Retrieve a consent by its id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB"
											},
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{cs}}/v2024.31/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2024.31",
												"consents",
												"{{consent-id-from-hh}}"
											],
											"query": [
												{
													"key": "authorization",
													"value": "foo",
													"disabled": true
												},
												{
													"key": "x-cert-dn",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4003: O3: Patch the consent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											},
											{
												"key": "content-type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"psuIdentifiers\": {\r\n        \"userId\": \"{{userId}}\"\r\n    },\r\n\r\n    \"accountIds\": {{accountIds}},\r\n    \"consentBody.Data.Status\": \"AUTH\"\r\n}"
										},
										"url": {
											"raw": "{{cs}}/v2024.31/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2024.31",
												"consents",
												"{{consent-id-from-hh}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "4005: O3: Confirm with Heimdall",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authorizationCode\", responseBody);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "heimdall.suppressRefreshToken",
													"value": "false",
													"type": "text"
												},
												{
													"key": "heimdall.accessTokenValidity",
													"value": "3600",
													"type": "text",
													"disabled": true
												},
												{
													"key": "heimdall.refreshTokenValidity",
													"value": "7200",
													"type": "text",
													"disabled": true
												},
												{
													"key": "openbanking_intent_id",
													"value": "{{consent-id-from-hh}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{authEndpoint}}/{{interaction-id}}/doConfirm",
											"host": [
												"{{authEndpoint}}"
											],
											"path": [
												"{{interaction-id}}",
												"doConfirm"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments",
													"type": "text"
												},
												{
													"key": "code",
													"value": "{{authorizationCode}}",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 5: GET domestic-scheduled-payment-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-scheduled-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-scheduled-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: POST domestic-scheduled-payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.DomesticScheduledPaymentId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'domestic-scheduled-payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\"))",
													"    },",
													"    \"Risk\": {}",
													"}",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"// var options = {",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}}\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillingGoodsAndServicesInAdvance\",\n        \"MerchantCategoryCode\": \"stri\",\n        \"MerchantCustomerIdentification\": \"string\",\n        \"ContractPresentIndicator\": true,\n        \"BeneficiaryPrepopulatedIndicator\": true,\n        \"PaymentPurposeCode\": \"BKDF\",\n        \"CategoryPurposeCode\": \"BONU\",\n        \"BeneficiaryAccountType\": \"Business\",\n        \"DeliveryAddress\": {\n            \"AddressType\": \"BIZZ\",\n            \"Department\": \"string\",\n            \"SubDepartment\": \"string\",\n            \"StreetName\": \"string\",\n            \"BuildingNumber\": \"string\",\n            \"BuildingName\": \"string\",\n            \"Floor\": \"string\",\n            \"UnitNumber\": \"string\",\n            \"Room\": \"string\",\n            \"PostBox\": \"string\",\n            \"TownLocationName\": \"string\",\n            \"DistrictName\": \"string\",\n            \"CareOf\": \"string\",\n            \"PostCode\": \"string\",\n            \"TownName\": \"string\",\n            \"CountrySubDivision\": \"string\",\n            \"Country\": \"VI\",\n            \"AddressLine\": [\n                \"string\"\n            ]\n        },\n        \"ExtendedPurpose\": \"string\"\n    }\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-scheduled-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-scheduled-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: GET domestic-scheduled-payments/{DomesticScheduledPaymentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-scheduled-payments/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-scheduled-payments",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: GET  domestic-scheduled-payments/{DomesticScheduledPaymentId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-scheduled-payments/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-scheduled-payments",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "PIS Flow - Domestic Scheduled Payments UI",
							"item": [
								{
									"name": "Step 1: Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST domestic-scheduled-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"pm.environment.set(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"",
													"const data1 = {",
													"",
													"",
													"    \"Data\": {",
													"        \"Permission\": \"Create\",",
													"        \"Initiation\": {",
													"            \"RequestedExecutionDateTime\": pm.environment.get(\"randomDateFuture\"),",
													"            \"InstructionIdentification\": pm.environment.get(\"randomString-1\"),",
													"            \"EndToEndIdentification\": pm.environment.get(\"randomString-2\"),",
													"            \"InstructedAmount\": {",
													"                \"Amount\": pm.environment.get(\"randomPrice\"),",
													"                \"Currency\": \"GBP\"",
													"            },",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"SortCodeAccountNumber\",",
													"                \"Identification\": \"000000\" + pm.environment.get(\"randomBankAccount\"),",
													"                \"Name\": pm.environment.get(\"randomCompanyName\")",
													"            },",
													"            \"RemittanceInformation\": {",
													"                \"Reference\": \"Remitce ormation\"",
													"            }",
													"        }",
													"    },",
													"    \"Risk\": {}",
													"",
													"}",
													"",
													"pm.environment.set(\"data1\", data1)",
													"",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"",
													"// var options = {",
													"",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"",
													"//     }",
													"// };",
													"",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.tc",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Data\": {\r\n    \"Permission\": \"Create\",\r\n    \"ReadRefundAccount\": \"No\",\r\n    \"Initiation\": {\r\n      \"InstructionIdentification\": \"{{randomString-1}}\",\r\n      \"EndToEndIdentification\": \"{{randomString-2}}\",\r\n      \"LocalInstrument\": \"UK.OBIE.BACS\",\r\n      \"RequestedExecutionDateTime\": \"2025-07-05T15:57:15.032Z\",\r\n      \"InstructedAmount\": {\r\n        \"Amount\": \"3.51\",\r\n        \"Currency\": \"GBP\"\r\n      },\r\n    //   \"DebtorAccount\": {\r\n    //    \"SchemeName\": \"SortCodeAccountNumber\",\r\n    //             \"Identification\": \"00000078381930\",\r\n    //     \"Name\": \"string\",\r\n    //     \"SecondaryIdentification\": \"string\",\r\n    //     \"Proxy\": {\r\n    //       \"Identification\": \"string\",\r\n    //       \"Code\": \"TELE\",\r\n    //       \"Type\": \"string\"\r\n    //     }\r\n    //   },\r\n      \"CreditorAccount\": {\r\n     \"SchemeName\": \"SortCodeAccountNumber\",\r\n                \"Identification\": \"00000078381930\",\r\n        \"Name\": \"string\",\r\n        \"SecondaryIdentification\": \"string\",\r\n        \"Proxy\": {\r\n          \"Identification\": \"string\",\r\n          \"Code\": \"TELE\",\r\n          \"Type\": \"string\"\r\n        }\r\n      },\r\n      \"CreditorPostalAddress\": {\r\n        \"AddressType\": \"BIZZ\",\r\n        \"Department\": \"string\",\r\n        \"SubDepartment\": \"string\",\r\n        \"StreetName\": \"string\",\r\n        \"BuildingNumber\": \"string\",\r\n        \"BuildingName\": \"string\",\r\n        \"Floor\": \"string\",\r\n        \"UnitNumber\": \"string\",\r\n        \"Room\": \"string\",\r\n        \"PostBox\": \"string\",\r\n        \"TownLocationName\": \"string\",\r\n        \"DistrictName\": \"string\",\r\n        \"CareOf\": \"string\",\r\n        \"PostCode\": \"string\",\r\n        \"TownName\": \"string\",\r\n        \"CountrySubDivision\": \"string\",\r\n        \"Country\": \"AH\",\r\n        \"AddressLine\": [\r\n          \"string\"\r\n        ]\r\n      },\r\n      \"UltimateCreditor\": {\r\n        \"Name\": \"string\",\r\n        \"Identification\": \"string\",\r\n        \"LEI\": \"406900WCHGZW2AZTY897\",\r\n        \"SchemeName\": \"string\",\r\n        \"PostalAddress\": {\r\n          \"AddressType\": \"BIZZ\",\r\n          \"Department\": \"string\",\r\n          \"SubDepartment\": \"string\",\r\n          \"StreetName\": \"string\",\r\n          \"BuildingNumber\": \"string\",\r\n          \"BuildingName\": \"string\",\r\n          \"Floor\": \"string\",\r\n          \"UnitNumber\": \"string\",\r\n          \"Room\": \"string\",\r\n          \"PostBox\": \"string\",\r\n          \"TownLocationName\": \"string\",\r\n          \"DistrictName\": \"string\",\r\n          \"CareOf\": \"string\",\r\n          \"PostCode\": \"string\",\r\n          \"TownName\": \"string\",\r\n          \"CountrySubDivision\": \"string\",\r\n          \"Country\": \"PK\",\r\n          \"AddressLine\": [\r\n            \"string\"\r\n          ]\r\n        }\r\n      },\r\n      \"UltimateDebtor\": {\r\n        \"Name\": \"string\",\r\n        \"Identification\": \"string\",\r\n        \"LEI\": \"280500PQV3PQGXZGVN67\",\r\n        \"SchemeName\": \"string\",\r\n        \"PostalAddress\": {\r\n          \"AddressType\": \"BIZZ\",\r\n          \"Department\": \"string\",\r\n          \"SubDepartment\": \"string\",\r\n          \"StreetName\": \"string\",\r\n          \"BuildingNumber\": \"string\",\r\n          \"BuildingName\": \"string\",\r\n          \"Floor\": \"string\",\r\n          \"UnitNumber\": \"string\",\r\n          \"Room\": \"string\",\r\n          \"PostBox\": \"string\",\r\n          \"TownLocationName\": \"string\",\r\n          \"DistrictName\": \"string\",\r\n          \"CareOf\": \"string\",\r\n          \"PostCode\": \"string\",\r\n          \"TownName\": \"string\",\r\n          \"CountrySubDivision\": \"string\",\r\n          \"Country\": \"TU\",\r\n          \"AddressLine\": [\r\n            \"string\"\r\n          ]\r\n        }\r\n      },\r\n      \"RegulatoryReporting\": [\r\n        {\r\n          \"DebitCreditReportingIndicator\": \"CRED\",\r\n          \"Authority\": {\r\n            \"Name\": \"string\",\r\n            \"CountryCode\": \"IX\"\r\n          },\r\n          \"Details\": [\r\n            {\r\n              \"Type\": \"string\",\r\n              \"Date\": \"2024-06-14T15:57:15.032Z\",\r\n              \"Country\": \"RE\",\r\n              \"Amount\": {\r\n                \"Amount\": \"5.4\",\r\n                \"Currency\": \"GBP\"\r\n              },\r\n              \"Information\": [\r\n                \"string\"\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      \"RemittanceInformation\": {\r\n        \"Structured\": [\r\n          {\r\n            \"ReferredDocumentInformation\": [\r\n              {\r\n                \"Code\": \"CINV\",\r\n                \"Issuer\": \"string\",\r\n                \"Number\": \"string\",\r\n                \"RelatedDate\": \"2024-06-14T15:57:15.032Z\",\r\n                \"LineDetails\": [\r\n                  \"string\"\r\n                ]\r\n              }\r\n            ],\r\n            \"ReferredDocumentAmount\": 0,\r\n            \"CreditorReferenceInformation\": {\r\n              \"Code\": \"DISP\",\r\n              \"Issuer\": \"string\",\r\n              \"Reference\": \"string\"\r\n            },\r\n            \"Invoicer\": \"string\",\r\n            \"Invoicee\": \"string\",\r\n            \"TaxRemittance\": \"string\",\r\n            \"AdditionalRemittanceInformation\": [\r\n              \"string\"\r\n            ]\r\n          }\r\n        ],\r\n        \"Unstructured\": [\r\n          \"string\"\r\n        ]\r\n      },\r\n      \"SupplementaryData\": {\r\n        \"additionalProp1\": {}\r\n      }\r\n    },\r\n    \"Authorisation\": {\r\n      \"AuthorisationType\": \"Any\",\r\n      \"CompletionDateTime\": \"2025-07-05T15:57:15.032Z\"\r\n    },\r\n    \"SCASupportData\": {\r\n      \"RequestedSCAExemptionType\": \"BillPayment\",\r\n      \"AppliedAuthenticationApproach\": \"CA\",\r\n      \"ReferencePaymentOrderId\": \"string\"\r\n    }\r\n  },\r\n  \"Risk\": {\r\n    \"PaymentContextCode\": \"BillingGoodsAndServicesInAdvance\",\r\n    \"MerchantCategoryCode\": \"stri\",\r\n    \"MerchantCustomerIdentification\": \"string\",\r\n    \"ContractPresentIndicator\": true,\r\n    \"BeneficiaryPrepopulatedIndicator\": true,\r\n    \"PaymentPurposeCode\": \"BKDF\",\r\n    \"CategoryPurposeCode\": \"BONU\",\r\n    \"BeneficiaryAccountType\": \"Business\",\r\n    \"DeliveryAddress\": {\r\n      \"AddressType\": \"BIZZ\",\r\n      \"Department\": \"string\",\r\n      \"SubDepartment\": \"string\",\r\n      \"StreetName\": \"string\",\r\n      \"BuildingNumber\": \"string\",\r\n      \"BuildingName\": \"string\",\r\n      \"Floor\": \"string\",\r\n      \"UnitNumber\": \"string\",\r\n      \"Room\": \"string\",\r\n      \"PostBox\": \"string\",\r\n      \"TownLocationName\": \"string\",\r\n      \"DistrictName\": \"string\",\r\n      \"CareOf\": \"string\",\r\n      \"PostCode\": \"string\",\r\n      \"TownName\": \"string\",\r\n      \"CountrySubDivision\": \"string\",\r\n      \"Country\": \"VI\",\r\n      \"AddressLine\": [\r\n        \"string\"\r\n      ]\r\n    },\r\n    \"ExtendedPurpose\": \"string\"\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-scheduled-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-scheduled-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments",
													"type": "text"
												},
												{
													"key": "code",
													"value": "29014474-d611-4fe0-9702-a090491d661f",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 5: GET domestic-scheduled-payment-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-scheduled-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-scheduled-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: POST domestic-scheduled-payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.DomesticScheduledPaymentId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'domestic-scheduled-payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\"))",
													"    },",
													"    \"Risk\": {}",
													"}",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"// var options = {",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}}\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillingGoodsAndServicesInAdvance\",\n        \"MerchantCategoryCode\": \"stri\",\n        \"MerchantCustomerIdentification\": \"string\",\n        \"ContractPresentIndicator\": true,\n        \"BeneficiaryPrepopulatedIndicator\": true,\n        \"PaymentPurposeCode\": \"BKDF\",\n        \"CategoryPurposeCode\": \"BONU\",\n        \"BeneficiaryAccountType\": \"Business\",\n        \"DeliveryAddress\": {\n            \"AddressType\": \"BIZZ\",\n            \"Department\": \"string\",\n            \"SubDepartment\": \"string\",\n            \"StreetName\": \"string\",\n            \"BuildingNumber\": \"string\",\n            \"BuildingName\": \"string\",\n            \"Floor\": \"string\",\n            \"UnitNumber\": \"string\",\n            \"Room\": \"string\",\n            \"PostBox\": \"string\",\n            \"TownLocationName\": \"string\",\n            \"DistrictName\": \"string\",\n            \"CareOf\": \"string\",\n            \"PostCode\": \"string\",\n            \"TownName\": \"string\",\n            \"CountrySubDivision\": \"string\",\n            \"Country\": \"VI\",\n            \"AddressLine\": [\n                \"string\"\n            ]\n        },\n        \"ExtendedPurpose\": \"string\"\n    }\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-scheduled-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-scheduled-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: GET domestic-scheduled-payments/{DomesticScheduledPaymentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-scheduled-payments/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-scheduled-payments",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: GET  domestic-scheduled-payments/{DomesticScheduledPaymentId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-scheduled-payments/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-scheduled-payments",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "PIS Flow - Domestic Standing Orders Headless",
							"item": [
								{
									"name": "Step 1: Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST domestic-standing-order-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"",
													"const data1 = {",
													"    \"Data\": {",
													"        \"Permission\": \"Create\",",
													"        \"Initiation\": {",
													"            \"Frequency\": \"EvryDay\",",
													"            \"FirstPaymentDateTime\": \"2025-07-01T13:14:25+00:00\",",
													"            \"FinalPaymentDateTime\": \"2025-07-01T15:14:25+00:00\",",
													"            \"FirstPaymentAmount\": {",
													"                \"Amount\": \"10.00\",",
													"                \"Currency\": \"GBP\"",
													"            },",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"SortCodeAccountNumber\",",
													"                \"Identification\": \"20202010981789\",",
													"                \"Name\": \"Dr Foo\"",
													"            }",
													"        }",
													"    },",
													"    \"Risk\": {}",
													"}",
													"",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"",
													"// var options = {",
													"",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.it",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"Permission\": \"Create\",\r\n        \"ReadRefundAccount\": \"No\",\r\n        \"Initiation\": {\r\n            \"RemittanceInformation\": {\r\n                \"Structured\": [\r\n                    {\r\n                        \"ReferredDocumentInformation\": [\r\n                            {\r\n                                \"Code\": \"CINV\",\r\n                                \"Issuer\": \"string\",\r\n                                \"Number\": \"string\",\r\n                                \"RelatedDate\": \"2024-06-17T08:13:05.596Z\",\r\n                                \"LineDetails\": [\r\n                                    \"string\"\r\n                                ]\r\n                            }\r\n                        ],\r\n                        \"ReferredDocumentAmount\": 0,\r\n                        \"CreditorReferenceInformation\": {\r\n                            \"Code\": \"DISP\",\r\n                            \"Issuer\": \"string\",\r\n                            \"Reference\": \"string\"\r\n                        },\r\n                        \"Invoicer\": \"string\",\r\n                        \"Invoicee\": \"string\",\r\n                        \"TaxRemittance\": \"string\",\r\n                        \"AdditionalRemittanceInformation\": [\r\n                            \"string\"\r\n                        ]\r\n                    }\r\n                ],\r\n                \"Unstructured\": [\r\n                    \"string\"\r\n                ]\r\n            },\r\n            \"FirstPaymentAmount\": {\r\n                \"Amount\": \"463671\",\r\n                \"Currency\": \"GBP\"\r\n            },\r\n            \"RecurringPaymentAmount\": {\r\n                \"Amount\": \"13686924820.38\",\r\n                \"Currency\": \"GBP\"\r\n            },\r\n            \"FinalPaymentAmount\": {\r\n                \"Amount\": \"3178338\",\r\n                \"Currency\": \"GBP\"\r\n            },\r\n            \"DebtorAccount\": {\r\n                \"SchemeName\": \"SortCodeAccountNumber\",\r\n                \"Identification\": \"20202010981789\",\r\n                \"Name\": \"string\",\r\n                \"SecondaryIdentification\": \"string\",\r\n                \"Proxy\": {\r\n                    \"Identification\": \"string\",\r\n                    \"Code\": \"TELE\",\r\n                    \"Type\": \"string\"\r\n                }\r\n            },\r\n            \"CreditorAccount\": {\r\n                \"SchemeName\": \"SortCodeAccountNumber\",\r\n                \"Identification\": \"20202010981789\",\r\n                \"Name\": \"string\",\r\n                \"SecondaryIdentification\": \"string\",\r\n                \"Proxy\": {\r\n                    \"Identification\": \"string\",\r\n                    \"Code\": \"TELE\",\r\n                    \"Type\": \"string\"\r\n                }\r\n            },\r\n            \"UltimateCreditor\": {\r\n                \"Name\": \"string\",\r\n                \"Identification\": \"string\",\r\n                \"LEI\": \"328600ATTX78IYJSOU80\",\r\n                \"SchemeName\": \"string\",\r\n                \"PostalAddress\": {\r\n                    \"AddressType\": \"BIZZ\",\r\n                    \"Department\": \"string\",\r\n                    \"SubDepartment\": \"string\",\r\n                    \"StreetName\": \"string\",\r\n                    \"BuildingNumber\": \"string\",\r\n                    \"BuildingName\": \"string\",\r\n                    \"Floor\": \"string\",\r\n                    \"UnitNumber\": \"string\",\r\n                    \"Room\": \"string\",\r\n                    \"PostBox\": \"string\",\r\n                    \"TownLocationName\": \"string\",\r\n                    \"DistrictName\": \"string\",\r\n                    \"CareOf\": \"string\",\r\n                    \"PostCode\": \"string\",\r\n                    \"TownName\": \"string\",\r\n                    \"CountrySubDivision\": \"string\",\r\n                    \"Country\": \"FO\",\r\n                    \"AddressLine\": [\r\n                        \"string\"\r\n                    ]\r\n                }\r\n            },\r\n            \"UltimateDebtor\": {\r\n                \"Name\": \"string\",\r\n                \"Identification\": \"string\",\r\n                \"LEI\": \"861300ONNZGJ5Y4JUU29\",\r\n                \"SchemeName\": \"string\",\r\n                \"PostalAddress\": {\r\n                    \"AddressType\": \"BIZZ\",\r\n                    \"Department\": \"string\",\r\n                    \"SubDepartment\": \"string\",\r\n                    \"StreetName\": \"string\",\r\n                    \"BuildingNumber\": \"string\",\r\n                    \"BuildingName\": \"string\",\r\n                    \"Floor\": \"string\",\r\n                    \"UnitNumber\": \"string\",\r\n                    \"Room\": \"string\",\r\n                    \"PostBox\": \"string\",\r\n                    \"TownLocationName\": \"string\",\r\n                    \"DistrictName\": \"string\",\r\n                    \"CareOf\": \"string\",\r\n                    \"PostCode\": \"string\",\r\n                    \"TownName\": \"string\",\r\n                    \"CountrySubDivision\": \"string\",\r\n                    \"Country\": \"KB\",\r\n                    \"AddressLine\": [\r\n                        \"string\"\r\n                    ]\r\n                }\r\n            },\r\n            \"RegulatoryReporting\": [\r\n                {\r\n                    \"DebitCreditReportingIndicator\": \"CRED\",\r\n                    \"Authority\": {\r\n                        \"Name\": \"string\",\r\n                        \"CountryCode\": \"AH\"\r\n                    },\r\n                    \"Details\": [\r\n                        {\r\n                            \"Type\": \"string\",\r\n                            \"Date\": \"2024-07-03T08:13:05.596Z\",\r\n                            \"Country\": \"TB\",\r\n                            \"Amount\": {\r\n                                \"Amount\": \"675302404893\",\r\n                                \"Currency\": \"GBP\"\r\n                            },\r\n                            \"Information\": [\r\n                                \"string\"\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"MandateRelatedInformation\": {\r\n                \"MandateIdentification\": \"string\",\r\n                \"Classification\": \"FIXE\",\r\n                \"CategoryPurposeCode\": \"BONU\",\r\n                \"FirstPaymentDateTime\": \"2024-07-03T08:13:05.596Z\",\r\n                \"RecurringPaymentDateTime\": \"2024-06-17T08:13:05.596Z\",\r\n                \"FinalPaymentDateTime\": \"2024-07-03T08:13:05.596Z\",\r\n                \"Frequency\": {\r\n                    \"Type\": \"ADHO\",\r\n                    \"CountPerPeriod\": 0,\r\n                    \"PointInTime\": \"st\"\r\n                },\r\n                \"Reason\": \"string\"\r\n            },\r\n            \"SupplementaryData\": {\r\n                \"additionalProp1\": {}\r\n            }\r\n        },\r\n        \"Authorisation\": {\r\n            \"AuthorisationType\": \"Any\",\r\n            \"CompletionDateTime\": \"2024-08-17T08:13:05.596Z\"\r\n        },\r\n        \"SCASupportData\": {\r\n            \"RequestedSCAExemptionType\": \"BillPayment\",\r\n            \"AppliedAuthenticationApproach\": \"CA\",\r\n            \"ReferencePaymentOrderId\": \"string\"\r\n        }\r\n    },\r\n    \"Risk\": {\r\n        \"PaymentContextCode\": \"BillingGoodsAndServicesInAdvance\",\r\n        \"MerchantCategoryCode\": \"stri\",\r\n        \"MerchantCustomerIdentification\": \"string\",\r\n        \"ContractPresentIndicator\": true,\r\n        \"BeneficiaryPrepopulatedIndicator\": true,\r\n        \"PaymentPurposeCode\": \"BKDF\",\r\n        \"CategoryPurposeCode\": \"BONU\",\r\n        \"BeneficiaryAccountType\": \"Business\",\r\n        \"DeliveryAddress\": {\r\n            \"AddressType\": \"BIZZ\",\r\n            \"Department\": \"string\",\r\n            \"SubDepartment\": \"string\",\r\n            \"StreetName\": \"string\",\r\n            \"BuildingNumber\": \"string\",\r\n            \"BuildingName\": \"string\",\r\n            \"Floor\": \"string\",\r\n            \"UnitNumber\": \"string\",\r\n            \"Room\": \"string\",\r\n            \"PostBox\": \"string\",\r\n            \"TownLocationName\": \"string\",\r\n            \"DistrictName\": \"string\",\r\n            \"CareOf\": \"string\",\r\n            \"PostCode\": \"string\",\r\n            \"TownName\": \"string\",\r\n            \"CountrySubDivision\": \"string\",\r\n            \"Country\": \"FF\",\r\n            \"AddressLine\": [\r\n                \"string\"\r\n            ]\r\n        },\r\n        \"ExtendedPurpose\": \"string\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-standing-order-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-standing-order-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "3003: O3 Call headless-heimdall auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"consent-id-from-hh\", jsonData.interaction.params.claims.id_token.openbanking_intent_id.value);\r",
													"postman.setEnvironmentVariable(\"interaction-id\", jsonData.interaction.interactionId);\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDgyMS44OSwiaWF0IjoxNjA5MTIwODExLjg5LCJuYmYiOjE2MDkxMjA4MTEuODksImp0aSI6IjdhNzVlYmU4LTMxZjktNDU2Yy1iNWU1LTlmOTJkMmMzOTkxOCJ9.O1rBKF87h7LqHgC5sd4pHuVPuKn2CP-feD7xZ1wCT77dfLU8HDDug3zcZdbcMOKH7cnb59MWKTgCcd3aGHfUsfVdT2cE2LrU_pPG7IW1km2Qri89M65241iUR8Ra_By3lULV4AwVywMH7dgjFCWFLWTbQW9idcImt0h9MaSTQyjErPO9Mkp64XqIvIz6lYOhWe6wwZpB5b2S6F6ysDfXkQbkEccKuDNgQAB0_Eh_I_4E9JZU6j_NyxDg6mlT2y1nozX_3-5dGKhgdU4IleqRK8qASosSSSAvjqfeE-3vkbahAcrdM6E8oQaoz2m6hMr5TRpuBF6LRJjqpu2G-KPU7w",
												"disabled": true
											},
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{authCodeUrl}}",
											"host": [
												"{{authCodeUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "3005: O3 Retrieve a consent by its id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB"
											},
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{cs}}/v2024.31/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2024.31",
												"consents",
												"{{consent-id-from-hh}}"
											],
											"query": [
												{
													"key": "authorization",
													"value": "foo",
													"disabled": true
												},
												{
													"key": "x-cert-dn",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4003: O3: Patch the consent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											},
											{
												"key": "content-type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"psuIdentifiers\": {\r\n        \"userId\": \"{{userId}}\"\r\n    },\r\n\r\n    \"accountIds\": {{accountIds}},\r\n    \"consentBody.Data.Status\": \"AUTH\"\r\n}"
										},
										"url": {
											"raw": "{{cs}}/v2024.31/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2024.31",
												"consents",
												"{{consent-id-from-hh}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "4005: O3: Confirm with Heimdall",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authorizationCode\", responseBody);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "heimdall.suppressRefreshToken",
													"value": "false",
													"type": "text"
												},
												{
													"key": "heimdall.accessTokenValidity",
													"value": "3600",
													"type": "text",
													"disabled": true
												},
												{
													"key": "heimdall.refreshTokenValidity",
													"value": "7200",
													"type": "text",
													"disabled": true
												},
												{
													"key": "openbanking_intent_id",
													"value": "{{consent-id-from-hh}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{authEndpoint}}/{{interaction-id}}/doConfirm",
											"host": [
												"{{authEndpoint}}"
											],
											"path": [
												"{{interaction-id}}",
												"doConfirm"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments",
													"type": "text"
												},
												{
													"key": "code",
													"value": "{{authorizationCode}}",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 5: GET domestic-standing-order-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-standing-order-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-standing-order-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: POST domestic-standing-orders",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.DomesticStandingOrderId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'domestic-standing-orders');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\"))",
													"    },",
													"    \"Risk\": {}",
													"}",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"// var options = {",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}}\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillingGoodsAndServicesInAdvance\",\n        \"MerchantCategoryCode\": \"stri\",\n        \"MerchantCustomerIdentification\": \"string\",\n        \"ContractPresentIndicator\": true,\n        \"BeneficiaryPrepopulatedIndicator\": true,\n        \"PaymentPurposeCode\": \"BKDF\",\n        \"CategoryPurposeCode\": \"BONU\",\n        \"BeneficiaryAccountType\": \"Business\",\n        \"DeliveryAddress\": {\n            \"AddressType\": \"BIZZ\",\n            \"Department\": \"string\",\n            \"SubDepartment\": \"string\",\n            \"StreetName\": \"string\",\n            \"BuildingNumber\": \"string\",\n            \"BuildingName\": \"string\",\n            \"Floor\": \"string\",\n            \"UnitNumber\": \"string\",\n            \"Room\": \"string\",\n            \"PostBox\": \"string\",\n            \"TownLocationName\": \"string\",\n            \"DistrictName\": \"string\",\n            \"CareOf\": \"string\",\n            \"PostCode\": \"string\",\n            \"TownName\": \"string\",\n            \"CountrySubDivision\": \"string\",\n            \"Country\": \"FF\",\n            \"AddressLine\": [\n                \"string\"\n            ]\n        },\n        \"ExtendedPurpose\": \"string\"\n    }\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-standing-orders",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-standing-orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: GET domestic-standing-orders/{DomesticStandingOrderId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-standing-orders/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-standing-orders",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: GET  domestic-standing-orders/{DomesticStandingOrderId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-standing-orders/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-standing-orders",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "PIS Flow - Domestic Standing Orders UI",
							"item": [
								{
									"name": "Step 1: Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST domestic-standing-order-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"",
													"const data1 = {",
													"    \"Data\": {",
													"        \"Permission\": \"Create\",",
													"        \"Initiation\": {",
													"            \"Frequency\": \"EvryDay\",",
													"            \"FirstPaymentDateTime\": \"2025-07-01T13:14:25+00:00\",",
													"            \"FinalPaymentDateTime\": \"2025-07-01T15:14:25+00:00\",",
													"            \"FirstPaymentAmount\": {",
													"                \"Amount\": \"10.00\",",
													"                \"Currency\": \"GBP\"",
													"            },",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"SortCodeAccountNumber\",",
													"                \"Identification\": \"20202010981789\",",
													"                \"Name\": \"Dr Foo\"",
													"            }",
													"        }",
													"    },",
													"    \"Risk\": {}",
													"}",
													"",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"",
													"// var options = {",
													"",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.vn",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"Permission\": \"Create\",\r\n        \"ReadRefundAccount\": \"No\",\r\n        \"Initiation\": {\r\n            \"RemittanceInformation\": {\r\n                \"Structured\": [\r\n                    {\r\n                        \"ReferredDocumentInformation\": [\r\n                            {\r\n                                \"Code\": \"CINV\",\r\n                                \"Issuer\": \"string\",\r\n                                \"Number\": \"string\",\r\n                                \"RelatedDate\": \"2024-06-17T08:13:05.596Z\",\r\n                                \"LineDetails\": [\r\n                                    \"string\"\r\n                                ]\r\n                            }\r\n                        ],\r\n                        \"ReferredDocumentAmount\": 0,\r\n                        \"CreditorReferenceInformation\": {\r\n                            \"Code\": \"DISP\",\r\n                            \"Issuer\": \"string\",\r\n                            \"Reference\": \"string\"\r\n                        },\r\n                        \"Invoicer\": \"string\",\r\n                        \"Invoicee\": \"string\",\r\n                        \"TaxRemittance\": \"string\",\r\n                        \"AdditionalRemittanceInformation\": [\r\n                            \"string\"\r\n                        ]\r\n                    }\r\n                ],\r\n                \"Unstructured\": [\r\n                    \"string\"\r\n                ]\r\n            },\r\n            \"FirstPaymentAmount\": {\r\n                \"Amount\": \"463671\",\r\n                \"Currency\": \"GBP\"\r\n            },\r\n            \"RecurringPaymentAmount\": {\r\n                \"Amount\": \"13686924820.38\",\r\n                \"Currency\": \"GBP\"\r\n            },\r\n            \"FinalPaymentAmount\": {\r\n                \"Amount\": \"3178338\",\r\n                \"Currency\": \"GBP\"\r\n            },\r\n            // \"DebtorAccount\": {\r\n            //     \"SchemeName\": \"SortCodeAccountNumber\",\r\n            //     \"Identification\": \"20202010981789\",\r\n            //     \"Name\": \"string\",\r\n            //     \"SecondaryIdentification\": \"string\",\r\n            //     \"Proxy\": {\r\n            //         \"Identification\": \"string\",\r\n            //         \"Code\": \"TELE\",\r\n            //         \"Type\": \"string\"\r\n            //     }\r\n            // },\r\n            \"CreditorAccount\": {\r\n                \"SchemeName\": \"SortCodeAccountNumber\",\r\n                \"Identification\": \"20202010981789\",\r\n                \"Name\": \"string\",\r\n                \"SecondaryIdentification\": \"string\",\r\n                \"Proxy\": {\r\n                    \"Identification\": \"string\",\r\n                    \"Code\": \"TELE\",\r\n                    \"Type\": \"string\"\r\n                }\r\n            },\r\n            \"UltimateCreditor\": {\r\n                \"Name\": \"string\",\r\n                \"Identification\": \"string\",\r\n                \"LEI\": \"328600ATTX78IYJSOU80\",\r\n                \"SchemeName\": \"string\",\r\n                \"PostalAddress\": {\r\n                    \"AddressType\": \"BIZZ\",\r\n                    \"Department\": \"string\",\r\n                    \"SubDepartment\": \"string\",\r\n                    \"StreetName\": \"string\",\r\n                    \"BuildingNumber\": \"string\",\r\n                    \"BuildingName\": \"string\",\r\n                    \"Floor\": \"string\",\r\n                    \"UnitNumber\": \"string\",\r\n                    \"Room\": \"string\",\r\n                    \"PostBox\": \"string\",\r\n                    \"TownLocationName\": \"string\",\r\n                    \"DistrictName\": \"string\",\r\n                    \"CareOf\": \"string\",\r\n                    \"PostCode\": \"string\",\r\n                    \"TownName\": \"string\",\r\n                    \"CountrySubDivision\": \"string\",\r\n                    \"Country\": \"FO\",\r\n                    \"AddressLine\": [\r\n                        \"string\"\r\n                    ]\r\n                }\r\n            },\r\n            \"UltimateDebtor\": {\r\n                \"Name\": \"string\",\r\n                \"Identification\": \"string\",\r\n                \"LEI\": \"861300ONNZGJ5Y4JUU29\",\r\n                \"SchemeName\": \"string\",\r\n                \"PostalAddress\": {\r\n                    \"AddressType\": \"BIZZ\",\r\n                    \"Department\": \"string\",\r\n                    \"SubDepartment\": \"string\",\r\n                    \"StreetName\": \"string\",\r\n                    \"BuildingNumber\": \"string\",\r\n                    \"BuildingName\": \"string\",\r\n                    \"Floor\": \"string\",\r\n                    \"UnitNumber\": \"string\",\r\n                    \"Room\": \"string\",\r\n                    \"PostBox\": \"string\",\r\n                    \"TownLocationName\": \"string\",\r\n                    \"DistrictName\": \"string\",\r\n                    \"CareOf\": \"string\",\r\n                    \"PostCode\": \"string\",\r\n                    \"TownName\": \"string\",\r\n                    \"CountrySubDivision\": \"string\",\r\n                    \"Country\": \"KB\",\r\n                    \"AddressLine\": [\r\n                        \"string\"\r\n                    ]\r\n                }\r\n            },\r\n            \"RegulatoryReporting\": [\r\n                {\r\n                    \"DebitCreditReportingIndicator\": \"CRED\",\r\n                    \"Authority\": {\r\n                        \"Name\": \"string\",\r\n                        \"CountryCode\": \"AH\"\r\n                    },\r\n                    \"Details\": [\r\n                        {\r\n                            \"Type\": \"string\",\r\n                            \"Date\": \"2024-07-03T08:13:05.596Z\",\r\n                            \"Country\": \"TB\",\r\n                            \"Amount\": {\r\n                                \"Amount\": \"675302404893\",\r\n                                \"Currency\": \"GBP\"\r\n                            },\r\n                            \"Information\": [\r\n                                \"string\"\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"MandateRelatedInformation\": {\r\n                \"MandateIdentification\": \"string\",\r\n                \"Classification\": \"FIXE\",\r\n                \"CategoryPurposeCode\": \"BONU\",\r\n                \"FirstPaymentDateTime\": \"2024-07-03T08:13:05.596Z\",\r\n                \"RecurringPaymentDateTime\": \"2024-06-17T08:13:05.596Z\",\r\n                \"FinalPaymentDateTime\": \"2024-07-03T08:13:05.596Z\",\r\n                \"Frequency\": {\r\n                    \"Type\": \"ADHO\",\r\n                    \"CountPerPeriod\": 0,\r\n                    \"PointInTime\": \"st\"\r\n                },\r\n                \"Reason\": \"string\"\r\n            },\r\n            \"SupplementaryData\": {\r\n                \"additionalProp1\": {}\r\n            }\r\n        },\r\n        \"Authorisation\": {\r\n            \"AuthorisationType\": \"Any\",\r\n            \"CompletionDateTime\": \"2025-08-17T08:13:05.596Z\"\r\n        },\r\n        \"SCASupportData\": {\r\n            \"RequestedSCAExemptionType\": \"BillPayment\",\r\n            \"AppliedAuthenticationApproach\": \"CA\",\r\n            \"ReferencePaymentOrderId\": \"string\"\r\n        }\r\n    },\r\n    \"Risk\": {\r\n        \"PaymentContextCode\": \"BillingGoodsAndServicesInAdvance\",\r\n        \"MerchantCategoryCode\": \"stri\",\r\n        \"MerchantCustomerIdentification\": \"string\",\r\n        \"ContractPresentIndicator\": true,\r\n        \"BeneficiaryPrepopulatedIndicator\": true,\r\n        \"PaymentPurposeCode\": \"BKDF\",\r\n        \"CategoryPurposeCode\": \"BONU\",\r\n        \"BeneficiaryAccountType\": \"Business\",\r\n        \"DeliveryAddress\": {\r\n            \"AddressType\": \"BIZZ\",\r\n            \"Department\": \"string\",\r\n            \"SubDepartment\": \"string\",\r\n            \"StreetName\": \"string\",\r\n            \"BuildingNumber\": \"string\",\r\n            \"BuildingName\": \"string\",\r\n            \"Floor\": \"string\",\r\n            \"UnitNumber\": \"string\",\r\n            \"Room\": \"string\",\r\n            \"PostBox\": \"string\",\r\n            \"TownLocationName\": \"string\",\r\n            \"DistrictName\": \"string\",\r\n            \"CareOf\": \"string\",\r\n            \"PostCode\": \"string\",\r\n            \"TownName\": \"string\",\r\n            \"CountrySubDivision\": \"string\",\r\n            \"Country\": \"FF\",\r\n            \"AddressLine\": [\r\n                \"string\"\r\n            ]\r\n        },\r\n        \"ExtendedPurpose\": \"string\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-standing-order-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-standing-order-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments",
													"type": "text"
												},
												{
													"key": "code",
													"value": "38b0b91e-bf5b-4722-a322-6db0d9250894",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: GET domestic-standing-order-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-standing-order-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-standing-order-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 5: POST domestic-standing-orders",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.DomesticStandingOrderId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'domestic-standing-orders');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\"))",
													"    },",
													"    \"Risk\": {}",
													"}",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"// var options = {",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}}\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillingGoodsAndServicesInAdvance\",\n        \"MerchantCategoryCode\": \"stri\",\n        \"MerchantCustomerIdentification\": \"string\",\n        \"ContractPresentIndicator\": true,\n        \"BeneficiaryPrepopulatedIndicator\": true,\n        \"PaymentPurposeCode\": \"BKDF\",\n        \"CategoryPurposeCode\": \"BONU\",\n        \"BeneficiaryAccountType\": \"Business\",\n        \"DeliveryAddress\": {\n            \"AddressType\": \"BIZZ\",\n            \"Department\": \"string\",\n            \"SubDepartment\": \"string\",\n            \"StreetName\": \"string\",\n            \"BuildingNumber\": \"string\",\n            \"BuildingName\": \"string\",\n            \"Floor\": \"string\",\n            \"UnitNumber\": \"string\",\n            \"Room\": \"string\",\n            \"PostBox\": \"string\",\n            \"TownLocationName\": \"string\",\n            \"DistrictName\": \"string\",\n            \"CareOf\": \"string\",\n            \"PostCode\": \"string\",\n            \"TownName\": \"string\",\n            \"CountrySubDivision\": \"string\",\n            \"Country\": \"FF\",\n            \"AddressLine\": [\n                \"string\"\n            ]\n        },\n        \"ExtendedPurpose\": \"string\"\n    }\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-standing-orders",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-standing-orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: GET domestic-standing-orders/{DomesticStandingOrderId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-standing-orders/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-standing-orders",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: GET  domestic-standing-orders/{DomesticStandingOrderId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-standing-orders/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-standing-orders",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "PIS Flow - File Payments Headless",
							"item": [
								{
									"name": "Step 1: POST Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST file-payment-consents",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const fileContent =[",
													"      {",
													"         \"Creditor\":\"10000119820101\",",
													"         \"amount\":\"50.50\",",
													"         \"Description\":\"Salary for Dec1, 2018\"",
													"      },",
													"      {",
													"         \"Creditor\":\"10000119820101\",",
													"         \"amount\":\"50.50\",",
													"         \"Description\":\"Salary for Dec1, 2018\"",
													"      },",
													"      {",
													"         \"Creditor\":\"10000119820101\",",
													"         \"amount\":\"50.50\",",
													"         \"Description\":\"Salary for Dec1, 2018\"",
													"      }",
													"   ]",
													"   const strFileContent = JSON.stringify(fileContent);",
													"   postman.setEnvironmentVariable(\"fileContent\", strFileContent);",
													"",
													"      ",
													"const hashedFile = CryptoJS.SHA256(strFileContent);",
													"let fileHash = CryptoJS.enc.Base64.stringify(hashedFile);",
													"postman.setEnvironmentVariable(\"fileHash\", fileHash);",
													"const data1 = {",
													"    \"Data\": {",
													"        \"Initiation\": {",
													"            \"FileType\": \"x\",",
													"            \"FileHash\": fileHash,",
													"            \"FileReference\": \"GB2OK238\",",
													"            \"NumberOfTransactions\": \"3\",",
													"            \"ControlSum\": 151.50",
													"        }",
													"    }",
													"}",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"",
													"// var options = {",
													"",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments'); ",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.ev",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"Initiation\": {\r\n            \"FileType\": \"x\",\r\n            \"FileHash\": \"{{fileHash}}\",\r\n            \"FileReference\": \"GB2OK238\",\r\n            \"NumberOfTransactions\": \"3\",\r\n            \"ControlSum\": 151.50\r\n        }\r\n    }\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/file-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"file-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: POST file-payment-consents/{ConsentId}/file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{fileContent}}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/file-payment-consents/{{intent-id}}/file",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"file-payment-consents",
												"{{intent-id}}",
												"file"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												},
												{
													"key": "login_hint",
													"value": "foo",
													"disabled": true
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "3003: O3 Call headless-heimdall auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"consent-id-from-hh\", jsonData.interaction.params.claims.id_token.openbanking_intent_id.value);\r",
													"postman.setEnvironmentVariable(\"interaction-id\", jsonData.interaction.interactionId);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDgyMS44OSwiaWF0IjoxNjA5MTIwODExLjg5LCJuYmYiOjE2MDkxMjA4MTEuODksImp0aSI6IjdhNzVlYmU4LTMxZjktNDU2Yy1iNWU1LTlmOTJkMmMzOTkxOCJ9.O1rBKF87h7LqHgC5sd4pHuVPuKn2CP-feD7xZ1wCT77dfLU8HDDug3zcZdbcMOKH7cnb59MWKTgCcd3aGHfUsfVdT2cE2LrU_pPG7IW1km2Qri89M65241iUR8Ra_By3lULV4AwVywMH7dgjFCWFLWTbQW9idcImt0h9MaSTQyjErPO9Mkp64XqIvIz6lYOhWe6wwZpB5b2S6F6ysDfXkQbkEccKuDNgQAB0_Eh_I_4E9JZU6j_NyxDg6mlT2y1nozX_3-5dGKhgdU4IleqRK8qASosSSSAvjqfeE-3vkbahAcrdM6E8oQaoz2m6hMr5TRpuBF6LRJjqpu2G-KPU7w",
												"disabled": true
											},
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{authCodeUrl}}",
											"host": [
												"{{authCodeUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "3005: O3 Retrieve a consent by its id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB"
											},
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{cs}}/v2024.31/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2024.31",
												"consents",
												"{{consent-id-from-hh}}"
											],
											"query": [
												{
													"key": "authorization",
													"value": "foo",
													"disabled": true
												},
												{
													"key": "x-cert-dn",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4003: O3: Patch the consent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											},
											{
												"key": "content-type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"psuIdentifiers\": {\r\n        \"userId\": \"{{userId}}\"\r\n    },\r\n    \"accountIds\": {{accountIds}},\r\n    \"consentBody.Data.Status\": \"Authorised\"\r\n}"
										},
										"url": {
											"raw": "{{cs}}/v2024.31/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2024.31",
												"consents",
												"{{consent-id-from-hh}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "4005: O3: Confirm with Heimdall",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authorizationCode\", responseBody);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "heimdall.suppressRefreshToken",
													"value": "false",
													"type": "text"
												},
												{
													"key": "heimdall.accessTokenValidity",
													"value": "3600",
													"type": "text",
													"disabled": true
												},
												{
													"key": "heimdall.refreshTokenValidity",
													"value": "7200",
													"type": "text",
													"disabled": true
												},
												{
													"key": "openbanking_intent_id",
													"value": "{{consent-id-from-hh}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{authEndpoint}}/{{interaction-id}}/doConfirm",
											"host": [
												"{{authEndpoint}}"
											],
											"path": [
												"{{interaction-id}}",
												"doConfirm"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 5: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments ",
													"type": "text"
												},
												{
													"key": "code",
													"value": "{{authorizationCode}}",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										},
										"description": "Copy the authorization code generated into the browser into the **Body** tab in the `code` parameter"
									},
									"response": []
								},
								{
									"name": "Step 6: GET file-payment-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/file-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"file-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: GET file-payment-consents/{ConsentId}/file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/file-payment-consents/{{intent-id}}/file",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"file-payment-consents",
												"{{intent-id}}",
												"file"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: POST file-payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.FilePaymentId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'file-payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\"))",
													"    }",
													"}",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"// var options = {",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}}\n    }\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/file-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"file-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 9: GET file-payments/{FilePaymentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/file-payments/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"file-payments",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 10: GET file-payments/{FilePaymentId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/file-payments/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"file-payments",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 11: GET file-payments/{FilePaymentId}/report-file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/file-payments/{{payment-id}}/report-file",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"file-payments",
												"{{payment-id}}",
												"report-file"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "PIS Flow - File payment UI",
							"item": [
								{
									"name": "Step 1: POST Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST file-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments'); ",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const fileContent =[",
													"      {",
													"         \"Creditor\":\"10000119820101\",",
													"         \"amount\":\"50.50\",",
													"         \"Description\":\"Salary for Dec1, 2018\"",
													"      },",
													"      {",
													"         \"Creditor\":\"10000119820101\",",
													"         \"amount\":\"50.50\",",
													"         \"Description\":\"Salary for Dec1, 2018\"",
													"      },",
													"      {",
													"         \"Creditor\":\"10000119820101\",",
													"         \"amount\":\"50.50\",",
													"         \"Description\":\"Salary for Dec1, 2018\"",
													"      }",
													"   ]",
													"   const strFileContent = JSON.stringify(fileContent);",
													"   postman.setEnvironmentVariable(\"fileContent\", strFileContent);",
													"",
													"      ",
													"const hashedFile = CryptoJS.SHA256(strFileContent);",
													"let fileHash = CryptoJS.enc.Base64.stringify(hashedFile);",
													"postman.setEnvironmentVariable(\"fileHash\", fileHash);",
													"const data1 = {",
													"    \"Data\": {",
													"        \"Initiation\": {",
													"            \"FileType\": \"x\",",
													"            \"FileHash\": fileHash,",
													"            \"FileReference\": \"GB2OK238\",",
													"            \"NumberOfTransactions\": \"3\",",
													"            \"ControlSum\": 151.50",
													"        }",
													"    }",
													"}",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"",
													"// var options = {",
													"",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.ev",
												"disabled": true
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"Initiation\": {\r\n            \"FileType\": \"x\",\r\n            \"FileHash\": \"{{fileHash}}\",\r\n            \"FileReference\": \"GB2OK238\",\r\n            \"NumberOfTransactions\": \"3\",\r\n            \"ControlSum\": 151.50\r\n        }\r\n    }\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/file-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"file-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: POST file-payment-consents/{ConsentId}/file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{{fileContent}}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/file-payment-consents/{{intent-id}}/file",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"file-payment-consents",
												"{{intent-id}}",
												"file"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												},
												{
													"key": "login_hint",
													"value": "foo",
													"disabled": true
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "Step 5: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments ",
													"type": "text"
												},
												{
													"key": "code",
													"value": "6351451e-558a-4ce3-abea-8aabfb330464",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										},
										"description": "Copy the authorization code generated into the browser into the **Body** tab in the `code` parameter"
									},
									"response": []
								},
								{
									"name": "Step 6: GET file-payment-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/file-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"file-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: GET file-payment-consents/{ConsentId}/file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/file-payment-consents/{{intent-id}}/file",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"file-payment-consents",
												"{{intent-id}}",
												"file"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: POST file-payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.FilePaymentId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'file-payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\"))",
													"    }",
													"}",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"// var options = {",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}}\n    }\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/file-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"file-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 9: GET file-payments/{FilePaymentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/file-payments/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"file-payments",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 10: GET file-payments/{FilePaymentId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/file-payments/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"file-payments",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 11: GET file-payments/{FilePaymentId}/report-file",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/file-payments/{{payment-id}}/report-file",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"file-payments",
												"{{payment-id}}",
												"report-file"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "PIS Flow- International Payments Headless",
							"item": [
								{
									"name": "Step 1: POST Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step2 : POST  international-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 =",
													"{",
													"    \"Data\": {",
													"        \"Initiation\": {",
													"            \"InstructionIdentification\": pm.environment.get(\"randomString-1\"),",
													"            \"EndToEndIdentification\": pm.environment.get(\"randomString-2\"),",
													"            \"CurrencyOfTransfer\": \"GBP\",",
													"            \"InstructedAmount\": {",
													"                \"Amount\": pm.environment.get(\"randomPrice\"),",
													"                \"Currency\": \"GBP\"",
													"            },",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",",
													"                \"Identification\": \"202020\" + pm.environment.get(\"randomBankAccount\"),",
													"                \"Name\": pm.environment.get(\"randomFullName\")",
													"            },",
													"            \"ExchangeRateInformation\": {",
													"                \"RateType\": \"Agreed\",",
													"                \"UnitCurrency\": \"GBP\",",
													"                \"ContractIdentification\": \"A/2019/2001\",",
													"                \"ExchangeRate\": 0.78",
													"            }",
													"        }",
													"    },",
													"    \"Risk\": {}",
													"}",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"// var options = {",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.fcr",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Data\": {\r\n    \"ReadRefundAccount\": \"No\",\r\n    \"Initiation\": {\r\n      \"InstructionIdentification\": \"{{randomString-1}}\",\r\n      \"EndToEndIdentification\": \"{{randomString-2}}\",\r\n      \"LocalInstrument\": \"UK.OBIE.BACS\",\r\n      \"InstructionPriority\": \"Normal\",\r\n      \"ExtendedPurpose\": \"stri\",\r\n      \"ChargeBearer\": \"BorneByCreditor\",\r\n      \"CurrencyOfTransfer\": \"GBP\",\r\n      \"DestinationCountryCode\": \"OR\",\r\n      \"InstructedAmount\": {\r\n        \"Amount\": \"1282642.252\",\r\n        \"Currency\": \"GBP\"\r\n      },\r\n      \"ExchangeRateInformation\": {\r\n        \"UnitCurrency\": \"GBP\",\r\n        \"ExchangeRate\": 0,\r\n        \"RateType\": \"Actual\",\r\n        \"ContractIdentification\": \"string\"\r\n      },\r\n      \"DebtorAccount\": {\r\n        \"SchemeName\": \"UK.OBIE.IBAN\",\r\n        \"Identification\": \"GB24OZON88885642162159\",\r\n        \"Name\": \"string\",\r\n        \"SecondaryIdentification\": \"string\",\r\n        \"Proxy\": {\r\n          \"Identification\": \"string\",\r\n          \"Code\": \"TELE\",\r\n          \"Type\": \"string\"\r\n        }\r\n      },\r\n      \"Creditor\": {\r\n        \"Name\": \"string\",\r\n        \"LEI\": \"900800ARGG93VGHVDV87\",\r\n        \"PostalAddress\": {\r\n          \"AddressType\": \"BIZZ\",\r\n          \"Department\": \"string\",\r\n          \"SubDepartment\": \"string\",\r\n          \"StreetName\": \"string\",\r\n          \"BuildingNumber\": \"string\",\r\n          \"BuildingName\": \"string\",\r\n          \"Floor\": \"string\",\r\n          \"UnitNumber\": \"string\",\r\n          \"Room\": \"string\",\r\n          \"PostBox\": \"string\",\r\n          \"TownLocationName\": \"string\",\r\n          \"DistrictName\": \"string\",\r\n          \"CareOf\": \"string\",\r\n          \"PostCode\": \"string\",\r\n          \"TownName\": \"string\",\r\n          \"CountrySubDivision\": \"string\",\r\n          \"Country\": \"TB\",\r\n          \"AddressLine\": [\r\n            \"string\"\r\n          ]\r\n        }\r\n      },\r\n      \"CreditorAgent\": {\r\n        \"SchemeName\": \"BICFI\",\r\n        \"Identification\": \"GB24OZON88885642162159\",\r\n        \"Name\": \"string\",\r\n        \"LEI\": \"985900HJ06A4BMPEHO29\",\r\n        \"PostalAddress\": {\r\n          \"AddressType\": \"BIZZ\",\r\n          \"Department\": \"string\",\r\n          \"SubDepartment\": \"string\",\r\n          \"StreetName\": \"string\",\r\n          \"BuildingNumber\": \"string\",\r\n          \"BuildingName\": \"string\",\r\n          \"Floor\": \"string\",\r\n          \"UnitNumber\": \"string\",\r\n          \"Room\": \"string\",\r\n          \"PostBox\": \"string\",\r\n          \"TownLocationName\": \"string\",\r\n          \"DistrictName\": \"string\",\r\n          \"CareOf\": \"string\",\r\n          \"PostCode\": \"string\",\r\n          \"TownName\": \"string\",\r\n          \"CountrySubDivision\": \"string\",\r\n          \"Country\": \"WJ\",\r\n          \"AddressLine\": [\r\n            \"string\"\r\n          ]\r\n        }\r\n      },\r\n      \"CreditorAccount\": {\r\n        \"SchemeName\": \"IBAN\",\r\n        \"Identification\": \"GB24OZON88885642162159\",\r\n        \"Name\": \"string\",\r\n        \"SecondaryIdentification\": \"string\",\r\n        \"Proxy\": {\r\n          \"Identification\": \"string\",\r\n          \"Code\": \"TELE\",\r\n          \"Type\": \"string\"\r\n        }\r\n      },\r\n      \"UltimateCreditor\": {\r\n        \"Name\": \"string\",\r\n        \"Identification\": \"string\",\r\n        \"LEI\": \"182600LLRZTZI48BCP41\",\r\n        \"SchemeName\": \"string\",\r\n        \"PostalAddress\": {\r\n          \"AddressType\": \"BIZZ\",\r\n          \"Department\": \"string\",\r\n          \"SubDepartment\": \"string\",\r\n          \"StreetName\": \"string\",\r\n          \"BuildingNumber\": \"string\",\r\n          \"BuildingName\": \"string\",\r\n          \"Floor\": \"string\",\r\n          \"UnitNumber\": \"string\",\r\n          \"Room\": \"string\",\r\n          \"PostBox\": \"string\",\r\n          \"TownLocationName\": \"string\",\r\n          \"DistrictName\": \"string\",\r\n          \"CareOf\": \"string\",\r\n          \"PostCode\": \"string\",\r\n          \"TownName\": \"string\",\r\n          \"CountrySubDivision\": \"string\",\r\n          \"Country\": \"HR\",\r\n          \"AddressLine\": [\r\n            \"string\"\r\n          ]\r\n        }\r\n      },\r\n      \"UltimateDebtor\": {\r\n        \"Name\": \"string\",\r\n        \"Identification\": \"string\",\r\n        \"LEI\": \"549100BWERDZ9ZZ2IG81\",\r\n        \"SchemeName\": \"string\",\r\n        \"PostalAddress\": {\r\n          \"AddressType\": \"BIZZ\",\r\n          \"Department\": \"string\",\r\n          \"SubDepartment\": \"string\",\r\n          \"StreetName\": \"string\",\r\n          \"BuildingNumber\": \"string\",\r\n          \"BuildingName\": \"string\",\r\n          \"Floor\": \"string\",\r\n          \"UnitNumber\": \"string\",\r\n          \"Room\": \"string\",\r\n          \"PostBox\": \"string\",\r\n          \"TownLocationName\": \"string\",\r\n          \"DistrictName\": \"string\",\r\n          \"CareOf\": \"string\",\r\n          \"PostCode\": \"string\",\r\n          \"TownName\": \"string\",\r\n          \"CountrySubDivision\": \"string\",\r\n          \"Country\": \"CT\",\r\n          \"AddressLine\": [\r\n            \"string\"\r\n          ]\r\n        }\r\n      },\r\n      \"RegulatoryReporting\": [\r\n        {\r\n          \"DebitCreditReportingIndicator\": \"CRED\",\r\n          \"Authority\": {\r\n            \"Name\": \"string\",\r\n            \"CountryCode\": \"EN\"\r\n          },\r\n          \"Details\": [\r\n            {\r\n              \"Type\": \"string\",\r\n              \"Date\": \"2024-06-20T06:18:23.026Z\",\r\n              \"Country\": \"SG\",\r\n              \"Amount\": {\r\n                \"Amount\": \"39061.1774\",\r\n                \"Currency\": \"KOT\"\r\n              },\r\n              \"Information\": [\r\n                \"string\"\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      \"RemittanceInformation\": {\r\n        \"Structured\": [\r\n          {\r\n            \"ReferredDocumentInformation\": [\r\n              {\r\n                \"Code\": \"CINV\",\r\n                \"Issuer\": \"string\",\r\n                \"Number\": \"string\",\r\n                \"RelatedDate\": \"2024-06-20T06:18:23.026Z\",\r\n                \"LineDetails\": [\r\n                  \"string\"\r\n                ]\r\n              }\r\n            ],\r\n            \"ReferredDocumentAmount\": 0,\r\n            \"CreditorReferenceInformation\": {\r\n              \"Code\": \"DISP\",\r\n              \"Issuer\": \"string\",\r\n              \"Reference\": \"string\"\r\n            },\r\n            \"Invoicer\": \"string\",\r\n            \"Invoicee\": \"string\",\r\n            \"TaxRemittance\": \"string\",\r\n            \"AdditionalRemittanceInformation\": [\r\n              \"string\"\r\n            ]\r\n          }\r\n        ],\r\n        \"Unstructured\": [\r\n          \"string\"\r\n        ]\r\n      },\r\n      \"SupplementaryData\": {\r\n        \"additionalProp1\": {}\r\n      }\r\n    },\r\n    \"Authorisation\": {\r\n      \"AuthorisationType\": \"Any\",\r\n      \"CompletionDateTime\": \"2025-07-21T06:18:23.026Z\"\r\n    },\r\n    \"SCASupportData\": {\r\n      \"RequestedSCAExemptionType\": \"BillPayment\",\r\n      \"AppliedAuthenticationApproach\": \"CA\",\r\n      \"ReferencePaymentOrderId\": \"string\"\r\n    }\r\n  },\r\n  \"Risk\": {\r\n    \"PaymentContextCode\": \"BillingGoodsAndServicesInAdvance\",\r\n    \"MerchantCategoryCode\": \"stri\",\r\n    \"MerchantCustomerIdentification\": \"string\",\r\n    \"ContractPresentIndicator\": true,\r\n    \"BeneficiaryPrepopulatedIndicator\": true,\r\n    \"PaymentPurposeCode\": \"BKDF\",\r\n    \"CategoryPurposeCode\": \"BONU\",\r\n    \"BeneficiaryAccountType\": \"Business\",\r\n    \"DeliveryAddress\": {\r\n      \"AddressType\": \"BIZZ\",\r\n      \"Department\": \"string\",\r\n      \"SubDepartment\": \"string\",\r\n      \"StreetName\": \"string\",\r\n      \"BuildingNumber\": \"string\",\r\n      \"BuildingName\": \"string\",\r\n      \"Floor\": \"string\",\r\n      \"UnitNumber\": \"string\",\r\n      \"Room\": \"string\",\r\n      \"PostBox\": \"string\",\r\n      \"TownLocationName\": \"string\",\r\n      \"DistrictName\": \"string\",\r\n      \"CareOf\": \"string\",\r\n      \"PostCode\": \"string\",\r\n      \"TownName\": \"string\",\r\n      \"CountrySubDivision\": \"string\",\r\n      \"Country\": \"PE\",\r\n      \"AddressLine\": [\r\n        \"string\"\r\n      ]\r\n    },\r\n    \"ExtendedPurpose\": \"string\"\r\n  }\r\n}\r\n"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												},
												{
													"key": "login_hint",
													"value": "foo",
													"disabled": true
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "3003: O3 Call headless-heimdall auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"consent-id-from-hh\", jsonData.interaction.params.claims.id_token.openbanking_intent_id.value);\r",
													"postman.setEnvironmentVariable(\"interaction-id\", jsonData.interaction.interactionId);\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDgyMS44OSwiaWF0IjoxNjA5MTIwODExLjg5LCJuYmYiOjE2MDkxMjA4MTEuODksImp0aSI6IjdhNzVlYmU4LTMxZjktNDU2Yy1iNWU1LTlmOTJkMmMzOTkxOCJ9.O1rBKF87h7LqHgC5sd4pHuVPuKn2CP-feD7xZ1wCT77dfLU8HDDug3zcZdbcMOKH7cnb59MWKTgCcd3aGHfUsfVdT2cE2LrU_pPG7IW1km2Qri89M65241iUR8Ra_By3lULV4AwVywMH7dgjFCWFLWTbQW9idcImt0h9MaSTQyjErPO9Mkp64XqIvIz6lYOhWe6wwZpB5b2S6F6ysDfXkQbkEccKuDNgQAB0_Eh_I_4E9JZU6j_NyxDg6mlT2y1nozX_3-5dGKhgdU4IleqRK8qASosSSSAvjqfeE-3vkbahAcrdM6E8oQaoz2m6hMr5TRpuBF6LRJjqpu2G-KPU7w",
												"disabled": true
											},
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{authCodeUrl}}",
											"host": [
												"{{authCodeUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "3005: O3 Retrieve a consent by its id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB"
											},
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{cs}}/v2024.31/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2024.31",
												"consents",
												"{{consent-id-from-hh}}"
											],
											"query": [
												{
													"key": "authorization",
													"value": "foo",
													"disabled": true
												},
												{
													"key": "x-cert-dn",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4003: O3: Patch the consent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											},
											{
												"key": "content-type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"psuIdentifiers\": {\r\n        \"userId\": \"{{userId}}\"\r\n    },\r\n\r\n    \"accountIds\": {{accountIds}},\r\n    \"consentBody.Data.Status\": \"AUTH\"\r\n}"
										},
										"url": {
											"raw": "{{cs}}/v2024.31/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2024.31",
												"consents",
												"{{consent-id-from-hh}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "4005: O3: Confirm with Heimdall",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authorizationCode\", responseBody);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "heimdall.suppressRefreshToken",
													"value": "false",
													"type": "text"
												},
												{
													"key": "heimdall.accessTokenValidity",
													"value": "3600",
													"type": "text",
													"disabled": true
												},
												{
													"key": "heimdall.refreshTokenValidity",
													"value": "7200",
													"type": "text",
													"disabled": true
												},
												{
													"key": "openbanking_intent_id",
													"value": "{{consent-id-from-hh}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{authEndpoint}}/{{interaction-id}}/doConfirm",
											"host": [
												"{{authEndpoint}}"
											],
											"path": [
												"{{interaction-id}}",
												"doConfirm"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments ",
													"type": "text"
												},
												{
													"key": "code",
													"value": "{{authorizationCode}}",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										},
										"description": "Copy the authorization code generated into the browser into the **Body** tab in the `code` parameter"
									},
									"response": []
								},
								{
									"name": "Step 5: GET international-payment-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: GET international-payments/{ConsentId}/funds-confirmation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"intent-id\"),",
													"        \"Reference\": \"myReference\",",
													"        \"InstructedAmount\": {",
													"            \"Amount\": \"10.00\",",
													"            \"Currency\": \"GBP\"",
													"        }",
													"    }",
													"}",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"var options = {",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-payment-consents/{{intent-id}}/funds-confirmation",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-payment-consents",
												"{{intent-id}}",
												"funds-confirmation"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: POST international-payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.InternationalPaymentId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'international-payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//  set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\"))",
													"    },",
													"    \"Risk\": {}",
													"}",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"// var options = {",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}}\n    },\n  \"Risk\": {\n    \"PaymentContextCode\": \"BillingGoodsAndServicesInAdvance\",\n    \"MerchantCategoryCode\": \"stri\",\n    \"MerchantCustomerIdentification\": \"string\",\n    \"ContractPresentIndicator\": true,\n    \"BeneficiaryPrepopulatedIndicator\": true,\n    \"PaymentPurposeCode\": \"BKDF\",\n    \"CategoryPurposeCode\": \"BONU\",\n    \"BeneficiaryAccountType\": \"Business\",\n    \"DeliveryAddress\": {\n      \"AddressType\": \"BIZZ\",\n      \"Department\": \"string\",\n      \"SubDepartment\": \"string\",\n      \"StreetName\": \"string\",\n      \"BuildingNumber\": \"string\",\n      \"BuildingName\": \"string\",\n      \"Floor\": \"string\",\n      \"UnitNumber\": \"string\",\n      \"Room\": \"string\",\n      \"PostBox\": \"string\",\n      \"TownLocationName\": \"string\",\n      \"DistrictName\": \"string\",\n      \"CareOf\": \"string\",\n      \"PostCode\": \"string\",\n      \"TownName\": \"string\",\n      \"CountrySubDivision\": \"string\",\n      \"Country\": \"PE\",\n      \"AddressLine\": [\n        \"string\"\n      ]\n    },\n    \"ExtendedPurpose\": \"string\"\n  }\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: GET international-payments/{InternationalPaymentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-payments/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-payments",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: GET international-payments/{InternationalPaymentId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-payments/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-payments",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "PIS Flow- International Payments UI",
							"item": [
								{
									"name": "Step 1: POST Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST international-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 =",
													"{",
													"    \"Data\": {",
													"        \"Initiation\": {",
													"            \"InstructionIdentification\": pm.environment.get(\"randomString-1\"),",
													"            \"EndToEndIdentification\": pm.environment.get(\"randomString-2\"),",
													"            \"CurrencyOfTransfer\": \"GBP\",",
													"            \"InstructedAmount\": {",
													"                \"Amount\": pm.environment.get(\"randomPrice\"),",
													"                \"Currency\": \"GBP\"",
													"            },",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",",
													"                \"Identification\": \"202020\" + pm.environment.get(\"randomBankAccount\"),",
													"                \"Name\": pm.environment.get(\"randomFullName\")",
													"            },",
													"            \"ExchangeRateInformation\": {",
													"                \"RateType\": \"Agreed\",",
													"                \"UnitCurrency\": \"GBP\",",
													"                \"ContractIdentification\": \"A/2019/2001\",",
													"                \"ExchangeRate\": 0.78",
													"            }",
													"        }",
													"    },",
													"    \"Risk\": {}",
													"}",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"// var options = {",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.fcrj"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Data\": {\r\n    \"ReadRefundAccount\": \"No\",\r\n    \"Initiation\": {\r\n      \"InstructionIdentification\": \"{{randomString-1}}\",\r\n      \"EndToEndIdentification\": \"{{randomString-2}}\",\r\n      \"LocalInstrument\": \"UK.OBIE.BACS\",\r\n      \"InstructionPriority\": \"Normal\",\r\n      \"ExtendedPurpose\": \"stri\",\r\n      \"ChargeBearer\": \"BorneByCreditor\",\r\n      \"CurrencyOfTransfer\": \"GBP\",\r\n      \"DestinationCountryCode\": \"OR\",\r\n      \"InstructedAmount\": {\r\n        \"Amount\": \"1282642.252\",\r\n        \"Currency\": \"GBP\"\r\n      },\r\n      \"ExchangeRateInformation\": {\r\n        \"UnitCurrency\": \"GBP\",\r\n        \"ExchangeRate\": 0,\r\n        \"RateType\": \"Actual\",\r\n        \"ContractIdentification\": \"string\"\r\n      },\r\n    //   \"DebtorAccount\": {\r\n    //     \"SchemeName\": \"UK.OBIE.IBAN\",\r\n    //     \"Identification\": \"GB24OZON88885642162159\",\r\n    //     \"Name\": \"string\",\r\n    //     \"SecondaryIdentification\": \"string\",\r\n    //     \"Proxy\": {\r\n    //       \"Identification\": \"string\",\r\n    //       \"Code\": \"TELE\",\r\n    //       \"Type\": \"string\"\r\n    //     }\r\n    //   },\r\n      \"Creditor\": {\r\n        \"Name\": \"string\",\r\n        \"LEI\": \"900800ARGG93VGHVDV87\",\r\n        \"PostalAddress\": {\r\n          \"AddressType\": \"BIZZ\",\r\n          \"Department\": \"string\",\r\n          \"SubDepartment\": \"string\",\r\n          \"StreetName\": \"string\",\r\n          \"BuildingNumber\": \"string\",\r\n          \"BuildingName\": \"string\",\r\n          \"Floor\": \"string\",\r\n          \"UnitNumber\": \"string\",\r\n          \"Room\": \"string\",\r\n          \"PostBox\": \"string\",\r\n          \"TownLocationName\": \"string\",\r\n          \"DistrictName\": \"string\",\r\n          \"CareOf\": \"string\",\r\n          \"PostCode\": \"string\",\r\n          \"TownName\": \"string\",\r\n          \"CountrySubDivision\": \"string\",\r\n          \"Country\": \"TB\",\r\n          \"AddressLine\": [\r\n            \"string\"\r\n          ]\r\n        }\r\n      },\r\n      \"CreditorAgent\": {\r\n        \"SchemeName\": \"BICFI\",\r\n        \"Identification\": \"GB24OZON88885642162159\",\r\n        \"Name\": \"string\",\r\n        \"LEI\": \"985900HJ06A4BMPEHO29\",\r\n        \"PostalAddress\": {\r\n          \"AddressType\": \"BIZZ\",\r\n          \"Department\": \"string\",\r\n          \"SubDepartment\": \"string\",\r\n          \"StreetName\": \"string\",\r\n          \"BuildingNumber\": \"string\",\r\n          \"BuildingName\": \"string\",\r\n          \"Floor\": \"string\",\r\n          \"UnitNumber\": \"string\",\r\n          \"Room\": \"string\",\r\n          \"PostBox\": \"string\",\r\n          \"TownLocationName\": \"string\",\r\n          \"DistrictName\": \"string\",\r\n          \"CareOf\": \"string\",\r\n          \"PostCode\": \"string\",\r\n          \"TownName\": \"string\",\r\n          \"CountrySubDivision\": \"string\",\r\n          \"Country\": \"WJ\",\r\n          \"AddressLine\": [\r\n            \"string\"\r\n          ]\r\n        }\r\n      },\r\n      \"CreditorAccount\": {\r\n        \"SchemeName\": \"IBAN\",\r\n        \"Identification\": \"GB24OZON88885642162159\",\r\n        \"Name\": \"string\",\r\n        \"SecondaryIdentification\": \"string\",\r\n        \"Proxy\": {\r\n          \"Identification\": \"string\",\r\n          \"Code\": \"TELE\",\r\n          \"Type\": \"string\"\r\n        }\r\n      },\r\n      \"UltimateCreditor\": {\r\n        \"Name\": \"string\",\r\n        \"Identification\": \"string\",\r\n        \"LEI\": \"182600LLRZTZI48BCP41\",\r\n        \"SchemeName\": \"string\",\r\n        \"PostalAddress\": {\r\n          \"AddressType\": \"BIZZ\",\r\n          \"Department\": \"string\",\r\n          \"SubDepartment\": \"string\",\r\n          \"StreetName\": \"string\",\r\n          \"BuildingNumber\": \"string\",\r\n          \"BuildingName\": \"string\",\r\n          \"Floor\": \"string\",\r\n          \"UnitNumber\": \"string\",\r\n          \"Room\": \"string\",\r\n          \"PostBox\": \"string\",\r\n          \"TownLocationName\": \"string\",\r\n          \"DistrictName\": \"string\",\r\n          \"CareOf\": \"string\",\r\n          \"PostCode\": \"string\",\r\n          \"TownName\": \"string\",\r\n          \"CountrySubDivision\": \"string\",\r\n          \"Country\": \"HR\",\r\n          \"AddressLine\": [\r\n            \"string\"\r\n          ]\r\n        }\r\n      },\r\n      \"UltimateDebtor\": {\r\n        \"Name\": \"string\",\r\n        \"Identification\": \"string\",\r\n        \"LEI\": \"549100BWERDZ9ZZ2IG81\",\r\n        \"SchemeName\": \"string\",\r\n        \"PostalAddress\": {\r\n          \"AddressType\": \"BIZZ\",\r\n          \"Department\": \"string\",\r\n          \"SubDepartment\": \"string\",\r\n          \"StreetName\": \"string\",\r\n          \"BuildingNumber\": \"string\",\r\n          \"BuildingName\": \"string\",\r\n          \"Floor\": \"string\",\r\n          \"UnitNumber\": \"string\",\r\n          \"Room\": \"string\",\r\n          \"PostBox\": \"string\",\r\n          \"TownLocationName\": \"string\",\r\n          \"DistrictName\": \"string\",\r\n          \"CareOf\": \"string\",\r\n          \"PostCode\": \"string\",\r\n          \"TownName\": \"string\",\r\n          \"CountrySubDivision\": \"string\",\r\n          \"Country\": \"CT\",\r\n          \"AddressLine\": [\r\n            \"string\"\r\n          ]\r\n        }\r\n      },\r\n      \"RegulatoryReporting\": [\r\n        {\r\n          \"DebitCreditReportingIndicator\": \"CRED\",\r\n          \"Authority\": {\r\n            \"Name\": \"string\",\r\n            \"CountryCode\": \"EN\"\r\n          },\r\n          \"Details\": [\r\n            {\r\n              \"Type\": \"string\",\r\n              \"Date\": \"2024-06-20T06:18:23.026Z\",\r\n              \"Country\": \"SG\",\r\n              \"Amount\": {\r\n                \"Amount\": \"39061.1774\",\r\n                \"Currency\": \"KOT\"\r\n              },\r\n              \"Information\": [\r\n                \"string\"\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      \"RemittanceInformation\": {\r\n        \"Structured\": [\r\n          {\r\n            \"ReferredDocumentInformation\": [\r\n              {\r\n                \"Code\": \"CINV\",\r\n                \"Issuer\": \"string\",\r\n                \"Number\": \"string\",\r\n                \"RelatedDate\": \"2024-06-20T06:18:23.026Z\",\r\n                \"LineDetails\": [\r\n                  \"string\"\r\n                ]\r\n              }\r\n            ],\r\n            \"ReferredDocumentAmount\": 0,\r\n            \"CreditorReferenceInformation\": {\r\n              \"Code\": \"DISP\",\r\n              \"Issuer\": \"string\",\r\n              \"Reference\": \"string\"\r\n            },\r\n            \"Invoicer\": \"string\",\r\n            \"Invoicee\": \"string\",\r\n            \"TaxRemittance\": \"string\",\r\n            \"AdditionalRemittanceInformation\": [\r\n              \"string\"\r\n            ]\r\n          }\r\n        ],\r\n        \"Unstructured\": [\r\n          \"string\"\r\n        ]\r\n      },\r\n      \"SupplementaryData\": {\r\n        \"additionalProp1\": {}\r\n      }\r\n    },\r\n    \"Authorisation\": {\r\n      \"AuthorisationType\": \"Any\",\r\n      \"CompletionDateTime\": \"2025-07-21T06:18:23.026Z\"\r\n    },\r\n    \"SCASupportData\": {\r\n      \"RequestedSCAExemptionType\": \"BillPayment\",\r\n      \"AppliedAuthenticationApproach\": \"CA\",\r\n      \"ReferencePaymentOrderId\": \"string\"\r\n    }\r\n  },\r\n  \"Risk\": {\r\n    \"PaymentContextCode\": \"BillingGoodsAndServicesInAdvance\",\r\n    \"MerchantCategoryCode\": \"stri\",\r\n    \"MerchantCustomerIdentification\": \"string\",\r\n    \"ContractPresentIndicator\": true,\r\n    \"BeneficiaryPrepopulatedIndicator\": true,\r\n    \"PaymentPurposeCode\": \"BKDF\",\r\n    \"CategoryPurposeCode\": \"BONU\",\r\n    \"BeneficiaryAccountType\": \"Business\",\r\n    \"DeliveryAddress\": {\r\n      \"AddressType\": \"BIZZ\",\r\n      \"Department\": \"string\",\r\n      \"SubDepartment\": \"string\",\r\n      \"StreetName\": \"string\",\r\n      \"BuildingNumber\": \"string\",\r\n      \"BuildingName\": \"string\",\r\n      \"Floor\": \"string\",\r\n      \"UnitNumber\": \"string\",\r\n      \"Room\": \"string\",\r\n      \"PostBox\": \"string\",\r\n      \"TownLocationName\": \"string\",\r\n      \"DistrictName\": \"string\",\r\n      \"CareOf\": \"string\",\r\n      \"PostCode\": \"string\",\r\n      \"TownName\": \"string\",\r\n      \"CountrySubDivision\": \"string\",\r\n      \"Country\": \"PE\",\r\n      \"AddressLine\": [\r\n        \"string\"\r\n      ]\r\n    },\r\n    \"ExtendedPurpose\": \"string\"\r\n  }\r\n}\r\n"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												},
												{
													"key": "login_hint",
													"value": "foo",
													"disabled": true
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments ",
													"type": "text"
												},
												{
													"key": "code",
													"value": "a3befd72-74a4-48f3-be8b-c1d6c35892f9",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										},
										"description": "Copy the authorization code generated into the browser into the **Body** tab in the `code` parameter"
									},
									"response": []
								},
								{
									"name": "Step 5: GET international-payment-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: POST international-payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.InternationalPaymentId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'international-payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//  set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\"))",
													"    },",
													"    \"Risk\": {}",
													"}",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"// var options = {",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}}\n    },\n  \"Risk\": {\n    \"PaymentContextCode\": \"BillingGoodsAndServicesInAdvance\",\n    \"MerchantCategoryCode\": \"stri\",\n    \"MerchantCustomerIdentification\": \"string\",\n    \"ContractPresentIndicator\": true,\n    \"BeneficiaryPrepopulatedIndicator\": true,\n    \"PaymentPurposeCode\": \"BKDF\",\n    \"CategoryPurposeCode\": \"BONU\",\n    \"BeneficiaryAccountType\": \"Business\",\n    \"DeliveryAddress\": {\n      \"AddressType\": \"BIZZ\",\n      \"Department\": \"string\",\n      \"SubDepartment\": \"string\",\n      \"StreetName\": \"string\",\n      \"BuildingNumber\": \"string\",\n      \"BuildingName\": \"string\",\n      \"Floor\": \"string\",\n      \"UnitNumber\": \"string\",\n      \"Room\": \"string\",\n      \"PostBox\": \"string\",\n      \"TownLocationName\": \"string\",\n      \"DistrictName\": \"string\",\n      \"CareOf\": \"string\",\n      \"PostCode\": \"string\",\n      \"TownName\": \"string\",\n      \"CountrySubDivision\": \"string\",\n      \"Country\": \"PE\",\n      \"AddressLine\": [\n        \"string\"\n      ]\n    },\n    \"ExtendedPurpose\": \"string\"\n  }\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: GET international-payments/{InternationalPaymentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-payments/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-payments",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: GET international-payments/{InternationalPaymentId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-payments/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-payments",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "PIS Flow - International Scheduled Payments Headless",
							"item": [
								{
									"name": "Step 1:  Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST international-scheduled-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"",
													"const data1 = {",
													"    \"Data\": {",
													"        \"Permission\": \"Create\",",
													"        \"Initiation\": {",
													"",
													"            \"InstructionIdentification\": pm.environment.get(\"randomString-1\"),",
													"            \"RequestedExecutionDateTime\": pm.environment.get(\"randomDateFuture\"),",
													"            \"CurrencyOfTransfer\": \"GBP\",",
													"            \"EndToEndIdentification\": \"FRESCO.21302.GFX.20\",",
													"            \"InstructedAmount\": {",
													"                \"Amount\": \"15.00\",",
													"                \"Currency\": \"GBP\"",
													"            },",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",",
													"                \"Identification\": \"08080021325698\",",
													"                \"Name\": \"Tom Hanks\"",
													"            },",
													"            \"RemittanceInformation\": {",
													"                \"Unstructured\": \"NAR. TEST\",",
													"                \"Reference\": \"TEST FV DNS\"",
													"            }",
													"",
													"        }",
													"    },",
													"    \"Risk\": {",
													"    }",
													"}",
													"",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"",
													"// var options = {",
													"",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.gjb",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"Permission\": \"Create\",\r\n        \"ReadRefundAccount\": \"No\",\r\n        \"Initiation\": {\r\n            \"InstructionIdentification\": \"{{randomString-1}}\",\r\n            \"EndToEndIdentification\": \"{{randomString-2}}\",\r\n            \"LocalInstrument\": \"UK.OBIE.BACS\",\r\n            \"InstructionPriority\": \"Normal\",\r\n            \"Purpose\": \"stri\",\r\n            \"ChargeBearer\": \"BorneByCreditor\",\r\n            \"RequestedExecutionDateTime\": \"2025-07-03T09:33:54.990Z\",\r\n            \"CurrencyOfTransfer\": \"GBP\",\r\n            \"DestinationCountryCode\": \"WU\",\r\n            \"InstructedAmount\": {\r\n                \"Amount\": \"7143.022\",\r\n                \"Currency\": \"GBP\"\r\n            },\r\n            \"ExchangeRateInformation\": {\r\n                \"UnitCurrency\": \"GBP\",\r\n                \"ExchangeRate\": 0,\r\n                \"RateType\": \"Actual\",\r\n                \"ContractIdentification\": \"string\"\r\n            },\r\n            \"DebtorAccount\": {\r\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\r\n                \"Identification\": \"08080021325698\",\r\n                \"Name\": \"string\",\r\n                \"SecondaryIdentification\": \"string\",\r\n                \"Proxy\": {\r\n                    \"Identification\": \"string\",\r\n                    \"Code\": \"TELE\",\r\n                    \"Type\": \"string\"\r\n                }\r\n            },\r\n            \"Creditor\": {\r\n                \"Name\": \"string\",\r\n                \"LEI\": \"1216009RE5W9TXA2BD17\",\r\n                \"PostalAddress\": {\r\n                    \"AddressType\": \"BIZZ\",\r\n                    \"Department\": \"string\",\r\n                    \"SubDepartment\": \"string\",\r\n                    \"StreetName\": \"string\",\r\n                    \"BuildingNumber\": \"string\",\r\n                    \"BuildingName\": \"string\",\r\n                    \"Floor\": \"string\",\r\n                    \"UnitNumber\": \"string\",\r\n                    \"Room\": \"string\",\r\n                    \"PostBox\": \"string\",\r\n                    \"TownLocationName\": \"string\",\r\n                    \"DistrictName\": \"string\",\r\n                    \"CareOf\": \"string\",\r\n                    \"PostCode\": \"string\",\r\n                    \"TownName\": \"string\",\r\n                    \"CountrySubDivision\": \"string\",\r\n                    \"Country\": \"DB\",\r\n                    \"AddressLine\": [\r\n                        \"string\"\r\n                    ]\r\n                }\r\n            },\r\n            \"CreditorAgent\": {\r\n                \"SchemeName\": \"BICFI\",\r\n                \"Identification\": \"08080021325698\",\r\n                \"LEI\": \"028700UCLPFYN6JMBI55\",\r\n                \"Name\": \"string\",\r\n                \"PostalAddress\": {\r\n                    \"AddressType\": \"BIZZ\",\r\n                    \"Department\": \"string\",\r\n                    \"SubDepartment\": \"string\",\r\n                    \"StreetName\": \"string\",\r\n                    \"BuildingNumber\": \"string\",\r\n                    \"BuildingName\": \"string\",\r\n                    \"Floor\": \"string\",\r\n                    \"UnitNumber\": \"string\",\r\n                    \"Room\": \"string\",\r\n                    \"PostBox\": \"string\",\r\n                    \"TownLocationName\": \"string\",\r\n                    \"DistrictName\": \"string\",\r\n                    \"CareOf\": \"string\",\r\n                    \"PostCode\": \"string\",\r\n                    \"TownName\": \"string\",\r\n                    \"CountrySubDivision\": \"string\",\r\n                    \"Country\": \"UI\",\r\n                    \"AddressLine\": [\r\n                        \"string\"\r\n                    ]\r\n                }\r\n            },\r\n            \"CreditorAccount\": {\r\n                \"SchemeName\": \"UK.OBIE.IBAN\",\r\n                \"Identification\": \"GB24OZON88885642162159\",\r\n                \"Name\": \"string\",\r\n                \"SecondaryIdentification\": \"string\",\r\n                \"Proxy\": {\r\n                    \"Identification\": \"string\",\r\n                    \"Code\": \"TELE\",\r\n                    \"Type\": \"string\"\r\n                }\r\n            },\r\n            \"UltimateCreditor\": {\r\n                \"Name\": \"string\",\r\n                \"Identification\": \"string\",\r\n                \"LEI\": \"318100EOSBPDTG22GH03\",\r\n                \"SchemeName\": \"string\",\r\n                \"PostalAddress\": {\r\n                    \"AddressType\": \"BIZZ\",\r\n                    \"Department\": \"string\",\r\n                    \"SubDepartment\": \"string\",\r\n                    \"StreetName\": \"string\",\r\n                    \"BuildingNumber\": \"string\",\r\n                    \"BuildingName\": \"string\",\r\n                    \"Floor\": \"string\",\r\n                    \"UnitNumber\": \"string\",\r\n                    \"Room\": \"string\",\r\n                    \"PostBox\": \"string\",\r\n                    \"TownLocationName\": \"string\",\r\n                    \"DistrictName\": \"string\",\r\n                    \"CareOf\": \"string\",\r\n                    \"PostCode\": \"string\",\r\n                    \"TownName\": \"string\",\r\n                    \"CountrySubDivision\": \"string\",\r\n                    \"Country\": \"QT\",\r\n                    \"AddressLine\": [\r\n                        \"string\"\r\n                    ]\r\n                }\r\n            },\r\n            \"UltimateDebtor\": {\r\n                \"Name\": \"string\",\r\n                \"Identification\": \"string\",\r\n                \"LEI\": \"044700G9U8VBBGBOT643\",\r\n                \"SchemeName\": \"string\",\r\n                \"PostalAddress\": {\r\n                    \"AddressType\": \"BIZZ\",\r\n                    \"Department\": \"string\",\r\n                    \"SubDepartment\": \"string\",\r\n                    \"StreetName\": \"string\",\r\n                    \"BuildingNumber\": \"string\",\r\n                    \"BuildingName\": \"string\",\r\n                    \"Floor\": \"string\",\r\n                    \"UnitNumber\": \"string\",\r\n                    \"Room\": \"string\",\r\n                    \"PostBox\": \"string\",\r\n                    \"TownLocationName\": \"string\",\r\n                    \"DistrictName\": \"string\",\r\n                    \"CareOf\": \"string\",\r\n                    \"PostCode\": \"string\",\r\n                    \"TownName\": \"string\",\r\n                    \"CountrySubDivision\": \"string\",\r\n                    \"Country\": \"ME\",\r\n                    \"AddressLine\": [\r\n                        \"string\"\r\n                    ]\r\n                }\r\n            },\r\n            \"RegulatoryReporting\": [\r\n                {\r\n                    \"DebitCreditReportingIndicator\": \"CRED\",\r\n                    \"Authority\": {\r\n                        \"Name\": \"string\",\r\n                        \"CountryCode\": \"MT\"\r\n                    },\r\n                    \"Details\": [\r\n                        {\r\n                            \"Type\": \"string\",\r\n                            \"Date\": \"2024-07-17T09:33:54.991Z\",\r\n                            \"Country\": \"JK\",\r\n                            \"Amount\": {\r\n                                \"Amount\": \"6631849.565\",\r\n                                \"Currency\": \"GBP\"\r\n                            },\r\n                            \"Information\": [\r\n                                \"string\"\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"RemittanceInformation\": {\r\n                \"Structured\": [\r\n                    {\r\n                        \"ReferredDocumentInformation\": [\r\n                            {\r\n                                \"Code\": \"CINV\",\r\n                                \"Issuer\": \"string\",\r\n                                \"Number\": \"string\",\r\n                                \"RelatedDate\": \"2024-06-17T09:33:54.992Z\",\r\n                                \"LineDetails\": [\r\n                                    \"string\"\r\n                                ]\r\n                            }\r\n                        ],\r\n                        \"ReferredDocumentAmount\": 0,\r\n                        \"CreditorReferenceInformation\": {\r\n                            \"Code\": \"DISP\",\r\n                            \"Issuer\": \"string\",\r\n                            \"Reference\": \"string\"\r\n                        },\r\n                        \"Invoicer\": \"string\",\r\n                        \"Invoicee\": \"string\",\r\n                        \"TaxRemittance\": \"string\",\r\n                        \"AdditionalRemittanceInformation\": [\r\n                            \"string\"\r\n                        ]\r\n                    }\r\n                ],\r\n                \"Unstructured\": [\r\n                    \"string\"\r\n                ]\r\n            },\r\n            \"SupplementaryData\": {\r\n                \"additionalProp1\": {}\r\n            }\r\n        },\r\n        \"Authorisation\": {\r\n            \"AuthorisationType\": \"Any\",\r\n            \"CompletionDateTime\": \"2025-09-17T09:33:54.992Z\"\r\n        },\r\n        \"SCASupportData\": {\r\n            \"RequestedSCAExemptionType\": \"BillPayment\",\r\n            \"AppliedAuthenticationApproach\": \"CA\",\r\n            \"ReferencePaymentOrderId\": \"string\"\r\n        }\r\n    },\r\n  \"Risk\": {\r\n    \"PaymentContextCode\": \"BillingGoodsAndServicesInAdvance\",\r\n    \"MerchantCategoryCode\": \"stri\",\r\n    \"MerchantCustomerIdentification\": \"string\",\r\n    \"ContractPresentIndicator\": true,\r\n    \"BeneficiaryPrepopulatedIndicator\": true,\r\n    \"PaymentPurposeCode\": \"BKDF\",\r\n    \"CategoryPurposeCode\": \"BONU\",\r\n    \"BeneficiaryAccountType\": \"Business\",\r\n    \"DeliveryAddress\": {\r\n      \"AddressType\": \"BIZZ\",\r\n      \"Department\": \"string\",\r\n      \"SubDepartment\": \"string\",\r\n      \"StreetName\": \"string\",\r\n      \"BuildingNumber\": \"string\",\r\n      \"BuildingName\": \"string\",\r\n      \"Floor\": \"string\",\r\n      \"UnitNumber\": \"string\",\r\n      \"Room\": \"string\",\r\n      \"PostBox\": \"string\",\r\n      \"TownLocationName\": \"string\",\r\n      \"DistrictName\": \"string\",\r\n      \"CareOf\": \"string\",\r\n      \"PostCode\": \"string\",\r\n      \"TownName\": \"string\",\r\n      \"CountrySubDivision\": \"string\",\r\n      \"Country\": \"SY\",\r\n      \"AddressLine\": [\r\n        \"string\"\r\n      ]\r\n    },\r\n    \"ExtendedPurpose\": \"string\"\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-scheduled-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-scheduled-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												},
												{
													"key": "login_hint",
													"value": "foo",
													"disabled": true
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "3003: O3 Call headless-heimdall auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"consent-id-from-hh\", jsonData.interaction.params.claims.id_token.openbanking_intent_id.value);\r",
													"postman.setEnvironmentVariable(\"interaction-id\", jsonData.interaction.interactionId);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDgyMS44OSwiaWF0IjoxNjA5MTIwODExLjg5LCJuYmYiOjE2MDkxMjA4MTEuODksImp0aSI6IjdhNzVlYmU4LTMxZjktNDU2Yy1iNWU1LTlmOTJkMmMzOTkxOCJ9.O1rBKF87h7LqHgC5sd4pHuVPuKn2CP-feD7xZ1wCT77dfLU8HDDug3zcZdbcMOKH7cnb59MWKTgCcd3aGHfUsfVdT2cE2LrU_pPG7IW1km2Qri89M65241iUR8Ra_By3lULV4AwVywMH7dgjFCWFLWTbQW9idcImt0h9MaSTQyjErPO9Mkp64XqIvIz6lYOhWe6wwZpB5b2S6F6ysDfXkQbkEccKuDNgQAB0_Eh_I_4E9JZU6j_NyxDg6mlT2y1nozX_3-5dGKhgdU4IleqRK8qASosSSSAvjqfeE-3vkbahAcrdM6E8oQaoz2m6hMr5TRpuBF6LRJjqpu2G-KPU7w",
												"disabled": true
											},
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{authCodeUrl}}",
											"host": [
												"{{authCodeUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "3005: O3 Retrieve a consent by its id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB"
											},
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{cs}}/v2024.31/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2024.31",
												"consents",
												"{{consent-id-from-hh}}"
											],
											"query": [
												{
													"key": "authorization",
													"value": "foo",
													"disabled": true
												},
												{
													"key": "x-cert-dn",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4003: O3: Patch the consent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											},
											{
												"key": "content-type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"psuIdentifiers\": {\r\n        \"userId\": \"{{userId}}\"\r\n    },\r\n\r\n    \"accountIds\": {{accountIds}},\r\n    \"consentBody.Data.Status\": \"AUTH\"\r\n}"
										},
										"url": {
											"raw": "{{cs}}/v2024.31/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2024.31",
												"consents",
												"{{consent-id-from-hh}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "4005: O3: Confirm with Heimdall",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authorizationCode\", responseBody);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "heimdall.suppressRefreshToken",
													"value": "false",
													"type": "text"
												},
												{
													"key": "heimdall.accessTokenValidity",
													"value": "3600",
													"type": "text",
													"disabled": true
												},
												{
													"key": "heimdall.refreshTokenValidity",
													"value": "7200",
													"type": "text",
													"disabled": true
												},
												{
													"key": "openbanking_intent_id",
													"value": "{{consent-id-from-hh}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{authEndpoint}}/{{interaction-id}}/doConfirm",
											"host": [
												"{{authEndpoint}}"
											],
											"path": [
												"{{interaction-id}}",
												"doConfirm"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments ",
													"type": "text"
												},
												{
													"key": "code",
													"value": "{{authorizationCode}}",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										},
										"description": "Copy the authorization code generated into the browser into the **Body** tab in the `code` parameter"
									},
									"response": []
								},
								{
									"name": "Step 5: GET international-scheduled-payment-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-scheduled-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-scheduled-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: GET international-scheduled-payment-consents/{ConsentId}/funds-confirmation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"intent-id\"),",
													"        \"Reference\": \"myReference\",",
													"        \"InstructedAmount\": {",
													"            \"Amount\": \"10.00\",",
													"            \"Currency\": \"GBP\"",
													"        }",
													"    }",
													"}",
													"const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"var options = {",
													"    method: 'POST',",
													"    url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"    header: mesgSigning.header,",
													"    body: {",
													"        mode: \"raw\",",
													"        raw: data1",
													"    }",
													"};",
													"pm.sendRequest(",
													"    options,",
													"    function (err, response) {",
													"        if (response.code !== 200) {",
													"            throw new Error('Could not generate message signature');",
													"        }",
													"        const signature = response.stream.toString('utf8');",
													"        pm.environment.set(\"signature\", signature);",
													"    }",
													")"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false,
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{intent-id}}\",\n        \"Reference\": \"myReference\",\n        \"InstructedAmount\": {\n            \"Amount\": \"10.00\",\n            \"Currency\": \"GBP\"\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-scheduled-payment-consents/{{intent-id}}/funds-confirmation",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-scheduled-payment-consents",
												"{{intent-id}}",
												"funds-confirmation"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: POST international-scheduled-payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.InternationalScheduledPaymentId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'Internatopayments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//  set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\"))",
													"    },",
													"    \"Risk\": {}",
													"}",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"// var options = {",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {},
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}}\n    },\n\"Risk\": {\n    \"PaymentContextCode\": \"BillingGoodsAndServicesInAdvance\",\n    \"MerchantCategoryCode\": \"stri\",\n    \"MerchantCustomerIdentification\": \"string\",\n    \"ContractPresentIndicator\": true,\n    \"BeneficiaryPrepopulatedIndicator\": true,\n    \"PaymentPurposeCode\": \"BKDF\",\n    \"CategoryPurposeCode\": \"BONU\",\n    \"BeneficiaryAccountType\": \"Business\",\n    \"DeliveryAddress\": {\n      \"AddressType\": \"BIZZ\",\n      \"Department\": \"string\",\n      \"SubDepartment\": \"string\",\n      \"StreetName\": \"string\",\n      \"BuildingNumber\": \"string\",\n      \"BuildingName\": \"string\",\n      \"Floor\": \"string\",\n      \"UnitNumber\": \"string\",\n      \"Room\": \"string\",\n      \"PostBox\": \"string\",\n      \"TownLocationName\": \"string\",\n      \"DistrictName\": \"string\",\n      \"CareOf\": \"string\",\n      \"PostCode\": \"string\",\n      \"TownName\": \"string\",\n      \"CountrySubDivision\": \"string\",\n      \"Country\": \"SY\",\n      \"AddressLine\": [\n        \"string\"\n      ]\n    },\n    \"ExtendedPurpose\": \"string\"\n  }\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-scheduled-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-scheduled-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: GET  international-scheduled-payments/{InternationalScheduledPaymentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-scheduled-payments/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-scheduled-payments",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: GET  international-scheduled-payments/{InternationalScheduledPaymentId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-scheduled-payments/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-scheduled-payments",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "PIS Flow - International Scheduled Payments UI",
							"item": [
								{
									"name": "Step 1: POST Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST international-scheduled-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"",
													"const data1 = {",
													"    \"Data\": {",
													"        \"Permission\": \"Create\",",
													"        \"Initiation\": {",
													"",
													"            \"InstructionIdentification\": pm.environment.get(\"randomString-1\"),",
													"            \"RequestedExecutionDateTime\": pm.environment.get(\"randomDateFuture\"),",
													"            \"CurrencyOfTransfer\": \"GBP\",",
													"            \"EndToEndIdentification\": \"FRESCO.21302.GFX.20\",",
													"            \"InstructedAmount\": {",
													"                \"Amount\": \"15.00\",",
													"                \"Currency\": \"GBP\"",
													"            },",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",",
													"                \"Identification\": \"08080021325698\",",
													"                \"Name\": \"Tom Hanks\"",
													"            },",
													"            \"RemittanceInformation\": {",
													"                \"Unstructured\": \"NAR. TEST\",",
													"                \"Reference\": \"TEST FV DNS\"",
													"            }",
													"",
													"        }",
													"    },",
													"    \"Risk\": {",
													"    }",
													"}",
													"",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"",
													"// var options = {",
													"",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )",
													"",
													"",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.gjbq",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"Permission\": \"Create\",\r\n        \"ReadRefundAccount\": \"No\",\r\n        \"Initiation\": {\r\n            \"InstructionIdentification\": \"{{randomString-1}}\",\r\n            \"EndToEndIdentification\": \"{{randomString-2}}\",\r\n            \"LocalInstrument\": \"UK.OBIE.BACS\",\r\n            \"InstructionPriority\": \"Normal\",\r\n            \"Purpose\": \"stri\",\r\n            \"ChargeBearer\": \"BorneByCreditor\",\r\n            \"RequestedExecutionDateTime\": \"2025-07-03T09:33:54.990Z\",\r\n            \"CurrencyOfTransfer\": \"GBP\",\r\n            \"DestinationCountryCode\": \"WU\",\r\n            \"InstructedAmount\": {\r\n                \"Amount\": \"7143.022\",\r\n                \"Currency\": \"GBP\"\r\n            },\r\n            \"ExchangeRateInformation\": {\r\n                \"UnitCurrency\": \"GBP\",\r\n                \"ExchangeRate\": 0,\r\n                \"RateType\": \"Actual\",\r\n                \"ContractIdentification\": \"string\"\r\n            },\r\n            // \"DebtorAccount\": {\r\n            //     \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\r\n            //     \"Identification\": \"08080021325698\",\r\n            //     \"Name\": \"string\",\r\n            //     \"SecondaryIdentification\": \"string\",\r\n            //     \"Proxy\": {\r\n            //         \"Identification\": \"string\",\r\n            //         \"Code\": \"TELE\",\r\n            //         \"Type\": \"string\"\r\n            //     }\r\n            // },\r\n            \"Creditor\": {\r\n                \"Name\": \"string\",\r\n                \"LEI\": \"1216009RE5W9TXA2BD17\",\r\n                \"PostalAddress\": {\r\n                    \"AddressType\": \"BIZZ\",\r\n                    \"Department\": \"string\",\r\n                    \"SubDepartment\": \"string\",\r\n                    \"StreetName\": \"string\",\r\n                    \"BuildingNumber\": \"string\",\r\n                    \"BuildingName\": \"string\",\r\n                    \"Floor\": \"string\",\r\n                    \"UnitNumber\": \"string\",\r\n                    \"Room\": \"string\",\r\n                    \"PostBox\": \"string\",\r\n                    \"TownLocationName\": \"string\",\r\n                    \"DistrictName\": \"string\",\r\n                    \"CareOf\": \"string\",\r\n                    \"PostCode\": \"string\",\r\n                    \"TownName\": \"string\",\r\n                    \"CountrySubDivision\": \"string\",\r\n                    \"Country\": \"DB\",\r\n                    \"AddressLine\": [\r\n                        \"string\"\r\n                    ]\r\n                }\r\n            },\r\n            \"CreditorAgent\": {\r\n                \"SchemeName\": \"BICFI\",\r\n                \"Identification\": \"08080021325698\",\r\n                \"LEI\": \"028700UCLPFYN6JMBI55\",\r\n                \"Name\": \"string\",\r\n                \"PostalAddress\": {\r\n                    \"AddressType\": \"BIZZ\",\r\n                    \"Department\": \"string\",\r\n                    \"SubDepartment\": \"string\",\r\n                    \"StreetName\": \"string\",\r\n                    \"BuildingNumber\": \"string\",\r\n                    \"BuildingName\": \"string\",\r\n                    \"Floor\": \"string\",\r\n                    \"UnitNumber\": \"string\",\r\n                    \"Room\": \"string\",\r\n                    \"PostBox\": \"string\",\r\n                    \"TownLocationName\": \"string\",\r\n                    \"DistrictName\": \"string\",\r\n                    \"CareOf\": \"string\",\r\n                    \"PostCode\": \"string\",\r\n                    \"TownName\": \"string\",\r\n                    \"CountrySubDivision\": \"string\",\r\n                    \"Country\": \"UI\",\r\n                    \"AddressLine\": [\r\n                        \"string\"\r\n                    ]\r\n                }\r\n            },\r\n            \"CreditorAccount\": {\r\n                \"SchemeName\": \"UK.OBIE.IBAN\",\r\n                \"Identification\": \"GB24OZON88885642162159\",\r\n                \"Name\": \"string\",\r\n                \"SecondaryIdentification\": \"string\",\r\n                \"Proxy\": {\r\n                    \"Identification\": \"string\",\r\n                    \"Code\": \"TELE\",\r\n                    \"Type\": \"string\"\r\n                }\r\n            },\r\n            \"UltimateCreditor\": {\r\n                \"Name\": \"string\",\r\n                \"Identification\": \"string\",\r\n                \"LEI\": \"318100EOSBPDTG22GH03\",\r\n                \"SchemeName\": \"string\",\r\n                \"PostalAddress\": {\r\n                    \"AddressType\": \"BIZZ\",\r\n                    \"Department\": \"string\",\r\n                    \"SubDepartment\": \"string\",\r\n                    \"StreetName\": \"string\",\r\n                    \"BuildingNumber\": \"string\",\r\n                    \"BuildingName\": \"string\",\r\n                    \"Floor\": \"string\",\r\n                    \"UnitNumber\": \"string\",\r\n                    \"Room\": \"string\",\r\n                    \"PostBox\": \"string\",\r\n                    \"TownLocationName\": \"string\",\r\n                    \"DistrictName\": \"string\",\r\n                    \"CareOf\": \"string\",\r\n                    \"PostCode\": \"string\",\r\n                    \"TownName\": \"string\",\r\n                    \"CountrySubDivision\": \"string\",\r\n                    \"Country\": \"QT\",\r\n                    \"AddressLine\": [\r\n                        \"string\"\r\n                    ]\r\n                }\r\n            },\r\n            \"UltimateDebtor\": {\r\n                \"Name\": \"string\",\r\n                \"Identification\": \"string\",\r\n                \"LEI\": \"044700G9U8VBBGBOT643\",\r\n                \"SchemeName\": \"string\",\r\n                \"PostalAddress\": {\r\n                    \"AddressType\": \"BIZZ\",\r\n                    \"Department\": \"string\",\r\n                    \"SubDepartment\": \"string\",\r\n                    \"StreetName\": \"string\",\r\n                    \"BuildingNumber\": \"string\",\r\n                    \"BuildingName\": \"string\",\r\n                    \"Floor\": \"string\",\r\n                    \"UnitNumber\": \"string\",\r\n                    \"Room\": \"string\",\r\n                    \"PostBox\": \"string\",\r\n                    \"TownLocationName\": \"string\",\r\n                    \"DistrictName\": \"string\",\r\n                    \"CareOf\": \"string\",\r\n                    \"PostCode\": \"string\",\r\n                    \"TownName\": \"string\",\r\n                    \"CountrySubDivision\": \"string\",\r\n                    \"Country\": \"ME\",\r\n                    \"AddressLine\": [\r\n                        \"string\"\r\n                    ]\r\n                }\r\n            },\r\n            \"RegulatoryReporting\": [\r\n                {\r\n                    \"DebitCreditReportingIndicator\": \"CRED\",\r\n                    \"Authority\": {\r\n                        \"Name\": \"string\",\r\n                        \"CountryCode\": \"MT\"\r\n                    },\r\n                    \"Details\": [\r\n                        {\r\n                            \"Type\": \"string\",\r\n                            \"Date\": \"2024-07-17T09:33:54.991Z\",\r\n                            \"Country\": \"JK\",\r\n                            \"Amount\": {\r\n                                \"Amount\": \"6631849.565\",\r\n                                \"Currency\": \"GBP\"\r\n                            },\r\n                            \"Information\": [\r\n                                \"string\"\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ],\r\n            \"RemittanceInformation\": {\r\n                \"Structured\": [\r\n                    {\r\n                        \"ReferredDocumentInformation\": [\r\n                            {\r\n                                \"Code\": \"CINV\",\r\n                                \"Issuer\": \"string\",\r\n                                \"Number\": \"string\",\r\n                                \"RelatedDate\": \"2024-06-17T09:33:54.992Z\",\r\n                                \"LineDetails\": [\r\n                                    \"string\"\r\n                                ]\r\n                            }\r\n                        ],\r\n                        \"ReferredDocumentAmount\": 0,\r\n                        \"CreditorReferenceInformation\": {\r\n                            \"Code\": \"DISP\",\r\n                            \"Issuer\": \"string\",\r\n                            \"Reference\": \"string\"\r\n                        },\r\n                        \"Invoicer\": \"string\",\r\n                        \"Invoicee\": \"string\",\r\n                        \"TaxRemittance\": \"string\",\r\n                        \"AdditionalRemittanceInformation\": [\r\n                            \"string\"\r\n                        ]\r\n                    }\r\n                ],\r\n                \"Unstructured\": [\r\n                    \"string\"\r\n                ]\r\n            },\r\n            \"SupplementaryData\": {\r\n                \"additionalProp1\": {}\r\n            }\r\n        },\r\n        \"Authorisation\": {\r\n            \"AuthorisationType\": \"Any\",\r\n            \"CompletionDateTime\": \"2025-09-17T09:33:54.992Z\"\r\n        },\r\n        \"SCASupportData\": {\r\n            \"RequestedSCAExemptionType\": \"BillPayment\",\r\n            \"AppliedAuthenticationApproach\": \"CA\",\r\n            \"ReferencePaymentOrderId\": \"string\"\r\n        }\r\n    },\r\n  \"Risk\": {\r\n    \"PaymentContextCode\": \"BillingGoodsAndServicesInAdvance\",\r\n    \"MerchantCategoryCode\": \"stri\",\r\n    \"MerchantCustomerIdentification\": \"string\",\r\n    \"ContractPresentIndicator\": true,\r\n    \"BeneficiaryPrepopulatedIndicator\": true,\r\n    \"PaymentPurposeCode\": \"BKDF\",\r\n    \"CategoryPurposeCode\": \"BONU\",\r\n    \"BeneficiaryAccountType\": \"Business\",\r\n    \"DeliveryAddress\": {\r\n      \"AddressType\": \"BIZZ\",\r\n      \"Department\": \"string\",\r\n      \"SubDepartment\": \"string\",\r\n      \"StreetName\": \"string\",\r\n      \"BuildingNumber\": \"string\",\r\n      \"BuildingName\": \"string\",\r\n      \"Floor\": \"string\",\r\n      \"UnitNumber\": \"string\",\r\n      \"Room\": \"string\",\r\n      \"PostBox\": \"string\",\r\n      \"TownLocationName\": \"string\",\r\n      \"DistrictName\": \"string\",\r\n      \"CareOf\": \"string\",\r\n      \"PostCode\": \"string\",\r\n      \"TownName\": \"string\",\r\n      \"CountrySubDivision\": \"string\",\r\n      \"Country\": \"SY\",\r\n      \"AddressLine\": [\r\n        \"string\"\r\n      ]\r\n    },\r\n    \"ExtendedPurpose\": \"string\"\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-scheduled-payment-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-scheduled-payment-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												},
												{
													"key": "login_hint",
													"value": "foo",
													"disabled": true
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments ",
													"type": "text"
												},
												{
													"key": "code",
													"value": "c4518831-058b-480e-9278-6ab451991606",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										},
										"description": "Copy the authorization code generated into the browser into the **Body** tab in the `code` parameter"
									},
									"response": []
								},
								{
									"name": "Step 5: GET international-scheduled-payment-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-scheduled-payment-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-scheduled-payment-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: POST international-scheduled-payments",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.InternationalScheduledPaymentId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'Internatopayments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//  set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\"))",
													"    },",
													"    \"Risk\": {}",
													"}",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"// var options = {",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {},
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}}\n    },\n\"Risk\": {\n    \"PaymentContextCode\": \"BillingGoodsAndServicesInAdvance\",\n    \"MerchantCategoryCode\": \"stri\",\n    \"MerchantCustomerIdentification\": \"string\",\n    \"ContractPresentIndicator\": true,\n    \"BeneficiaryPrepopulatedIndicator\": true,\n    \"PaymentPurposeCode\": \"BKDF\",\n    \"CategoryPurposeCode\": \"BONU\",\n    \"BeneficiaryAccountType\": \"Business\",\n    \"DeliveryAddress\": {\n      \"AddressType\": \"BIZZ\",\n      \"Department\": \"string\",\n      \"SubDepartment\": \"string\",\n      \"StreetName\": \"string\",\n      \"BuildingNumber\": \"string\",\n      \"BuildingName\": \"string\",\n      \"Floor\": \"string\",\n      \"UnitNumber\": \"string\",\n      \"Room\": \"string\",\n      \"PostBox\": \"string\",\n      \"TownLocationName\": \"string\",\n      \"DistrictName\": \"string\",\n      \"CareOf\": \"string\",\n      \"PostCode\": \"string\",\n      \"TownName\": \"string\",\n      \"CountrySubDivision\": \"string\",\n      \"Country\": \"SY\",\n      \"AddressLine\": [\n        \"string\"\n      ]\n    },\n    \"ExtendedPurpose\": \"string\"\n  }\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-scheduled-payments",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-scheduled-payments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: GET international-scheduled-payments/{InternationalScheduledPaymentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-scheduled-payments/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-scheduled-payments",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: GET international-scheduled-payments/{InternationalScheduledPaymentId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-scheduled-payments/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-scheduled-payments",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "PIS Flow- International Standing order Headless",
							"item": [
								{
									"name": "Step 1: POST Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2 : POST international-standing-order-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments'); ",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"Permission\": \"Create\",",
													"        \"Initiation\": {",
													"            \"Frequency\": \"EvryDay\",",
													"            \"FirstPaymentDateTime\": \"2024-10-01T13:14:25Z\",",
													"            \"CurrencyOfTransfer\": \"GBP\",",
													"            \"InstructedAmount\": {",
													"                \"Amount\": pm.environment.get(\"randomPrice\"),",
													"                \"Currency\": \"GBP\"",
													"            },",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"SortCodeAccountNumber\",",
													"                \"Identification\": \"202020\" + pm.environment.get(\"randomBankAccount\"),",
													"                \"Name\": pm.environment.get(\"randomFullName\")",
													"            }",
													"        }",
													"    },",
													"    \"Risk\": {}",
													"}",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"// var options = {",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.er",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Data\": {\r\n    \"Permission\": \"Create\",\r\n    \"ReadRefundAccount\": \"No\",\r\n    \"Initiation\": {\r\n      \"RemittanceInformation\": {\r\n        \"Structured\": [\r\n          {\r\n            \"ReferredDocumentInformation\": [\r\n              {\r\n                \"Code\": \"CINV\",\r\n                \"Issuer\": \"string\",\r\n                \"Number\": \"string\",\r\n                \"RelatedDate\": \"2024-07-17T10:16:41.159Z\",\r\n                \"LineDetails\": [\r\n                  \"string\"\r\n                ]\r\n              }\r\n            ],\r\n            \"ReferredDocumentAmount\": 0,\r\n            \"CreditorReferenceInformation\": {\r\n              \"Code\": \"DISP\",\r\n              \"Issuer\": \"string\",\r\n              \"Reference\": \"string\"\r\n            },\r\n            \"Invoicer\": \"string\",\r\n            \"Invoicee\": \"string\",\r\n            \"TaxRemittance\": \"string\",\r\n            \"AdditionalRemittanceInformation\": [\r\n              \"string\"\r\n            ]\r\n          }\r\n        ],\r\n        \"Unstructured\": [\r\n          \"string\"\r\n        ]\r\n      },\r\n      \"Purpose\": \"stri\",\r\n      \"ChargeBearer\": \"BorneByCreditor\",\r\n      \"CurrencyOfTransfer\": \"GBP\",\r\n      \"DestinationCountryCode\": \"HQ\",\r\n      \"InstructedAmount\": {\r\n        \"Amount\": \"969581294931.967\",\r\n        \"Currency\": \"GBP\"\r\n      },\r\n      \"DebtorAccount\": {\r\n        \"SchemeName\": \"IBAN\",\r\n        \"Identification\": \"GB24OZON88885642162159\",\r\n        \"Name\": \"string\",\r\n        \"SecondaryIdentification\": \"string\",\r\n        \"Proxy\": {\r\n          \"Identification\": \"string\",\r\n          \"Code\": \"TELE\",\r\n          \"Type\": \"string\"\r\n        }\r\n      },\r\n      \"Creditor\": {\r\n        \"Name\": \"string\",\r\n        \"LEI\": \"1215004TBD2VF4OIII03\",\r\n        \"PostalAddress\": {\r\n          \"AddressType\": \"BIZZ\",\r\n          \"Department\": \"string\",\r\n          \"SubDepartment\": \"string\",\r\n          \"StreetName\": \"string\",\r\n          \"BuildingNumber\": \"string\",\r\n          \"BuildingName\": \"string\",\r\n          \"Floor\": \"string\",\r\n          \"UnitNumber\": \"string\",\r\n          \"Room\": \"string\",\r\n          \"PostBox\": \"string\",\r\n          \"TownLocationName\": \"string\",\r\n          \"DistrictName\": \"string\",\r\n          \"CareOf\": \"string\",\r\n          \"PostCode\": \"string\",\r\n          \"TownName\": \"string\",\r\n          \"CountrySubDivision\": \"string\",\r\n          \"Country\": \"HC\",\r\n          \"AddressLine\": [\r\n            \"string\"\r\n          ]\r\n        }\r\n      },\r\n\r\n      \"CreditorAccount\": {\r\n        \"SchemeName\": \"IBAN\",\r\n        \"Identification\": \"GB24OZON88885642162159\",\r\n        \"Name\": \"string\",\r\n        \"SecondaryIdentification\": \"string\",\r\n        \"Proxy\": {\r\n          \"Identification\": \"string\",\r\n          \"Code\": \"TELE\",\r\n          \"Type\": \"string\"\r\n        }\r\n      },\r\n      \"UltimateCreditor\": {\r\n        \"Name\": \"string\",\r\n        \"Identification\": \"string\",\r\n        \"LEI\": \"5370001SB2ZZ5UI22Q89\",\r\n        \"SchemeName\": \"string\",\r\n        \"PostalAddress\": {\r\n          \"AddressType\": \"BIZZ\",\r\n          \"Department\": \"string\",\r\n          \"SubDepartment\": \"string\",\r\n          \"StreetName\": \"string\",\r\n          \"BuildingNumber\": \"string\",\r\n          \"BuildingName\": \"string\",\r\n          \"Floor\": \"string\",\r\n          \"UnitNumber\": \"string\",\r\n          \"Room\": \"string\",\r\n          \"PostBox\": \"string\",\r\n          \"TownLocationName\": \"string\",\r\n          \"DistrictName\": \"string\",\r\n          \"CareOf\": \"string\",\r\n          \"PostCode\": \"string\",\r\n          \"TownName\": \"string\",\r\n          \"CountrySubDivision\": \"string\",\r\n          \"Country\": \"AU\",\r\n          \"AddressLine\": [\r\n            \"string\"\r\n          ]\r\n        }\r\n      },\r\n      \"UltimateDebtor\": {\r\n        \"Name\": \"string\",\r\n        \"Identification\": \"string\",\r\n        \"LEI\": \"590900D9ELM1SWU61927\",\r\n        \"SchemeName\": \"string\",\r\n        \"PostalAddress\": {\r\n          \"AddressType\": \"BIZZ\",\r\n          \"Department\": \"string\",\r\n          \"SubDepartment\": \"string\",\r\n          \"StreetName\": \"string\",\r\n          \"BuildingNumber\": \"string\",\r\n          \"BuildingName\": \"string\",\r\n          \"Floor\": \"string\",\r\n          \"UnitNumber\": \"string\",\r\n          \"Room\": \"string\",\r\n          \"PostBox\": \"string\",\r\n          \"TownLocationName\": \"string\",\r\n          \"DistrictName\": \"string\",\r\n          \"CareOf\": \"string\",\r\n          \"PostCode\": \"string\",\r\n          \"TownName\": \"string\",\r\n          \"CountrySubDivision\": \"string\",\r\n          \"Country\": \"XC\",\r\n          \"AddressLine\": [\r\n            \"string\"\r\n          ]\r\n        }\r\n      },\r\n      \"RegulatoryReporting\": [\r\n        {\r\n          \"DebitCreditReportingIndicator\": \"CRED\",\r\n          \"Authority\": {\r\n            \"Name\": \"string\",\r\n            \"CountryCode\": \"JD\"\r\n          },\r\n          \"Details\": [\r\n            {\r\n              \"Type\": \"string\",\r\n              \"Date\": \"2024-07-17T10:16:41.159Z\",\r\n              \"Country\": \"DY\",\r\n              \"Amount\": {\r\n                \"Amount\": \"1980\",\r\n                \"Currency\": \"GBP\"\r\n              },\r\n              \"Information\": [\r\n                \"string\"\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      \"MandateRelatedInformation\": {\r\n        \"MandateIdentification\": \"string\",\r\n        \"Classification\": \"FIXE\",\r\n        \"CategoryPurposeCode\": \"BONU\",\r\n        \"FirstPaymentDateTime\": \"2024-06-24T10:16:41.159Z\",\r\n        \"RecurringPaymentDateTime\": \"2024-07-17T10:16:41.159Z\",\r\n        \"FinalPaymentDateTime\": \"2024-08-17T10:16:41.159Z\",\r\n        \"Frequency\": {\r\n          \"Type\": \"ADHO\",\r\n          \"CountPerPeriod\": 0,\r\n          \"PointInTime\": \"st\"\r\n        },\r\n        \"Reason\": \"string\"\r\n      },\r\n      \"SupplementaryData\": {\r\n        \"additionalProp1\": {}\r\n      }\r\n    },\r\n    \"Authorisation\": {\r\n      \"AuthorisationType\": \"Any\",\r\n      \"CompletionDateTime\": \"2024-08-17T10:16:41.159Z\"\r\n    },\r\n    \"SCASupportData\": {\r\n      \"RequestedSCAExemptionType\": \"BillPayment\",\r\n      \"AppliedAuthenticationApproach\": \"CA\",\r\n      \"ReferencePaymentOrderId\": \"string\"\r\n    }\r\n  },\r\n  \"Risk\": {\r\n    \"PaymentContextCode\": \"BillingGoodsAndServicesInAdvance\",\r\n    \"MerchantCategoryCode\": \"stri\",\r\n    \"MerchantCustomerIdentification\": \"string\",\r\n    \"ContractPresentIndicator\": true,\r\n    \"BeneficiaryPrepopulatedIndicator\": true,\r\n    \"PaymentPurposeCode\": \"BKDF\",\r\n    \"CategoryPurposeCode\": \"BONU\",\r\n    \"BeneficiaryAccountType\": \"Business\",\r\n    \"DeliveryAddress\": {\r\n      \"AddressType\": \"BIZZ\",\r\n      \"Department\": \"string\",\r\n      \"SubDepartment\": \"string\",\r\n      \"StreetName\": \"string\",\r\n      \"BuildingNumber\": \"string\",\r\n      \"BuildingName\": \"string\",\r\n      \"Floor\": \"string\",\r\n      \"UnitNumber\": \"string\",\r\n      \"Room\": \"string\",\r\n      \"PostBox\": \"string\",\r\n      \"TownLocationName\": \"string\",\r\n      \"DistrictName\": \"string\",\r\n      \"CareOf\": \"string\",\r\n      \"PostCode\": \"string\",\r\n      \"TownName\": \"string\",\r\n      \"CountrySubDivision\": \"string\",\r\n      \"Country\": \"DT\",\r\n      \"AddressLine\": [\r\n        \"string\"\r\n      ]\r\n    },\r\n    \"ExtendedPurpose\": \"string\"\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-standing-order-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-standing-order-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												},
												{
													"key": "login_hint",
													"value": "foo",
													"disabled": true
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "3003: O3 Call headless-heimdall auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"consent-id-from-hh\", jsonData.interaction.params.claims.id_token.openbanking_intent_id.value);\r",
													"postman.setEnvironmentVariable(\"interaction-id\", jsonData.interaction.interactionId);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDgyMS44OSwiaWF0IjoxNjA5MTIwODExLjg5LCJuYmYiOjE2MDkxMjA4MTEuODksImp0aSI6IjdhNzVlYmU4LTMxZjktNDU2Yy1iNWU1LTlmOTJkMmMzOTkxOCJ9.O1rBKF87h7LqHgC5sd4pHuVPuKn2CP-feD7xZ1wCT77dfLU8HDDug3zcZdbcMOKH7cnb59MWKTgCcd3aGHfUsfVdT2cE2LrU_pPG7IW1km2Qri89M65241iUR8Ra_By3lULV4AwVywMH7dgjFCWFLWTbQW9idcImt0h9MaSTQyjErPO9Mkp64XqIvIz6lYOhWe6wwZpB5b2S6F6ysDfXkQbkEccKuDNgQAB0_Eh_I_4E9JZU6j_NyxDg6mlT2y1nozX_3-5dGKhgdU4IleqRK8qASosSSSAvjqfeE-3vkbahAcrdM6E8oQaoz2m6hMr5TRpuBF6LRJjqpu2G-KPU7w",
												"disabled": true
											},
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{authCodeUrl}}",
											"host": [
												"{{authCodeUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "3005: O3 Retrieve a consent by its id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB"
											},
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{cs}}/v2024.31/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2024.31",
												"consents",
												"{{consent-id-from-hh}}"
											],
											"query": [
												{
													"key": "authorization",
													"value": "foo",
													"disabled": true
												},
												{
													"key": "x-cert-dn",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4003: O3: Patch the consent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											},
											{
												"key": "content-type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"psuIdentifiers\": {\r\n        \"userId\": \"{{userId}}\"\r\n    },\r\n\r\n    \"accountIds\": {{accountIds}},\r\n    \"consentBody.Data.Status\": \"AUTH\"\r\n}"
										},
										"url": {
											"raw": "{{cs}}/v2024.31/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2024.31",
												"consents",
												"{{consent-id-from-hh}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "4005: O3: Confirm with Heimdall",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authorizationCode\", responseBody);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "heimdall.suppressRefreshToken",
													"value": "false",
													"type": "text"
												},
												{
													"key": "heimdall.accessTokenValidity",
													"value": "3600",
													"type": "text",
													"disabled": true
												},
												{
													"key": "heimdall.refreshTokenValidity",
													"value": "7200",
													"type": "text",
													"disabled": true
												},
												{
													"key": "openbanking_intent_id",
													"value": "{{consent-id-from-hh}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{authEndpoint}}/{{interaction-id}}/doConfirm",
											"host": [
												"{{authEndpoint}}"
											],
											"path": [
												"{{interaction-id}}",
												"doConfirm"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments ",
													"type": "text"
												},
												{
													"key": "code",
													"value": "{{authorizationCode}}",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										},
										"description": "Copy the authorization code generated into the browser into the **Body** tab in the `code` parameter"
									},
									"response": []
								},
								{
									"name": "Step 5: GET international-standing-order-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-standing-order-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-standing-order-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: POST international-standing-orders",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.InternationalStandingOrderId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'international-standing-order-payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//  set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\"))",
													"    },",
													"    \"Risk\": {}",
													"}",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"// var options = {",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}}\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillingGoodsAndServicesInAdvance\",\n        \"MerchantCategoryCode\": \"stri\",\n        \"MerchantCustomerIdentification\": \"string\",\n        \"ContractPresentIndicator\": true,\n        \"BeneficiaryPrepopulatedIndicator\": true,\n        \"PaymentPurposeCode\": \"BKDF\",\n        \"CategoryPurposeCode\": \"BONU\",\n        \"BeneficiaryAccountType\": \"Business\",\n        \"DeliveryAddress\": {\n            \"AddressType\": \"BIZZ\",\n            \"Department\": \"string\",\n            \"SubDepartment\": \"string\",\n            \"StreetName\": \"string\",\n            \"BuildingNumber\": \"string\",\n            \"BuildingName\": \"string\",\n            \"Floor\": \"string\",\n            \"UnitNumber\": \"string\",\n            \"Room\": \"string\",\n            \"PostBox\": \"string\",\n            \"TownLocationName\": \"string\",\n            \"DistrictName\": \"string\",\n            \"CareOf\": \"string\",\n            \"PostCode\": \"string\",\n            \"TownName\": \"string\",\n            \"CountrySubDivision\": \"string\",\n            \"Country\": \"DT\",\n            \"AddressLine\": [\n                \"string\"\n            ]\n        },\n        \"ExtendedPurpose\": \"string\"\n    }\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-standing-orders",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-standing-orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: GET international-standing-orders/{InternationalStandingOrderPaymentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-standing-orders/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-standing-orders",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: GET international-standing-orders/{InternationalStandingOrderPaymentId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-standing-orders/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-standing-orders",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "PIS Flow- International Standing order UI",
							"item": [
								{
									"name": "Step 1: POST Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2 : POST international-standing-order-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments'); ",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"Permission\": \"Create\",",
													"        \"Initiation\": {",
													"            \"Frequency\": \"EvryDay\",",
													"            \"FirstPaymentDateTime\": \"2024-10-01T13:14:25Z\",",
													"            \"CurrencyOfTransfer\": \"GBP\",",
													"            \"InstructedAmount\": {",
													"                \"Amount\": pm.environment.get(\"randomPrice\"),",
													"                \"Currency\": \"GBP\"",
													"            },",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"SortCodeAccountNumber\",",
													"                \"Identification\": \"202020\" + pm.environment.get(\"randomBankAccount\"),",
													"                \"Name\": pm.environment.get(\"randomFullName\")",
													"            }",
													"        }",
													"    },",
													"    \"Risk\": {}",
													"}",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"// var options = {",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.qw",
												"disabled": true
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Data\": {\r\n    \"Permission\": \"Create\",\r\n    \"ReadRefundAccount\": \"No\",\r\n    \"Initiation\": {\r\n      \"RemittanceInformation\": {\r\n        \"Structured\": [\r\n          {\r\n            \"ReferredDocumentInformation\": [\r\n              {\r\n                \"Code\": \"CINV\",\r\n                \"Issuer\": \"string\",\r\n                \"Number\": \"string\",\r\n                \"RelatedDate\": \"2024-07-17T10:16:41.159Z\",\r\n                \"LineDetails\": [\r\n                  \"string\"\r\n                ]\r\n              }\r\n            ],\r\n            \"ReferredDocumentAmount\": 0,\r\n            \"CreditorReferenceInformation\": {\r\n              \"Code\": \"DISP\",\r\n              \"Issuer\": \"string\",\r\n              \"Reference\": \"string\"\r\n            },\r\n            \"Invoicer\": \"string\",\r\n            \"Invoicee\": \"string\",\r\n            \"TaxRemittance\": \"string\",\r\n            \"AdditionalRemittanceInformation\": [\r\n              \"string\"\r\n            ]\r\n          }\r\n        ],\r\n        \"Unstructured\": [\r\n          \"string\"\r\n        ]\r\n      },\r\n      \"Purpose\": \"stri\",\r\n      \"ChargeBearer\": \"BorneByCreditor\",\r\n      \"CurrencyOfTransfer\": \"GBP\",\r\n      \"DestinationCountryCode\": \"HQ\",\r\n      \"InstructedAmount\": {\r\n        \"Amount\": \"969581294931.967\",\r\n        \"Currency\": \"GBP\"\r\n      },\r\n    //   \"DebtorAccount\": {\r\n    //     \"SchemeName\": \"IBAN\",\r\n    //     \"Identification\": \"GB24OZON88885642162159\",\r\n    //     \"Name\": \"string\",\r\n    //     \"SecondaryIdentification\": \"string\",\r\n    //     \"Proxy\": {\r\n    //       \"Identification\": \"string\",\r\n    //       \"Code\": \"TELE\",\r\n    //       \"Type\": \"string\"\r\n    //     }\r\n    //   },\r\n      \"Creditor\": {\r\n        \"Name\": \"string\",\r\n        \"LEI\": \"1215004TBD2VF4OIII03\",\r\n        \"PostalAddress\": {\r\n          \"AddressType\": \"BIZZ\",\r\n          \"Department\": \"string\",\r\n          \"SubDepartment\": \"string\",\r\n          \"StreetName\": \"string\",\r\n          \"BuildingNumber\": \"string\",\r\n          \"BuildingName\": \"string\",\r\n          \"Floor\": \"string\",\r\n          \"UnitNumber\": \"string\",\r\n          \"Room\": \"string\",\r\n          \"PostBox\": \"string\",\r\n          \"TownLocationName\": \"string\",\r\n          \"DistrictName\": \"string\",\r\n          \"CareOf\": \"string\",\r\n          \"PostCode\": \"string\",\r\n          \"TownName\": \"string\",\r\n          \"CountrySubDivision\": \"string\",\r\n          \"Country\": \"HC\",\r\n          \"AddressLine\": [\r\n            \"string\"\r\n          ]\r\n        }\r\n      },\r\n\r\n      \"CreditorAccount\": {\r\n        \"SchemeName\": \"IBAN\",\r\n        \"Identification\": \"GB24OZON88885642162159\",\r\n        \"Name\": \"string\",\r\n        \"SecondaryIdentification\": \"string\",\r\n        \"Proxy\": {\r\n          \"Identification\": \"string\",\r\n          \"Code\": \"TELE\",\r\n          \"Type\": \"string\"\r\n        }\r\n      },\r\n      \"UltimateCreditor\": {\r\n        \"Name\": \"string\",\r\n        \"Identification\": \"string\",\r\n        \"LEI\": \"5370001SB2ZZ5UI22Q89\",\r\n        \"SchemeName\": \"string\",\r\n        \"PostalAddress\": {\r\n          \"AddressType\": \"BIZZ\",\r\n          \"Department\": \"string\",\r\n          \"SubDepartment\": \"string\",\r\n          \"StreetName\": \"string\",\r\n          \"BuildingNumber\": \"string\",\r\n          \"BuildingName\": \"string\",\r\n          \"Floor\": \"string\",\r\n          \"UnitNumber\": \"string\",\r\n          \"Room\": \"string\",\r\n          \"PostBox\": \"string\",\r\n          \"TownLocationName\": \"string\",\r\n          \"DistrictName\": \"string\",\r\n          \"CareOf\": \"string\",\r\n          \"PostCode\": \"string\",\r\n          \"TownName\": \"string\",\r\n          \"CountrySubDivision\": \"string\",\r\n          \"Country\": \"AU\",\r\n          \"AddressLine\": [\r\n            \"string\"\r\n          ]\r\n        }\r\n      },\r\n      \"UltimateDebtor\": {\r\n        \"Name\": \"string\",\r\n        \"Identification\": \"string\",\r\n        \"LEI\": \"590900D9ELM1SWU61927\",\r\n        \"SchemeName\": \"string\",\r\n        \"PostalAddress\": {\r\n          \"AddressType\": \"BIZZ\",\r\n          \"Department\": \"string\",\r\n          \"SubDepartment\": \"string\",\r\n          \"StreetName\": \"string\",\r\n          \"BuildingNumber\": \"string\",\r\n          \"BuildingName\": \"string\",\r\n          \"Floor\": \"string\",\r\n          \"UnitNumber\": \"string\",\r\n          \"Room\": \"string\",\r\n          \"PostBox\": \"string\",\r\n          \"TownLocationName\": \"string\",\r\n          \"DistrictName\": \"string\",\r\n          \"CareOf\": \"string\",\r\n          \"PostCode\": \"string\",\r\n          \"TownName\": \"string\",\r\n          \"CountrySubDivision\": \"string\",\r\n          \"Country\": \"XC\",\r\n          \"AddressLine\": [\r\n            \"string\"\r\n          ]\r\n        }\r\n      },\r\n      \"RegulatoryReporting\": [\r\n        {\r\n          \"DebitCreditReportingIndicator\": \"CRED\",\r\n          \"Authority\": {\r\n            \"Name\": \"string\",\r\n            \"CountryCode\": \"JD\"\r\n          },\r\n          \"Details\": [\r\n            {\r\n              \"Type\": \"string\",\r\n              \"Date\": \"2024-07-17T10:16:41.159Z\",\r\n              \"Country\": \"DY\",\r\n              \"Amount\": {\r\n                \"Amount\": \"1980\",\r\n                \"Currency\": \"GBP\"\r\n              },\r\n              \"Information\": [\r\n                \"string\"\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ],\r\n      \"MandateRelatedInformation\": {\r\n        \"MandateIdentification\": \"string\",\r\n        \"Classification\": \"FIXE\",\r\n        \"CategoryPurposeCode\": \"BONU\",\r\n        \"FirstPaymentDateTime\": \"2024-06-24T10:16:41.159Z\",\r\n        \"RecurringPaymentDateTime\": \"2024-07-17T10:16:41.159Z\",\r\n        \"FinalPaymentDateTime\": \"2024-08-17T10:16:41.159Z\",\r\n        \"Frequency\": {\r\n          \"Type\": \"ADHO\",\r\n          \"CountPerPeriod\": 0,\r\n          \"PointInTime\": \"st\"\r\n        },\r\n        \"Reason\": \"string\"\r\n      },\r\n      \"SupplementaryData\": {\r\n        \"additionalProp1\": {}\r\n      }\r\n    },\r\n    \"Authorisation\": {\r\n      \"AuthorisationType\": \"Any\",\r\n      \"CompletionDateTime\": \"2025-08-17T10:16:41.159Z\"\r\n    },\r\n    \"SCASupportData\": {\r\n      \"RequestedSCAExemptionType\": \"BillPayment\",\r\n      \"AppliedAuthenticationApproach\": \"CA\",\r\n      \"ReferencePaymentOrderId\": \"string\"\r\n    }\r\n  },\r\n  \"Risk\": {\r\n    \"PaymentContextCode\": \"BillingGoodsAndServicesInAdvance\",\r\n    \"MerchantCategoryCode\": \"stri\",\r\n    \"MerchantCustomerIdentification\": \"string\",\r\n    \"ContractPresentIndicator\": true,\r\n    \"BeneficiaryPrepopulatedIndicator\": true,\r\n    \"PaymentPurposeCode\": \"BKDF\",\r\n    \"CategoryPurposeCode\": \"BONU\",\r\n    \"BeneficiaryAccountType\": \"Business\",\r\n    \"DeliveryAddress\": {\r\n      \"AddressType\": \"BIZZ\",\r\n      \"Department\": \"string\",\r\n      \"SubDepartment\": \"string\",\r\n      \"StreetName\": \"string\",\r\n      \"BuildingNumber\": \"string\",\r\n      \"BuildingName\": \"string\",\r\n      \"Floor\": \"string\",\r\n      \"UnitNumber\": \"string\",\r\n      \"Room\": \"string\",\r\n      \"PostBox\": \"string\",\r\n      \"TownLocationName\": \"string\",\r\n      \"DistrictName\": \"string\",\r\n      \"CareOf\": \"string\",\r\n      \"PostCode\": \"string\",\r\n      \"TownName\": \"string\",\r\n      \"CountrySubDivision\": \"string\",\r\n      \"Country\": \"DT\",\r\n      \"AddressLine\": [\r\n        \"string\"\r\n      ]\r\n    },\r\n    \"ExtendedPurpose\": \"string\"\r\n  }\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-standing-order-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-standing-order-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												},
												{
													"key": "login_hint",
													"value": "foo",
													"disabled": true
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "Step 4 : POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments ",
													"type": "text"
												},
												{
													"key": "code",
													"value": "cad60746-d6dc-44f2-9380-86084a6ed800",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										},
										"description": "Copy the authorization code generated into the browser into the **Body** tab in the `code` parameter"
									},
									"response": []
								},
								{
									"name": "Step 5: GET international-standing-order-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-standing-order-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-standing-order-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: POST international-standing-orders",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.InternationalStandingOrderId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'international-standing-order-payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"//  set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\"))",
													"    },",
													"    \"Risk\": {}",
													"}",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"// var options = {",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}}\n    },\n    \"Risk\": {\n        \"PaymentContextCode\": \"BillingGoodsAndServicesInAdvance\",\n        \"MerchantCategoryCode\": \"stri\",\n        \"MerchantCustomerIdentification\": \"string\",\n        \"ContractPresentIndicator\": true,\n        \"BeneficiaryPrepopulatedIndicator\": true,\n        \"PaymentPurposeCode\": \"BKDF\",\n        \"CategoryPurposeCode\": \"BONU\",\n        \"BeneficiaryAccountType\": \"Business\",\n        \"DeliveryAddress\": {\n            \"AddressType\": \"BIZZ\",\n            \"Department\": \"string\",\n            \"SubDepartment\": \"string\",\n            \"StreetName\": \"string\",\n            \"BuildingNumber\": \"string\",\n            \"BuildingName\": \"string\",\n            \"Floor\": \"string\",\n            \"UnitNumber\": \"string\",\n            \"Room\": \"string\",\n            \"PostBox\": \"string\",\n            \"TownLocationName\": \"string\",\n            \"DistrictName\": \"string\",\n            \"CareOf\": \"string\",\n            \"PostCode\": \"string\",\n            \"TownName\": \"string\",\n            \"CountrySubDivision\": \"string\",\n            \"Country\": \"DT\",\n            \"AddressLine\": [\n                \"string\"\n            ]\n        },\n        \"ExtendedPurpose\": \"string\"\n    }\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-standing-orders",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-standing-orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: GET international-standing-orders/{InternationalStandingOrderPaymentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-standing-orders/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-standing-orders",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: GET international-standing-orders/{InternationalStandingOrderPaymentId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/international-standing-orders/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"international-standing-orders",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "VRP Flow - Variable Recurring Payments Headless",
							"item": [
								{
									"name": "Step 1: POST Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST variable-recurring-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"PSUAuthenticationMethod\", JSON.stringify(jsonData.Data.ControlParameters.PSUAuthenticationMethods));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ReadRefundAccount\": \"Yes\",",
													"        \"ControlParameters\": {",
													"            \"PSUAuthenticationMethods\": [\"UK.OBIE.SCA\"],",
													"            \"VRPType\": [\"UK.OBIE.VRPType.Sweeping\"],",
													"            \"ValidFromDateTime\": \"2017-06-05T15:15:13+00:00\",",
													"            \"ValidToDateTime\": \"2025-06-05T15:15:13+00:00\",",
													"            \"MaximumIndividualAmount\": {",
													"                \"Amount\": \"100.00\",",
													"                \"Currency\": \"GBP\"",
													"            },",
													"            \"PeriodicLimits\": [",
													"                {",
													"                    \"Amount\": \"200.00\",",
													"                    \"Currency\": \"GBP\",",
													"                    \"PeriodAlignment\": \"Consent\",",
													"                    \"PeriodType\": \"Week\"",
													"                }",
													"            ]",
													"        },",
													"        \"Initiation\": {",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"SortCodeAccountNumber\",",
													"                \"Identification\": \"01000160000001\",",
													"                \"SecondaryIdentification\": \"Roll 90210\",",
													"                \"Name\": \"Marcus Sweepimus\"",
													"            },",
													"            \"DebtorAccount\": {",
													"                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",",
													"                \"Identification\": \"10000109010102\",",
													"                \"Name\": pm.environment.get(\"randomCompanyName\")",
													"            },",
													"            \"RemittanceInformation\": {",
													"                \"Reference\": \"Sweepco\"",
													"            }",
													"        }",
													"    },",
													"    \"Risk\": {}",
													"}",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"// var options = {",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCOX.htn",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"Data\": {\r\n    \"ReadRefundAccount\": \"Yes\",\r\n    \"ControlParameters\": {\r\n      \"ValidFromDateTime\": \"2024-06-17T11:10:53.109Z\",\r\n      \"ValidToDateTime\": \"2024-08-17T11:10:53.109Z\",\r\n      \"MaximumIndividualAmount\": {\r\n        \"Amount\": \"05\",\r\n        \"Currency\": \"GBP\"\r\n      },\r\n      \"PeriodicLimits\": [\r\n        {\r\n          \"PeriodType\": \"Day\",\r\n          \"PeriodAlignment\": \"Consent\",\r\n          \"Amount\": \"497.93\",\r\n          \"Currency\": \"GBP\"\r\n        }\r\n      ],\r\n      \"VRPType\": [\r\n        \"UK.OBIE.VRPType.Sweeping\"\r\n      ],\r\n      \"PSUAuthenticationMethods\": [\r\n        \"UK.OBIE.SCA\"\r\n      ],\r\n      \"PSUInteractionTypes\": [\r\n        \"UK.OB.InSession\"\r\n      ],\r\n      \"SupplementaryData\": {}\r\n    },\r\n    \"Initiation\": {\r\n      \"DebtorAccount\": {\r\n        \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\r\n                \"Identification\": \"10000109010102\",\r\n        \"Name\": \"string\",\r\n        \"SecondaryIdentification\": \"string\",\r\n        \"Proxy\": {\r\n          \"Identification\": \"string\",\r\n          \"Code\": \"TELE\",\r\n          \"Type\": \"string\"\r\n        }\r\n      },\r\n      \"CreditorAccount\": {\r\n       \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\r\n                \"Identification\": \"10000109010102\",\r\n        \"Name\": \"string\",\r\n        \"SecondaryIdentification\": \"string\",\r\n        \"Proxy\": {\r\n          \"Identification\": \"string\",\r\n          \"Code\": \"TELE\",\r\n          \"Type\": \"string\"\r\n        }\r\n      },\r\n      \"CreditorPostalAddress\": {\r\n        \"AddressType\": \"BIZZ\",\r\n        \"Department\": \"string\",\r\n        \"SubDepartment\": \"string\",\r\n        \"StreetName\": \"string\",\r\n        \"BuildingNumber\": \"string\",\r\n        \"BuildingName\": \"string\",\r\n        \"Floor\": \"string\",\r\n        \"UnitNumber\": \"string\",\r\n        \"Room\": \"string\",\r\n        \"PostBox\": \"string\",\r\n        \"TownLocationName\": \"string\",\r\n        \"DistrictName\": \"string\",\r\n        \"CareOf\": \"string\",\r\n        \"PostCode\": \"string\",\r\n        \"TownName\": \"string\",\r\n        \"CountrySubDivision\": \"string\",\r\n        \"Country\": \"DF\",\r\n        \"AddressLine\": [\r\n          \"string\"\r\n        ]\r\n      },\r\n      \"UltimateCreditor\": {\r\n        \"Name\": \"string\",\r\n        \"Identification\": \"string\",\r\n        \"LEI\": \"string\",\r\n        \"SchemeName\": \"string\",\r\n        \"PostalAddress\": {\r\n          \"AddressType\": \"BIZZ\",\r\n          \"Department\": \"string\",\r\n          \"SubDepartment\": \"string\",\r\n          \"StreetName\": \"string\",\r\n          \"BuildingNumber\": \"string\",\r\n          \"BuildingName\": \"string\",\r\n          \"Floor\": \"string\",\r\n          \"UnitNumber\": \"string\",\r\n          \"Room\": \"string\",\r\n          \"PostBox\": \"string\",\r\n          \"TownLocationName\": \"string\",\r\n          \"DistrictName\": \"string\",\r\n          \"CareOf\": \"string\",\r\n          \"PostCode\": \"string\",\r\n          \"TownName\": \"string\",\r\n          \"CountrySubDivision\": \"string\",\r\n          \"Country\": \"FT\",\r\n          \"AddressLine\": [\r\n            \"string\"\r\n          ]\r\n        }\r\n      },\r\n      \"UltimateDebtor\": {\r\n        \"Name\": \"string\",\r\n        \"Identification\": \"string\",\r\n        \"LEI\": \"string\",\r\n        \"SchemeName\": \"string\",\r\n        \"PostalAddress\": {\r\n          \"AddressType\": \"BIZZ\",\r\n          \"Department\": \"string\",\r\n          \"SubDepartment\": \"string\",\r\n          \"StreetName\": \"string\",\r\n          \"BuildingNumber\": \"string\",\r\n          \"BuildingName\": \"string\",\r\n          \"Floor\": \"string\",\r\n          \"UnitNumber\": \"string\",\r\n          \"Room\": \"string\",\r\n          \"PostBox\": \"string\",\r\n          \"TownLocationName\": \"string\",\r\n          \"DistrictName\": \"string\",\r\n          \"CareOf\": \"string\",\r\n          \"PostCode\": \"string\",\r\n          \"TownName\": \"string\",\r\n          \"CountrySubDivision\": \"string\",\r\n          \"Country\": \"PV\",\r\n          \"AddressLine\": [\r\n            \"string\"\r\n          ]\r\n        }\r\n      },\r\n      \"RemittanceInformation\": {\r\n        \"Structured\": [\r\n          {\r\n            \"ReferredDocumentInformation\": [\r\n              {\r\n                \"Code\": \"CINV\",\r\n                \"Issuer\": \"string\",\r\n                \"Number\": \"string\",\r\n                \"RelatedDate\": \"2024-06-17T11:10:53.109Z\",\r\n                \"LineDetails\": [\r\n                  \"string\"\r\n                ]\r\n              }\r\n            ],\r\n            \"ReferredDocumentAmount\": 0,\r\n            \"CreditorReferenceInformation\": {\r\n              \"Code\": \"DISP\",\r\n              \"Issuer\": \"string\",\r\n              \"Reference\": \"string\"\r\n            },\r\n            \"Invoicer\": \"string\",\r\n            \"Invoicee\": \"string\",\r\n            \"TaxRemittance\": \"string\",\r\n            \"AdditionalRemittanceInformation\": [\r\n              \"string\"\r\n            ]\r\n          }\r\n        ],\r\n        \"Unstructured\": [\r\n          \"string\"\r\n        ]\r\n      },\r\n      \"RegulatoryReporting\": [\r\n        {\r\n          \"DebitCreditReportingIndicator\": \"CRED\",\r\n          \"Authority\": {\r\n            \"Name\": \"string\",\r\n            \"Country\": \"NO\"\r\n          },\r\n          \"Details\": [\r\n            {\r\n              \"Type\": \"string\",\r\n              \"Date\": \"2024-06-17T11:10:53.109Z\",\r\n              \"Country\": \"HF\",\r\n              \"Amount\": {\r\n                \"Amount\": \"370719236\",\r\n                \"Currency\": \"GBP\"\r\n              },\r\n              \"Information\": [\r\n                \"string\"\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  \"Risk\": {\r\n    \"PaymentContextCode\": \"BillingGoodsAndServicesInAdvance\",\r\n    \"MerchantCategoryCode\": \"stri\",\r\n    \"MerchantCustomerIdentification\": \"string\",\r\n    \"ContractPresentIndicator\": true,\r\n    \"BeneficiaryPrepopulatedIndicator\": true,\r\n    \"PaymentPurposeCode\": \"BKDF\",\r\n    \"CategoryPurposeCode\": \"BONU\",\r\n    \"BeneficiaryAccountType\": \"Business\",\r\n    \"DeliveryAddress\": {\r\n      \"AddressType\": \"BIZZ\",\r\n      \"Department\": \"string\",\r\n      \"SubDepartment\": \"string\",\r\n      \"StreetName\": \"string\",\r\n      \"BuildingNumber\": \"string\",\r\n      \"BuildingName\": \"string\",\r\n      \"Floor\": \"string\",\r\n      \"UnitNumber\": \"string\",\r\n      \"Room\": \"string\",\r\n      \"PostBox\": \"string\",\r\n      \"TownLocationName\": \"string\",\r\n      \"DistrictName\": \"string\",\r\n      \"CareOf\": \"string\",\r\n      \"PostCode\": \"string\",\r\n      \"TownName\": \"string\",\r\n      \"CountrySubDivision\": \"string\",\r\n      \"Country\": \"AF\",\r\n      \"AddressLine\": [\r\n        \"string\"\r\n      ]\r\n    }\r\n  }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-vrp-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-vrp-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "3003: O3 Call headless-heimdall auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"consent-id-from-hh\", jsonData.interaction.params.claims.id_token.openbanking_intent_id.value);\r",
													"postman.setEnvironmentVariable(\"interaction-id\", jsonData.interaction.interactionId);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDgyMS44OSwiaWF0IjoxNjA5MTIwODExLjg5LCJuYmYiOjE2MDkxMjA4MTEuODksImp0aSI6IjdhNzVlYmU4LTMxZjktNDU2Yy1iNWU1LTlmOTJkMmMzOTkxOCJ9.O1rBKF87h7LqHgC5sd4pHuVPuKn2CP-feD7xZ1wCT77dfLU8HDDug3zcZdbcMOKH7cnb59MWKTgCcd3aGHfUsfVdT2cE2LrU_pPG7IW1km2Qri89M65241iUR8Ra_By3lULV4AwVywMH7dgjFCWFLWTbQW9idcImt0h9MaSTQyjErPO9Mkp64XqIvIz6lYOhWe6wwZpB5b2S6F6ysDfXkQbkEccKuDNgQAB0_Eh_I_4E9JZU6j_NyxDg6mlT2y1nozX_3-5dGKhgdU4IleqRK8qASosSSSAvjqfeE-3vkbahAcrdM6E8oQaoz2m6hMr5TRpuBF6LRJjqpu2G-KPU7w",
												"disabled": true
											},
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{authCodeUrl}}",
											"host": [
												"{{authCodeUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "3005: O3 Retrieve a consent by its id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB"
											},
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{cs}}/v2024.31/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2024.31",
												"consents",
												"{{consent-id-from-hh}}"
											],
											"query": [
												{
													"key": "authorization",
													"value": "foo",
													"disabled": true
												},
												{
													"key": "x-cert-dn",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4003: O3: Patch the consent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											},
											{
												"key": "content-type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"psuIdentifiers\": {\r\n        \"userId\": \"{{userId}}\"\r\n    },\r\n\r\n    \"accountIds\": {{accountIds}},\r\n    \"consentBody.Data.Status\": \"AUTH\"\r\n}"
										},
										"url": {
											"raw": "{{cs}}/v2024.31/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2024.31",
												"consents",
												"{{consent-id-from-hh}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "4005: O3: Confirm with Heimdall",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authorizationCode\", responseBody);\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "heimdall.suppressRefreshToken",
													"value": "false",
													"type": "text"
												},
												{
													"key": "heimdall.accessTokenValidity",
													"value": "3600",
													"type": "text",
													"disabled": true
												},
												{
													"key": "heimdall.refreshTokenValidity",
													"value": "7200",
													"type": "text",
													"disabled": true
												},
												{
													"key": "openbanking_intent_id",
													"value": "{{consent-id-from-hh}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{authEndpoint}}/{{interaction-id}}/doConfirm",
											"host": [
												"{{authEndpoint}}"
											],
											"path": [
												"{{interaction-id}}",
												"doConfirm"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments",
													"type": "text"
												},
												{
													"key": "code",
													"value": "{{authorizationCode}}",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 5: GET domestic-vrps-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-vrp-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-vrp-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: POST domestic-vrp-consents/{ConsentId}/funds-confirmation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"intent-id\"),",
													"        \"Reference\": \"myReference\",",
													"        \"InstructedAmount\": {",
													"            \"Amount\": \"10.00\",",
													"            \"Currency\": \"GBP\"",
													"        }",
													"    }",
													"}",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"// var options = {",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{intent-id}}\",\n        \"Reference\": \"myReference\",\n        \"InstructedAmount\": {\n            \"Amount\": \"10.00\",\n            \"Currency\": \"GBP\"\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-vrp-consents/{{intent-id}}/funds-confirmation",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-vrp-consents",
												"{{intent-id}}",
												"funds-confirmation"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: POST domestic-vrps",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.DomesticVRPId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'domestic-payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\")),",
													"        \"PSUAuthenticationMethod\": \"UK.OBIE.SCA\",",
													"        \"VRPType\": \"UK.OBIE.VRPType.Sweeping\",",
													"        \"Instruction\": {",
													"            \"InstructionIdentification\": \"123\",",
													"            \"EndToEndIdentification\": \"123\",",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"SortCodeAccountNumber\",",
													"                \"Identification\": \"30949330000010\",",
													"                \"SecondaryIdentification\": \"Roll 90210\",",
													"                \"Name\": \"Marcus Sweepimus\"",
													"            },",
													"            \"InstructedAmount\": {",
													"                \"Amount\": \"10.00\",",
													"                \"Currency\": \"GBP\"",
													"            }",
													"        }",
													"    },",
													"    \"Risk\": {",
													"    }",
													"}",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"// var options = {",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.ws",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}},\n        \"PSUAuthenticationMethod\": \"UK.OBIE.SCA\",\n        \"VRPType\": \"UK.OBIE.VRPType.Sweeping\",\n        \"Instruction\": {\n            \"InstructionIdentification\": \"123\",\n            \"EndToEndIdentification\": \"123\",\n            \"CreditorAccount\": {\n                \"SchemeName\": \"SortCodeAccountNumber\",\n                \"Identification\": \"30949330000010\",\n                \"SecondaryIdentification\": \"Roll 90210\",\n                \"Name\": \"Marcus Sweepimus\"\n            },\n            \"InstructedAmount\": {\n                \"Amount\": \"05\",\n                \"Currency\": \"GBP\"\n            }\n        }\n    },\n\"Risk\": {\n    \"PaymentContextCode\": \"BillingGoodsAndServicesInAdvance\",\n    \"MerchantCategoryCode\": \"stri\",\n    \"MerchantCustomerIdentification\": \"string\",\n    \"ContractPresentIndicator\": true,\n    \"BeneficiaryPrepopulatedIndicator\": true,\n    \"PaymentPurposeCode\": \"BKDF\",\n    \"CategoryPurposeCode\": \"BONU\",\n    \"BeneficiaryAccountType\": \"Business\",\n    \"DeliveryAddress\": {\n      \"AddressType\": \"BIZZ\",\n      \"Department\": \"string\",\n      \"SubDepartment\": \"string\",\n      \"StreetName\": \"string\",\n      \"BuildingNumber\": \"string\",\n      \"BuildingName\": \"string\",\n      \"Floor\": \"string\",\n      \"UnitNumber\": \"string\",\n      \"Room\": \"string\",\n      \"PostBox\": \"string\",\n      \"TownLocationName\": \"string\",\n      \"DistrictName\": \"string\",\n      \"CareOf\": \"string\",\n      \"PostCode\": \"string\",\n      \"TownName\": \"string\",\n      \"CountrySubDivision\": \"string\",\n      \"Country\": \"AF\",\n      \"AddressLine\": [\n        \"string\"\n      ]\n    }\n  }\n\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-vrps",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-vrps"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: GET domestic-vrps/{DomesticVRPId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-vrps/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-vrps",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 9: GET domestic-vrps/{DomesticVRPId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-vrps/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-vrps",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 10: DELETE domestic-vrps-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-vrp-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-vrp-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "VRP Flow - Variable Recurring Payments UI",
							"item": [
								{
									"name": "Step 1: POST Client Credentials Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST variable-recurring-payment-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
													"postman.setEnvironmentVariable(\"PSUAuthenticationMethod\", JSON.stringify(jsonData.Data.ControlParameters.PSUAuthenticationMethods));",
													"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ReadRefundAccount\": \"Yes\",",
													"        \"ControlParameters\": {",
													"            \"PSUAuthenticationMethods\": [\"UK.OBIE.SCA\"],",
													"            \"VRPType\": [\"UK.OBIE.VRPType.Sweeping\"],",
													"            \"ValidFromDateTime\": \"2017-06-05T15:15:13+00:00\",",
													"            \"ValidToDateTime\": \"2025-06-05T15:15:13+00:00\",",
													"            \"MaximumIndividualAmount\": {",
													"                \"Amount\": \"100.00\",",
													"                \"Currency\": \"GBP\"",
													"            },",
													"            \"PeriodicLimits\": [",
													"                {",
													"                    \"Amount\": \"200.00\",",
													"                    \"Currency\": \"GBP\",",
													"                    \"PeriodAlignment\": \"Consent\",",
													"                    \"PeriodType\": \"Week\"",
													"                }",
													"            ]",
													"        },",
													"        \"Initiation\": {",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"SortCodeAccountNumber\",",
													"                \"Identification\": \"01000160000001\",",
													"                \"SecondaryIdentification\": \"Roll 90210\",",
													"                \"Name\": \"Marcus Sweepimus\"",
													"            },",
													"            \"DebtorAccount\": {",
													"                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",",
													"                \"Identification\": \"10000109010102\",",
													"                \"Name\": pm.environment.get(\"randomCompanyName\")",
													"            },",
													"            \"RemittanceInformation\": {",
													"                \"Reference\": \"Sweepco\"",
													"            }",
													"        }",
													"    },",
													"    \"Risk\": {}",
													"}",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"// var options = {",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCO.21302.GFX.ws",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"ReadRefundAccount\": \"Yes\",\r\n        \"ControlParameters\": {\r\n            \"ValidFromDateTime\": \"2024-06-17T11:10:53.109Z\",\r\n            \"ValidToDateTime\": \"2025-08-17T11:10:53.109Z\",\r\n            \"MaximumIndividualAmount\": {\r\n                \"Amount\": \"05\",\r\n                \"Currency\": \"GBP\"\r\n            },\r\n            \"PeriodicLimits\": [\r\n                {\r\n                    \"PeriodType\": \"Day\",\r\n                    \"PeriodAlignment\": \"Consent\",\r\n                    \"Amount\": \"497.93\",\r\n                    \"Currency\": \"GBP\"\r\n                }\r\n            ],\r\n            \"VRPType\": [\r\n                \"UK.OBIE.VRPType.Sweeping\"\r\n            ],\r\n            \"PSUAuthenticationMethods\": [\r\n                \"UK.OBIE.SCA\"\r\n            ],\r\n            \"PSUInteractionTypes\": [\r\n                \"UK.OB.InSession\"\r\n            ],\r\n            \"SupplementaryData\": {}\r\n        },\r\n        \"Initiation\": {\r\n            //   \"DebtorAccount\": {\r\n            //     \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\r\n            //             \"Identification\": \"10000109010102\",\r\n            //     \"Name\": \"string\",\r\n            //     \"SecondaryIdentification\": \"string\",\r\n            //     \"Proxy\": {\r\n            //       \"Identification\": \"string\",\r\n            //       \"Code\": \"TELE\",\r\n            //       \"Type\": \"string\"\r\n            //     }\r\n            //   },\r\n            \"CreditorAccount\": {\r\n                \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\r\n                \"Identification\": \"10000109010102\",\r\n                \"Name\": \"string\",\r\n                \"SecondaryIdentification\": \"string\",\r\n                \"Proxy\": {\r\n                    \"Identification\": \"string\",\r\n                    \"Code\": \"TELE\",\r\n                    \"Type\": \"string\"\r\n                }\r\n            },\r\n            \"CreditorPostalAddress\": {\r\n                \"AddressType\": \"BIZZ\",\r\n                \"Department\": \"string\",\r\n                \"SubDepartment\": \"string\",\r\n                \"StreetName\": \"string\",\r\n                \"BuildingNumber\": \"string\",\r\n                \"BuildingName\": \"string\",\r\n                \"Floor\": \"string\",\r\n                \"UnitNumber\": \"string\",\r\n                \"Room\": \"string\",\r\n                \"PostBox\": \"string\",\r\n                \"TownLocationName\": \"string\",\r\n                \"DistrictName\": \"string\",\r\n                \"CareOf\": \"string\",\r\n                \"PostCode\": \"string\",\r\n                \"TownName\": \"string\",\r\n                \"CountrySubDivision\": \"string\",\r\n                \"Country\": \"DF\",\r\n                \"AddressLine\": [\r\n                    \"string\"\r\n                ]\r\n            },\r\n            \"UltimateCreditor\": {\r\n                \"Name\": \"string\",\r\n                \"Identification\": \"string\",\r\n                \"LEI\": \"string\",\r\n                \"SchemeName\": \"string\",\r\n                \"PostalAddress\": {\r\n                    \"AddressType\": \"BIZZ\",\r\n                    \"Department\": \"string\",\r\n                    \"SubDepartment\": \"string\",\r\n                    \"StreetName\": \"string\",\r\n                    \"BuildingNumber\": \"string\",\r\n                    \"BuildingName\": \"string\",\r\n                    \"Floor\": \"string\",\r\n                    \"UnitNumber\": \"string\",\r\n                    \"Room\": \"string\",\r\n                    \"PostBox\": \"string\",\r\n                    \"TownLocationName\": \"string\",\r\n                    \"DistrictName\": \"string\",\r\n                    \"CareOf\": \"string\",\r\n                    \"PostCode\": \"string\",\r\n                    \"TownName\": \"string\",\r\n                    \"CountrySubDivision\": \"string\",\r\n                    \"Country\": \"FT\",\r\n                    \"AddressLine\": [\r\n                        \"string\"\r\n                    ]\r\n                }\r\n            },\r\n            \"UltimateDebtor\": {\r\n                \"Name\": \"string\",\r\n                \"Identification\": \"string\",\r\n                \"LEI\": \"string\",\r\n                \"SchemeName\": \"string\",\r\n                \"PostalAddress\": {\r\n                    \"AddressType\": \"BIZZ\",\r\n                    \"Department\": \"string\",\r\n                    \"SubDepartment\": \"string\",\r\n                    \"StreetName\": \"string\",\r\n                    \"BuildingNumber\": \"string\",\r\n                    \"BuildingName\": \"string\",\r\n                    \"Floor\": \"string\",\r\n                    \"UnitNumber\": \"string\",\r\n                    \"Room\": \"string\",\r\n                    \"PostBox\": \"string\",\r\n                    \"TownLocationName\": \"string\",\r\n                    \"DistrictName\": \"string\",\r\n                    \"CareOf\": \"string\",\r\n                    \"PostCode\": \"string\",\r\n                    \"TownName\": \"string\",\r\n                    \"CountrySubDivision\": \"string\",\r\n                    \"Country\": \"PV\",\r\n                    \"AddressLine\": [\r\n                        \"string\"\r\n                    ]\r\n                }\r\n            },\r\n            \"RemittanceInformation\": {\r\n                \"Structured\": [\r\n                    {\r\n                        \"ReferredDocumentInformation\": [\r\n                            {\r\n                                \"Code\": \"CINV\",\r\n                                \"Issuer\": \"string\",\r\n                                \"Number\": \"string\",\r\n                                \"RelatedDate\": \"2024-06-17T11:10:53.109Z\",\r\n                                \"LineDetails\": [\r\n                                    \"string\"\r\n                                ]\r\n                            }\r\n                        ],\r\n                        \"ReferredDocumentAmount\": 0,\r\n                        \"CreditorReferenceInformation\": {\r\n                            \"Code\": \"DISP\",\r\n                            \"Issuer\": \"string\",\r\n                            \"Reference\": \"string\"\r\n                        },\r\n                        \"Invoicer\": \"string\",\r\n                        \"Invoicee\": \"string\",\r\n                        \"TaxRemittance\": \"string\",\r\n                        \"AdditionalRemittanceInformation\": [\r\n                            \"string\"\r\n                        ]\r\n                    }\r\n                ],\r\n                \"Unstructured\": [\r\n                    \"string\"\r\n                ]\r\n            },\r\n            \"RegulatoryReporting\": [\r\n                {\r\n                    \"DebitCreditReportingIndicator\": \"CRED\",\r\n                    \"Authority\": {\r\n                        \"Name\": \"string\",\r\n                        \"Country\": \"NO\"\r\n                    },\r\n                    \"Details\": [\r\n                        {\r\n                            \"Type\": \"string\",\r\n                            \"Date\": \"2024-06-17T11:10:53.109Z\",\r\n                            \"Country\": \"HF\",\r\n                            \"Amount\": {\r\n                                \"Amount\": \"370719236\",\r\n                                \"Currency\": \"GBP\"\r\n                            },\r\n                            \"Information\": [\r\n                                \"string\"\r\n                            ]\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    \"Risk\": {\r\n        \"PaymentContextCode\": \"BillingGoodsAndServicesInAdvance\",\r\n        \"MerchantCategoryCode\": \"stri\",\r\n        \"MerchantCustomerIdentification\": \"string\",\r\n        \"ContractPresentIndicator\": true,\r\n        \"BeneficiaryPrepopulatedIndicator\": true,\r\n        \"PaymentPurposeCode\": \"BKDF\",\r\n        \"CategoryPurposeCode\": \"BONU\",\r\n        \"BeneficiaryAccountType\": \"Business\",\r\n        \"DeliveryAddress\": {\r\n            \"AddressType\": \"BIZZ\",\r\n            \"Department\": \"string\",\r\n            \"SubDepartment\": \"string\",\r\n            \"StreetName\": \"string\",\r\n            \"BuildingNumber\": \"string\",\r\n            \"BuildingName\": \"string\",\r\n            \"Floor\": \"string\",\r\n            \"UnitNumber\": \"string\",\r\n            \"Room\": \"string\",\r\n            \"PostBox\": \"string\",\r\n            \"TownLocationName\": \"string\",\r\n            \"DistrictName\": \"string\",\r\n            \"CareOf\": \"string\",\r\n            \"PostCode\": \"string\",\r\n            \"TownName\": \"string\",\r\n            \"CountrySubDivision\": \"string\",\r\n            \"Country\": \"AF\",\r\n            \"AddressLine\": [\r\n                \"string\"\r\n            ]\r\n        }\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-vrp-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-vrp-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (payments scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "payments",
													"type": "text"
												},
												{
													"key": "code",
													"value": "265284a3-7980-4c0f-a595-f4a4e973a198",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 5: GET domestic-vrps-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-vrp-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-vrp-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: POST domestic-vrp-consents/{ConsentId}/funds-confirmation",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"intent-id\"),",
													"        \"Reference\": \"myReference\",",
													"        \"InstructedAmount\": {",
													"            \"Amount\": \"10.00\",",
													"            \"Currency\": \"GBP\"",
													"        }",
													"    }",
													"}",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"// var options = {",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{intent-id}}\",\n        \"Reference\": \"myReference\",\n        \"InstructedAmount\": {\n            \"Amount\": \"10.00\",\n            \"Currency\": \"GBP\"\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-vrp-consents/{{intent-id}}/funds-confirmation",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-vrp-consents",
												"{{intent-id}}",
												"funds-confirmation"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: POST domestic-vrps",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.DomesticVRPId);",
													"postman.setEnvironmentVariable(\"payment-type\", 'domestic-payments');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// set uuid and time",
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													"const data1 = {",
													"    \"Data\": {",
													"        \"ConsentId\": pm.environment.get(\"payment-consent-id\"),",
													"        \"Initiation\": JSON.parse(pm.environment.get(\"Initiation\")),",
													"        \"PSUAuthenticationMethod\": \"UK.OBIE.SCA\",",
													"        \"VRPType\": \"UK.OBIE.VRPType.Sweeping\",",
													"        \"Instruction\": {",
													"            \"InstructionIdentification\": \"123\",",
													"            \"EndToEndIdentification\": \"123\",",
													"            \"CreditorAccount\": {",
													"                \"SchemeName\": \"SortCodeAccountNumber\",",
													"                \"Identification\": \"30949330000010\",",
													"                \"SecondaryIdentification\": \"Roll 90210\",",
													"                \"Name\": \"Marcus Sweepimus\"",
													"            },",
													"            \"InstructedAmount\": {",
													"                \"Amount\": \"10.00\",",
													"                \"Currency\": \"GBP\"",
													"            }",
													"        }",
													"    },",
													"    \"Risk\": {",
													"    }",
													"}",
													"// const mesgSigning = JSON.parse(pm.environment.get(\"msgSign\"));",
													"// var options = {",
													"//     method: 'POST',",
													"//     url: pm.environment.get('rs') + '/o3/v1.0/message-signature-detached',",
													"//     header: mesgSigning.header,",
													"//     body: {",
													"//         mode: \"raw\",",
													"//         raw: data1",
													"//     }",
													"// };",
													"// pm.sendRequest(",
													"//     options,",
													"//     function (err, response) {",
													"//         if (response.code !== 200) {",
													"//             throw new Error('Could not generate message signature');",
													"//         }",
													"//         const signature = response.stream.toString('utf8');",
													"//         pm.environment.set(\"signature\", signature);",
													"//     }",
													"// )"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-payments}}"
											},
											{
												"key": "x-jws-signature",
												"value": "{{signature}}",
												"disabled": true
											},
											{
												"key": "x-idempotency-key",
												"value": "FRESCOX.hfv",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\": {{Initiation}},\n        \"PSUAuthenticationMethod\": \"UK.OBIE.SCA\",\n        \"VRPType\": \"UK.OBIE.VRPType.Sweeping\",\n        \"Instruction\": {\n            \"InstructionIdentification\": \"123\",\n            \"EndToEndIdentification\": \"123\",\n            \"CreditorAccount\": {\n                \"SchemeName\": \"SortCodeAccountNumber\",\n                \"Identification\": \"30949330000010\",\n                \"SecondaryIdentification\": \"Roll 90210\",\n                \"Name\": \"Marcus Sweepimus\"\n            },\n            \"InstructedAmount\": {\n                \"Amount\": \"05\",\n                \"Currency\": \"GBP\"\n            }\n        }\n    },\n\"Risk\": {\n    \"PaymentContextCode\": \"BillingGoodsAndServicesInAdvance\",\n    \"MerchantCategoryCode\": \"stri\",\n    \"MerchantCustomerIdentification\": \"string\",\n    \"ContractPresentIndicator\": true,\n    \"BeneficiaryPrepopulatedIndicator\": true,\n    \"PaymentPurposeCode\": \"BKDF\",\n    \"CategoryPurposeCode\": \"BONU\",\n    \"BeneficiaryAccountType\": \"Business\",\n    \"DeliveryAddress\": {\n      \"AddressType\": \"BIZZ\",\n      \"Department\": \"string\",\n      \"SubDepartment\": \"string\",\n      \"StreetName\": \"string\",\n      \"BuildingNumber\": \"string\",\n      \"BuildingName\": \"string\",\n      \"Floor\": \"string\",\n      \"UnitNumber\": \"string\",\n      \"Room\": \"string\",\n      \"PostBox\": \"string\",\n      \"TownLocationName\": \"string\",\n      \"DistrictName\": \"string\",\n      \"CareOf\": \"string\",\n      \"PostCode\": \"string\",\n      \"TownName\": \"string\",\n      \"CountrySubDivision\": \"string\",\n      \"Country\": \"AF\",\n      \"AddressLine\": [\n        \"string\"\n      ]\n    }\n  }\n\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-vrps",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-vrps"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 8: GET domestic-vrps/{DomesticVRPId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-vrps/{{payment-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-vrps",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 9: GET domestic-vrps/{DomesticVRPId}/payment-details",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-vrps/{{payment-id}}/payment-details",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-vrps",
												"{{payment-id}}",
												"payment-details"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 10: DELETE domestic-vrps-consents/{ConsentId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-payments}}"
											}
										],
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/pisp/domestic-vrp-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"pisp",
												"domestic-vrp-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "CBPII - Fund confirmation Headless",
							"item": [
								{
									"name": "Step 1: POST Client Credentials Grant (fundsconfirmations scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-fundsconfirmations\", jsonData.access_token);",
													"postman.clearEnvironmentVariable(\"cm\");",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											},
											{
												"key": "x-cert-fingerprint",
												"value": "foo",
												"disabled": true
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "fundsconfirmations openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST funds-confirmation-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"funds-confirmation-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"request-scope\", 'fundsconfirmations');",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid'); ",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-fundsconfirmations}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"ExpirationDateTime\": \"2025-05-02T00:00:00+00:00\",\r\n        \"DebtorAccount\": {\r\n            \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\r\n            \"Identification\": \"10000109010102\",\r\n            \"Name\": \"Mitsuhirato\",\r\n            \"SecondaryIdentification\": \"string\",\r\n            \"Proxy\": {\r\n                \"Identification\": \"string\",\r\n                \"Code\": \"TELE\",\r\n                \"Type\": \"string\"\r\n            }\r\n        }\r\n    }\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/cbpii/funds-confirmation-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"cbpii",
												"funds-confirmation-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "3003: O3 Call headless-heimdall auth",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"consent-id-from-hh\", jsonData.interaction.params.claims.id_token.openbanking_intent_id.value);\r",
													"postman.setEnvironmentVariable(\"interaction-id\", jsonData.interaction.interactionId);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDgyMS44OSwiaWF0IjoxNjA5MTIwODExLjg5LCJuYmYiOjE2MDkxMjA4MTEuODksImp0aSI6IjdhNzVlYmU4LTMxZjktNDU2Yy1iNWU1LTlmOTJkMmMzOTkxOCJ9.O1rBKF87h7LqHgC5sd4pHuVPuKn2CP-feD7xZ1wCT77dfLU8HDDug3zcZdbcMOKH7cnb59MWKTgCcd3aGHfUsfVdT2cE2LrU_pPG7IW1km2Qri89M65241iUR8Ra_By3lULV4AwVywMH7dgjFCWFLWTbQW9idcImt0h9MaSTQyjErPO9Mkp64XqIvIz6lYOhWe6wwZpB5b2S6F6ysDfXkQbkEccKuDNgQAB0_Eh_I_4E9JZU6j_NyxDg6mlT2y1nozX_3-5dGKhgdU4IleqRK8qASosSSSAvjqfeE-3vkbahAcrdM6E8oQaoz2m6hMr5TRpuBF6LRJjqpu2G-KPU7w",
												"disabled": true
											},
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{authCodeUrl}}",
											"host": [
												"{{authCodeUrl}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "3005: O3 Retrieve a consent by its id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "x-cert-dn",
												"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB"
											},
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											}
										],
										"url": {
											"raw": "{{cs}}/v2024.31/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2024.31",
												"consents",
												"{{consent-id-from-hh}}"
											],
											"query": [
												{
													"key": "authorization",
													"value": "foo",
													"disabled": true
												},
												{
													"key": "x-cert-dn",
													"value": "",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "4003: O3: Patch the consent",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
												"disabled": true
											},
											{
												"key": "content-type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"psuIdentifiers\": {\r\n        \"userId\": \"{{userId}}\"\r\n    },\r\n\r\n    \"accountIds\": [{{accountIdsPayment}}],\r\n    \"consentBody.Data.Status\": \"AUTH\"\r\n}"
										},
										"url": {
											"raw": "{{cs}}/v2024.31/consents/{{consent-id-from-hh}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2024.31",
												"consents",
												"{{consent-id-from-hh}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "4005: O3: Confirm with Heimdall",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authorizationCode\", responseBody);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "heimdall.suppressRefreshToken",
													"value": "false",
													"type": "text"
												},
												{
													"key": "heimdall.accessTokenValidity",
													"value": "3600",
													"type": "text",
													"disabled": true
												},
												{
													"key": "heimdall.refreshTokenValidity",
													"value": "7200",
													"type": "text",
													"disabled": true
												},
												{
													"key": "openbanking_intent_id",
													"value": "{{consent-id-from-hh}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{authEndpoint}}/{{interaction-id}}/doConfirm",
											"host": [
												"{{authEndpoint}}"
											],
											"path": [
												"{{interaction-id}}",
												"doConfirm"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (accounts scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-fundsconfirmations\", jsonData.access_token);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "fundsconfirmations",
													"type": "text"
												},
												{
													"key": "code",
													"value": "{{authorizationCode}}",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										},
										"description": "Copy the authorization code generated into the browser into the **Body** tab in the `code` parameter"
									},
									"response": []
								},
								{
									"name": "Step 5: GET funds-confirmation-consents/{consentsId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"",
													"",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true,
										"followOriginalHttpMethod": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-fundsconfirmations}}"
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "Mon, 19 Oct 2018 08:51:49 GMT",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/cbpii/funds-confirmation-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"cbpii",
												"funds-confirmation-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: POST funds-confirmations",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-fundsconfirmations}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{funds-confirmation-consent-id}}\",\n        \"Reference\": \"xxxxx\",\n        \"InstructedAmount\": {\n            \"Amount\": \"1927.00\",\n            \"Currency\": \"GBP\"\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/cbpii/funds-confirmations",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"cbpii",
												"funds-confirmations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: DELETE funds-confirmation-consents/{consentsId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-fundsconfirmations}}"
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "Mon, 19 Oct 2018 08:51:49 GMT",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/cbpii/funds-confirmation-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"cbpii",
												"funds-confirmation-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "CBPII Flow - Fund confirmation UI",
							"item": [
								{
									"name": "Step 1: POST Client Credentials Grant (fundsconfirmations scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-fundsconfirmations\", jsonData.access_token);",
													"postman.clearEnvironmentVariable(\"cm\");    ",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											},
											{
												"key": "x-cert-fingerprint",
												"value": "foo",
												"disabled": true
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "client_credentials",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "fundsconfirmations openid",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 2: POST funds-confirmation-consents",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"funds-confirmation-consent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
													"postman.setEnvironmentVariable(\"request-scope\", 'fundsconfirmations');",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-fundsconfirmations}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"Data\": {\r\n        \"ExpirationDateTime\": \"2025-05-02T00:00:00+00:00\",\r\n        \"DebtorAccount\": {\r\n            \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\r\n            \"Identification\": \"10000109010102\",\r\n            \"Name\": \"Mitsuhirato\",\r\n            \"SecondaryIdentification\": \"string\",\r\n            \"Proxy\": {\r\n                \"Identification\": \"string\",\r\n                \"Code\": \"TELE\",\r\n                \"Type\": \"string\"\r\n            }\r\n        }\r\n    }\r\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/cbpii/funds-confirmation-consents",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"cbpii",
												"funds-confirmation-consents"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 3: GET auth-code-url",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"url": {
											"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
											"host": [
												"{{rs}}"
											],
											"path": [
												"o3",
												"v1.0",
												"auth-code-url",
												"{{intent-id}}"
											],
											"query": [
												{
													"key": "scope",
													"value": "{{request-scope}}"
												},
												{
													"key": "alg",
													"value": "none"
												}
											]
										},
										"description": "Execute this request and then copy the URL into a browser."
									},
									"response": []
								},
								{
									"name": "Step 4: POST Auth Code Grant (accounts scope)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"let jsonData = JSON.parse(responseBody);",
													"postman.setEnvironmentVariable(\"token-from-auth-code-grant-fundsconfirmations\", jsonData.access_token);",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "Basic {{basicToken}}"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "grant_type",
													"value": "authorization_code",
													"type": "text"
												},
												{
													"key": "scope",
													"value": "fundsconfirmations",
													"type": "text"
												},
												{
													"key": "code",
													"value": "4cdeaaaa-175a-490a-8452-ce57ce3ef346",
													"type": "text"
												},
												{
													"key": "redirect_uri",
													"value": "{{redirectUrl}}",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{tokenEndpoint}}",
											"host": [
												"{{tokenEndpoint}}"
											]
										},
										"description": "Copy the authorization code generated into the browser into the **Body** tab in the `code` parameter"
									},
									"response": []
								},
								{
									"name": "Step 5: GET funds-confirmation-consents/{consentsId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true,
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-fundsconfirmations}}"
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "Mon, 19 Oct 2018 08:51:49 GMT",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/cbpii/funds-confirmation-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"cbpii",
												"funds-confirmation-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 6: POST funds-confirmations",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-customer-last-logged-time",
												"value": "{{now}}",
												"disabled": true
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "10.1.1.10"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{$guid}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-auth-code-grant-fundsconfirmations}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{funds-confirmation-consent-id}}\",\n        \"Reference\": \"xxxxx\",\n        \"InstructedAmount\": {\n            \"Amount\": \"1927.00\",\n            \"Currency\": \"GBP\"\n        }\n    }\n}"
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/cbpii/funds-confirmations",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"cbpii",
												"funds-confirmations"
											]
										}
									},
									"response": []
								},
								{
									"name": "Step 7: DELETE funds-confirmation-consents/{consentsId}",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"const uuid = require('uuid');",
													"pm.environment.set(\"interactionId\", uuid.v4());"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"followOriginalHttpMethod": false
									},
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "addTokenTo",
													"value": "header",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "x-fapi-financial-id",
												"value": "{{obParticipantId}}"
											},
											{
												"key": "x-fapi-interaction-id",
												"value": "{{interactionId}}"
											},
											{
												"key": "Authorization",
												"value": "Bearer {{token-from-client-credentials-grant-fundsconfirmations}}"
											},
											{
												"key": "x-fapi-customer-ip-address",
												"value": "Mon, 19 Oct 2018 08:51:49 GMT",
												"disabled": true
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{rs}}/open-banking/v4.0/cbpii/funds-confirmation-consents/{{intent-id}}",
											"host": [
												"{{rs}}"
											],
											"path": [
												"open-banking",
												"v4.0",
												"cbpii",
												"funds-confirmation-consents",
												"{{intent-id}}"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "ConsentManager v4.0",
							"item": [
								{
									"name": "PATCH payment log",
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"paymentResponse.status\": \"BLCK\",\n  \"paymentResponse.statusUpdateDateTime\": \"2024-07-01T12:40:56.306Z\",\n  \"paymentResponse.multiAuthorisation\":{\n    \"Status\": \"AwaitingFurtherAuthorisation\"\n\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{cs}}/v2024.31/payment-log/{{payment-id}}",
											"host": [
												"{{cs}}"
											],
											"path": [
												"v2024.31",
												"payment-log",
												"{{payment-id}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Local Dev Flows",
			"item": [
				{
					"name": "AIS Flow",
					"item": [
						{
							"name": "1000: TPP-ASPSP Client Credentials Grant (accounts scope)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									},
									{
										"key": "x-cert-fingerprint",
										"value": "foo",
										"disabled": true
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "payments openid",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{tokenEndpoint}}",
									"host": [
										"{{tokenEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 2: POST domestic-payment-consents",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
											"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
											"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
											"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// set uuid and time",
											"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
											"const uuid = require('uuid');",
											"pm.environment.set(\"interactionId\", uuid.v4());",
											"",
											"const mesgSigning = JSON.parse(pm.environment.get(\"mesgSigning\"));",
											"",
											"var interpolate = (str) => {",
											"  return str.replace(/{{([^}]+)}}/g, function (match, $1) {",
											"    return pm.variables.get($1);",
											"  });",
											"}",
											"",
											"var options = {",
											"  method: 'POST',",
											"  url: pm.environment.get('rs') + '/o3/v1.0/message-signature',",
											"  header: mesgSigning.header,",
											"  body: {",
											"    mode: 'raw',",
											"    raw: request.data",
											"  }",
											"};",
											"// pm.sendRequest(",
											"//   options,",
											"//   function (err, response) {",
											"//     if (response.code !== 200) {",
											"//       throw new Error('Could not generate message signature');",
											"//     }",
											"//     const signature = response.stream.toString('utf8');",
											"//     pm.request.headers.upsert({ key: 'x-jws-signature', value: signature })",
											"//   }",
											"// )",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-customer-last-logged-time",
										"value": "{{now}}",
										"disabled": true
									},
									{
										"key": "x-fapi-customer-ip-address",
										"value": "10.1.1.10"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-client-credentials-grant-payments}}"
									},
									{
										"key": "x-jws-signature",
										"value": "{{signature}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Data\": {\r\n\t    \"Initiation\": {\r\n\t      \"InstructionIdentification\": \"{{randomString-1}}2342\",\r\n\t      \"EndToEndIdentification\": \"{{randomString-2}}\",\r\n\t      \"InstructedAmount\": {\r\n\t        \"Amount\": \"{{randomPrice}}\",\r\n\t        \"Currency\": \"GBP\"\r\n\t      },\r\n\t      \"CreditorAccount\": {\r\n\t        \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\r\n\t        \"Identification\": \"{{randomBankAccount}}\",\r\n\t        \"Name\":\"{{randomCompanyName}}\"\r\n\t      },\r\n\t      \"RemittanceInformation\": {\r\n\t        \"Reference\": \"{{randomLoremWord}}8898\",\r\n\t        \"Unstructured\": \"{{randomCreditCardMask}} {{randomLoremWords}}\"\r\n\t      }\r\n\t    }\r\n    }, \r\n    \"Risk\": {}\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payment-consents",
									"host": [
										"{{rs}}"
									],
									"path": [
										"open-banking",
										"v3.1",
										"pisp",
										"domestic-payment-consents"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ozone Util: GET auth-code-url",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									}
								],
								"url": {
									"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
									"host": [
										"{{rs}}"
									],
									"path": [
										"o3",
										"v1.0",
										"auth-code-url",
										"{{intent-id}}"
									],
									"query": [
										{
											"key": "scope",
											"value": "{{request-scope}}"
										},
										{
											"key": "alg",
											"value": "none"
										}
									]
								},
								"description": "Execute this request and then copy the URL into a browser."
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Consent Manager",
			"item": [
				{
					"name": "AIS Flow",
					"item": [
						{
							"name": "1000: TPP-ASPSP Client Credentials Grant (accounts scope)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-accounts\", jsonData.access_token);",
											"postman.clearEnvironmentVariable(\"cm\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									},
									{
										"key": "x-cert-fingerprint",
										"value": "foo",
										"disabled": true
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "accounts openid",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{tokenEndpoint}}",
									"host": [
										"{{tokenEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "2000: POST Account Access Consents",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"account-access-consent-id\", jsonData.Data.ConsentId);",
											"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
											"postman.setEnvironmentVariable(\"request-scope\", 'accounts');",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{$guid}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-client-credentials-grant-accounts}}"
									},
									{
										"key": "x-fapi-customer-ip-address",
										"value": "Mon, 19 Oct 2018 08:51:49 GMT",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Data\": {\r\n        \"Permissions\": [\r\n            \"ReadAccountsBasic\",\r\n            \"ReadAccountsDetail\",\r\n            \"ReadBalances\",\r\n\t\t\t\"ReadBeneficiariesBasic\",\r\n\t\t\t\"ReadBeneficiariesDetail\",\r\n            \"ReadDirectDebits\",\r\n            \"ReadTransactionsBasic\",\r\n            \"ReadTransactionsCredits\",\r\n            \"ReadTransactionsDebits\",\r\n            \"ReadTransactionsDetail\",\r\n            \"ReadProducts\",\r\n            \"ReadStandingOrdersDetail\",\r\n            \"ReadProducts\",\r\n            \"ReadStandingOrdersDetail\"],\r\n        \"TransactionFromDateTime\": \"2016-01-01T10:40:00+02:00\",\r\n        \"TransactionToDateTime\": \"2025-12-31T10:40:00+02:00\"\r\n    }, \r\n    \"Risk\": {}\r\n}\r\n"
								},
								"url": {
									"raw": "{{rs}}/open-banking/v3.1/aisp/account-access-consents",
									"host": [
										"{{rs}}"
									],
									"path": [
										"open-banking",
										"v3.1",
										"aisp",
										"account-access-consents"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ozone Util: GET auth-code-url",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									}
								],
								"url": {
									"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none&login_hint=foo",
									"host": [
										"{{rs}}"
									],
									"path": [
										"o3",
										"v1.0",
										"auth-code-url",
										"{{intent-id}}"
									],
									"query": [
										{
											"key": "scope",
											"value": "{{request-scope}}"
										},
										{
											"key": "alg",
											"value": "none"
										},
										{
											"key": "login_hint",
											"value": "foo"
										}
									]
								},
								"description": "Execute this request and then copy the URL into a browser."
							},
							"response": []
						},
						{
							"name": "3003: ASPSP-OZONE Call headless-heimdall auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"consent-id-from-hh\", jsonData.interaction.params.claims.id_token.openbanking_intent_id.value);\r",
											"postman.setEnvironmentVariable(\"interaction-id\", jsonData.interaction.interactionId);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDgyMS44OSwiaWF0IjoxNjA5MTIwODExLjg5LCJuYmYiOjE2MDkxMjA4MTEuODksImp0aSI6IjdhNzVlYmU4LTMxZjktNDU2Yy1iNWU1LTlmOTJkMmMzOTkxOCJ9.O1rBKF87h7LqHgC5sd4pHuVPuKn2CP-feD7xZ1wCT77dfLU8HDDug3zcZdbcMOKH7cnb59MWKTgCcd3aGHfUsfVdT2cE2LrU_pPG7IW1km2Qri89M65241iUR8Ra_By3lULV4AwVywMH7dgjFCWFLWTbQW9idcImt0h9MaSTQyjErPO9Mkp64XqIvIz6lYOhWe6wwZpB5b2S6F6ysDfXkQbkEccKuDNgQAB0_Eh_I_4E9JZU6j_NyxDg6mlT2y1nozX_3-5dGKhgdU4IleqRK8qASosSSSAvjqfeE-3vkbahAcrdM6E8oQaoz2m6hMr5TRpuBF6LRJjqpu2G-KPU7w",
										"disabled": true
									},
									{
										"key": "x-cert-dn",
										"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{authCodeUrl}}",
									"host": [
										"{{authCodeUrl}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "3005: ASPSP - Ozone Retrieve a consent by its id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-cert-dn",
										"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{cs}}/v2.2/consents/{{consent-id-from-hh}}",
									"host": [
										"{{cs}}"
									],
									"path": [
										"v2.2",
										"consents",
										"{{consent-id-from-hh}}"
									],
									"query": [
										{
											"key": "authorization",
											"value": "foo",
											"disabled": true
										},
										{
											"key": "x-cert-dn",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Indicates a failure to create the consent\n",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/consents/:consentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consents",
												":consentId"
											],
											"variable": [
												{
													"key": "consentId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errorCode\": \"in veniam\",\n \"errorMessage\": \"minim est\"\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/consents/:consentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consents",
												":consentId"
											],
											"variable": [
												{
													"key": "consentId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"Lorem labore enim ir\",\n \"consentType\": \"<string>\",\n \"request\": \"<object>\",\n \"requestHeaders\": \"<object>\",\n \"tpp\": {\n  \"clientId\": \"<string>\",\n  \"orgId\": \"<string>\",\n  \"softwareStatementId\": \"<string>\",\n  \"directoryRecord\": \"<object>\"\n },\n \"consentBody\": {\n  \"Data\": {\n   \"ConsentId\": \"nisi laborum dolor\",\n   \"CreationDateTime\": \"1967-04-17T11:00:27.222Z\",\n   \"Status\": \"Consumed\",\n   \"StatusUpdateDateTime\": \"1999-09-20T06:14:49.705Z\"\n  }\n },\n \"psuIdentifiers\": {\n  \"userId\": \"laboris sunt fugiat non\"\n },\n \"accountIds\": [\n  \"sed nostrud\"\n ]\n}"
								}
							]
						},
						{
							"name": "4003: ASPSP-Ozone: Patch the consent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
										"disabled": true
									},
									{
										"key": "content-type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"psuIdentifiers\": {\r\n        \"userId\": \"{{userId}}\"\r\n    },\r\n\r\n    \"accountIds\": {{accountIds}},\r\n    \"consentBody.Data.Status\": \"Authorised\"\r\n}"
								},
								"url": {
									"raw": "{{cs}}/v2.2/consents/{{consent-id-from-hh}}",
									"host": [
										"{{cs}}"
									],
									"path": [
										"v2.2",
										"consents",
										"{{consent-id-from-hh}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "4005: ASPSP-Ozone: Confirm with Heimdall",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"authorizationCode\", responseBody);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "heimdall.suppressRefreshToken",
											"value": "false",
											"type": "text"
										},
										{
											"key": "heimdall.accessTokenValidity",
											"value": "3600",
											"type": "text",
											"disabled": true
										},
										{
											"key": "heimdall.refreshTokenValidity",
											"value": "7200",
											"type": "text",
											"disabled": true
										},
										{
											"key": "openbanking_intent_id",
											"value": "{{consent-id-from-hh}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{authEndpoint}}/{{interaction-id}}/doConfirm",
									"host": [
										"{{authEndpoint}}"
									],
									"path": [
										"{{interaction-id}}",
										"doConfirm"
									]
								}
							},
							"response": []
						},
						{
							"name": "5003: TPP-OZONE Step 8: Auth Code Grant (accounts scope)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"token-from-auth-code-grant-accounts\", jsonData.access_token);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "payments ",
											"type": "text"
										},
										{
											"key": "code",
											"value": "{{authorizationCode}}",
											"type": "text"
										},
										{
											"key": "redirect_uri",
											"value": "{{redirectUrl}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{tokenEndpoint}}",
									"host": [
										"{{tokenEndpoint}}"
									]
								},
								"description": "Copy the authorization code generated into the browser into the **Body** tab in the `code` parameter"
							},
							"response": []
						},
						{
							"name": "6000: GET accounts",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid'); ",
											"",
											"pm.environment.set(\"interactionId\", uuid.v4());"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"account-id\", jsonData.Data.Account[0].AccountId);",
											"",
											"var active = 2;",
											"jsonData.Data.Account.forEach((val, index, arr)=>{",
											"    if(active === index){",
											"        postman.setEnvironmentVariable(`account-id-active`, val.AccountId)",
											"    }",
											"    ",
											"});",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-auth-code-grant-accounts}}"
									}
								],
								"url": {
									"raw": "{{rs}}/open-banking/v3.1/aisp/accounts",
									"host": [
										"{{rs}}"
									],
									"path": [
										"open-banking",
										"v3.1",
										"aisp",
										"accounts"
									]
								}
							},
							"response": []
						},
						{
							"name": "6001: GET account/{accountId}",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid'); ",
											"",
											"pm.environment.set(\"interactionId\", uuid.v4());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-auth-code-grant-accounts}}"
									}
								],
								"url": {
									"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}",
									"host": [
										"{{rs}}"
									],
									"path": [
										"open-banking",
										"v3.1",
										"aisp",
										"accounts",
										"{{account-id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "6002: GET balances",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid'); ",
											"",
											"pm.environment.set(\"interactionId\", uuid.v4());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-auth-code-grant-accounts}}"
									}
								],
								"url": {
									"raw": "{{rs}}/open-banking/v3.1/aisp/balances",
									"host": [
										"{{rs}}"
									],
									"path": [
										"open-banking",
										"v3.1",
										"aisp",
										"balances"
									]
								}
							},
							"response": []
						},
						{
							"name": "6003: GET balances/{accountid}",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid'); ",
											"",
											"pm.environment.set(\"interactionId\", uuid.v4());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-auth-code-grant-accounts}}"
									}
								],
								"url": {
									"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/balances",
									"host": [
										"{{rs}}"
									],
									"path": [
										"open-banking",
										"v3.1",
										"aisp",
										"accounts",
										"{{account-id}}",
										"balances"
									]
								}
							},
							"response": []
						},
						{
							"name": "6004: GET transactions",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid'); ",
											"",
											"pm.environment.set(\"interactionId\", uuid.v4());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-auth-code-grant-accounts}}"
									}
								],
								"url": {
									"raw": "{{rs}}/open-banking/v3.1/aisp/transactions",
									"host": [
										"{{rs}}"
									],
									"path": [
										"open-banking",
										"v3.1",
										"aisp",
										"transactions"
									]
								}
							},
							"response": []
						},
						{
							"name": "6005: GET transactions/{accountId}",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid'); ",
											"",
											"pm.environment.set(\"interactionId\", uuid.v4());",
											"",
											"pm.environment.set(\"fromBookingDateTime\", \"2017-01-01T00:00:00.000Z\")",
											"pm.environment.set(\"toBookingDateTime\", \"2017-12-31T00:00:00.000Z\")"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-auth-code-grant-accounts}}"
									}
								],
								"url": {
									"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/transactions",
									"host": [
										"{{rs}}"
									],
									"path": [
										"open-banking",
										"v3.1",
										"aisp",
										"accounts",
										"{{account-id}}",
										"transactions"
									],
									"query": [
										{
											"key": "fromBookingDateTime",
											"value": "{{fromBookingDateTime}}",
											"disabled": true
										},
										{
											"key": "toBookingDateTime",
											"value": "{{toBookingDateTime}}",
											"disabled": true
										},
										{
											"key": "page",
											"value": "1.2",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Retrieve an audit of the consent by its id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-cert-dn",
										"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{cs}}/v2.2/consents/{{consent-id-from-hh}}/audit",
									"host": [
										"{{cs}}"
									],
									"path": [
										"v2.2",
										"consents",
										"{{consent-id-from-hh}}",
										"audit"
									],
									"query": [
										{
											"key": "authorization",
											"value": "foo",
											"disabled": true
										},
										{
											"key": "x-cert-dn",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "CBPII / Fund confirmation",
					"item": [
						{
							"name": "1000: TPP-ASPSP Client Credentials Grant (accounts scope)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-fundsconfirmations\", jsonData.access_token);",
											"postman.clearEnvironmentVariable(\"cm\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									},
									{
										"key": "x-cert-fingerprint",
										"value": "foo",
										"disabled": true
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "fundsconfirmations openid",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{tokenEndpoint}}",
									"host": [
										"{{tokenEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "2000: POST funds-confirmation-consents",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"funds-confirmation-consent-id\", jsonData.Data.ConsentId);",
											"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
											"postman.setEnvironmentVariable(\"request-scope\", 'fundsconfirmations');",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid'); ",
											"",
											"pm.environment.set(\"interactionId\", uuid.v4());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-client-credentials-grant-fundsconfirmations}}"
									},
									{
										"key": "x-fapi-customer-ip-address",
										"value": "Mon, 19 Oct 2018 08:51:49 GMT",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Data\": {\r\n    \t\"ExpirationDateTime\": \"2025-05-02T00:00:00+00:00\",\r\n    \t\"DebtorAccount\": {\r\n            \t\"SchemeName\": \"SortCodeAccountNumber\",\r\n            \t\"Identification\": \"00100102010101\",\r\n            \t\"Name\": \"Dr Foo\"\r\n        \t}\r\n    }\r\n}\r\n"
								},
								"url": {
									"raw": "{{rs}}/open-banking/v3.1/cbpii/funds-confirmation-consents",
									"host": [
										"{{rs}}"
									],
									"path": [
										"open-banking",
										"v3.1",
										"cbpii",
										"funds-confirmation-consents"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ozone Util: GET auth-code-url",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									}
								],
								"url": {
									"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
									"host": [
										"{{rs}}"
									],
									"path": [
										"o3",
										"v1.0",
										"auth-code-url",
										"{{intent-id}}"
									],
									"query": [
										{
											"key": "scope",
											"value": "{{request-scope}}"
										},
										{
											"key": "alg",
											"value": "none"
										}
									]
								},
								"description": "Execute this request and then copy the URL into a browser."
							},
							"response": []
						},
						{
							"name": "3003: ASPSP-OZONE Call headless-heimdall auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"consent-id-from-hh\", jsonData.interaction.params.claims.id_token.openbanking_intent_id.value);\r",
											"postman.setEnvironmentVariable(\"interaction-id\", jsonData.interaction.interactionId);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDgyMS44OSwiaWF0IjoxNjA5MTIwODExLjg5LCJuYmYiOjE2MDkxMjA4MTEuODksImp0aSI6IjdhNzVlYmU4LTMxZjktNDU2Yy1iNWU1LTlmOTJkMmMzOTkxOCJ9.O1rBKF87h7LqHgC5sd4pHuVPuKn2CP-feD7xZ1wCT77dfLU8HDDug3zcZdbcMOKH7cnb59MWKTgCcd3aGHfUsfVdT2cE2LrU_pPG7IW1km2Qri89M65241iUR8Ra_By3lULV4AwVywMH7dgjFCWFLWTbQW9idcImt0h9MaSTQyjErPO9Mkp64XqIvIz6lYOhWe6wwZpB5b2S6F6ysDfXkQbkEccKuDNgQAB0_Eh_I_4E9JZU6j_NyxDg6mlT2y1nozX_3-5dGKhgdU4IleqRK8qASosSSSAvjqfeE-3vkbahAcrdM6E8oQaoz2m6hMr5TRpuBF6LRJjqpu2G-KPU7w",
										"disabled": true
									},
									{
										"key": "x-cert-dn",
										"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{authCodeUrl}}",
									"host": [
										"{{authCodeUrl}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "3005: ASPSP - Ozone Retrieve a consent by its id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-cert-dn",
										"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{cs}}/v2.2/consents/{{consent-id-from-hh}}",
									"host": [
										"{{cs}}"
									],
									"path": [
										"v2.2",
										"consents",
										"{{consent-id-from-hh}}"
									],
									"query": [
										{
											"key": "authorization",
											"value": "foo",
											"disabled": true
										},
										{
											"key": "x-cert-dn",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/consents/:consentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consents",
												":consentId"
											],
											"variable": [
												{
													"key": "consentId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"Lorem labore enim ir\",\n \"consentType\": \"<string>\",\n \"request\": \"<object>\",\n \"requestHeaders\": \"<object>\",\n \"tpp\": {\n  \"clientId\": \"<string>\",\n  \"orgId\": \"<string>\",\n  \"softwareStatementId\": \"<string>\",\n  \"directoryRecord\": \"<object>\"\n },\n \"consentBody\": {\n  \"Data\": {\n   \"ConsentId\": \"nisi laborum dolor\",\n   \"CreationDateTime\": \"1967-04-17T11:00:27.222Z\",\n   \"Status\": \"Consumed\",\n   \"StatusUpdateDateTime\": \"1999-09-20T06:14:49.705Z\"\n  }\n },\n \"psuIdentifiers\": {\n  \"userId\": \"laboris sunt fugiat non\"\n },\n \"accountIds\": [\n  \"sed nostrud\"\n ]\n}"
								},
								{
									"name": "Indicates a failure to create the consent\n",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/consents/:consentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consents",
												":consentId"
											],
											"variable": [
												{
													"key": "consentId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errorCode\": \"in veniam\",\n \"errorMessage\": \"minim est\"\n}"
								}
							]
						},
						{
							"name": "4003: ASPSP-Ozone: Patch the consent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
										"disabled": true
									},
									{
										"key": "content-type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"psuIdentifiers\": {\r\n        \"userId\": \"{{userId}}\"\r\n    },\r\n\r\n    \"accountIds\": [{{accountIdsPayment}}],\r\n    \"consentBody.Data.Status\": \"Authorised\"\r\n}"
								},
								"url": {
									"raw": "{{cs}}/v2.2/consents/{{consent-id-from-hh}}",
									"host": [
										"{{cs}}"
									],
									"path": [
										"v2.2",
										"consents",
										"{{consent-id-from-hh}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "4005: ASPSP-Ozone: Confirm with Heimdall",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"authorizationCode\", responseBody);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "heimdall.suppressRefreshToken",
											"value": "false",
											"type": "text"
										},
										{
											"key": "heimdall.accessTokenValidity",
											"value": "3600",
											"type": "text",
											"disabled": true
										},
										{
											"key": "heimdall.refreshTokenValidity",
											"value": "7200",
											"type": "text",
											"disabled": true
										},
										{
											"key": "openbanking_intent_id",
											"value": "{{consent-id-from-hh}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{authEndpoint}}/{{interaction-id}}/doConfirm",
									"host": [
										"{{authEndpoint}}"
									],
									"path": [
										"{{interaction-id}}",
										"doConfirm"
									]
								}
							},
							"response": []
						},
						{
							"name": "5003: TPP-OZONE Step 8: Auth Code Grant (accounts scope)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"token-from-auth-code-grant-fundsconfirmations\", jsonData.access_token);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "fundsconfirmations",
											"type": "text"
										},
										{
											"key": "code",
											"value": "{{authorizationCode}}",
											"type": "text"
										},
										{
											"key": "redirect_uri",
											"value": "{{redirectUrl}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{tokenEndpoint}}",
									"host": [
										"{{tokenEndpoint}}"
									]
								},
								"description": "Copy the authorization code generated into the browser into the **Body** tab in the `code` parameter"
							},
							"response": []
						},
						{
							"name": "6000: POST funds-confirmations",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
											"",
											"const uuid = require('uuid'); ",
											"pm.environment.set(\"interactionId\", uuid.v4());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-customer-last-logged-time",
										"value": "{{now}}",
										"disabled": true
									},
									{
										"key": "x-fapi-customer-ip-address",
										"value": "10.1.1.10"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{$guid}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-auth-code-grant-fundsconfirmations}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{funds-confirmation-consent-id}}\",\n        \"Reference\": \"xxxxx\",\n        \"InstructedAmount\": {\n        \t\"Amount\": \"1927.00\",\n        \t\"Currency\": \"GBP\"\n        }\n    }\n}"
								},
								"url": {
									"raw": "{{rs}}/open-banking/v3.1/cbpii/funds-confirmations",
									"host": [
										"{{rs}}"
									],
									"path": [
										"open-banking",
										"v3.1",
										"cbpii",
										"funds-confirmations"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Retrieve an audit of the consent by its id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-cert-dn",
										"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{cs}}/v2.2/consents/{{consent-id-from-hh}}/audit",
									"host": [
										"{{cs}}"
									],
									"path": [
										"v2.2",
										"consents",
										"{{consent-id-from-hh}}",
										"audit"
									],
									"query": [
										{
											"key": "authorization",
											"value": "foo",
											"disabled": true
										},
										{
											"key": "x-cert-dn",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Retrieve a log of funds confirmation from consent or accountID Copy",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-cert-dn",
										"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{cs}}/funds-confirmation-log?consentId={{consent-id-from-hh}}",
									"host": [
										"{{cs}}"
									],
									"path": [
										"funds-confirmation-log"
									],
									"query": [
										{
											"key": "authorization",
											"value": "foo",
											"disabled": true
										},
										{
											"key": "x-cert-dn",
											"value": "",
											"disabled": true
										},
										{
											"key": "consentId",
											"value": "{{consent-id-from-hh}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "PIS Flow Single Domestic Payment Headless",
					"item": [
						{
							"name": "1000: TPP-ASPSP Client Credentials Grant (accounts scope)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-payments\", jsonData.access_token);",
											"postman.clearEnvironmentVariable(\"cm\");",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									},
									{
										"key": "x-cert-fingerprint",
										"value": "foo",
										"disabled": true
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "payments openid",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{tokenEndpoint}}",
									"host": [
										"{{tokenEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "2000: POST domestic-payment-consents",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"payment-consent-id\", jsonData.Data.ConsentId);",
											"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
											"postman.setEnvironmentVariable(\"Initiation\", JSON.stringify(jsonData.Data.Initiation));",
											"postman.setEnvironmentVariable(\"request-scope\", 'payments');",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// set uuid and time",
											"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
											"const uuid = require('uuid');",
											"pm.environment.set(\"interactionId\", uuid.v4());",
											"",
											"const mesgSigning = JSON.parse(pm.environment.get(\"mesgSigning\"));",
											"",
											"var interpolate = (str) => {",
											"  return str.replace(/{{([^}]+)}}/g, function (match, $1) {",
											"    return pm.variables.get($1);",
											"  });",
											"}",
											"",
											"var options = {",
											"  method: 'POST',",
											"  url: pm.environment.get('rs') + '/o3/v1.0/message-signature',",
											"  header: mesgSigning.header,",
											"  body: {",
											"    mode: 'raw',",
											"    raw: request.data",
											"  }",
											"};",
											"",
											"pm.environment.set(\"randomNumber\", _.random(1,100000));",
											"",
											"// pm.sendRequest(",
											"//   options,",
											"//   function (err, response) {",
											"//     if (response.code !== 200) {",
											"//       throw new Error('Could not generate message signature');",
											"//     }",
											"//     const signature = response.stream.toString('utf8');",
											"//     pm.request.headers.upsert({ key: 'x-jws-signature', value: signature })",
											"//   }",
											"// )",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-customer-last-logged-time",
										"value": "{{now}}",
										"disabled": true
									},
									{
										"key": "x-fapi-customer-ip-address",
										"value": "10.1.1.10"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-client-credentials-grant-payments}}"
									},
									{
										"key": "x-jws-signature",
										"value": "{{signature}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Data\": {\r\n\t    \"Initiation\": {\r\n\t      \"InstructionIdentification\": \"{{randomString-1}}\",\r\n\t      \"EndToEndIdentification\": \"{{randomString-2}}\",\r\n\t      \"InstructedAmount\": {\r\n\t        \"Amount\": \"{{randomPrice}}\",\r\n\t        \"Currency\": \"GBP\"\r\n\t      },\r\n\r\n\t      \"CreditorAccount\": {\r\n\t        \"SchemeName\": \"UK.OBIE.SortCodeAccountNumber\",\r\n\t        \"Identification\": \"10000109010101\",\r\n\t        \"Name\":\"Mario International\"\r\n\t      },\r\n\r\n\t      \"RemittanceInformation\": {\r\n\t        \"Reference\": \"{{randomLoremWord}}8898\",\r\n\t        \"Unstructured\": \"{{randomCreditCardMask}} {{randomLoremWords}}\"\r\n\t      }\r\n\t    }\r\n    }, \r\n    \"Risk\": {}\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payment-consents",
									"host": [
										"{{rs}}"
									],
									"path": [
										"open-banking",
										"v3.1",
										"pisp",
										"domestic-payment-consents"
									]
								}
							},
							"response": []
						},
						{
							"name": "Ozone Util: GET auth-code-url",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									}
								],
								"url": {
									"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none",
									"host": [
										"{{rs}}"
									],
									"path": [
										"o3",
										"v1.0",
										"auth-code-url",
										"{{intent-id}}"
									],
									"query": [
										{
											"key": "scope",
											"value": "{{request-scope}}"
										},
										{
											"key": "alg",
											"value": "none"
										}
									]
								},
								"description": "Execute this request and then copy the URL into a browser."
							},
							"response": []
						},
						{
							"name": "Step 5: QR Code Copy",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.qrserver.com/v1/create-qr-code?data={{payment-consent-id}}:{{auth-req-id}}",
									"protocol": "https",
									"host": [
										"api",
										"qrserver",
										"com"
									],
									"path": [
										"v1",
										"create-qr-code"
									],
									"query": [
										{
											"key": "data",
											"value": "{{payment-consent-id}}:{{auth-req-id}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "3003: ASPSP-OZONE Call headless-heimdall auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);\r",
											"\r",
											"postman.setEnvironmentVariable(\"consent-id-from-hh\", jsonData.interaction.params.claims.id_token.openbanking_intent_id.value);\r",
											"postman.setEnvironmentVariable(\"interaction-id\", jsonData.interaction.interactionId);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDgyMS44OSwiaWF0IjoxNjA5MTIwODExLjg5LCJuYmYiOjE2MDkxMjA4MTEuODksImp0aSI6IjdhNzVlYmU4LTMxZjktNDU2Yy1iNWU1LTlmOTJkMmMzOTkxOCJ9.O1rBKF87h7LqHgC5sd4pHuVPuKn2CP-feD7xZ1wCT77dfLU8HDDug3zcZdbcMOKH7cnb59MWKTgCcd3aGHfUsfVdT2cE2LrU_pPG7IW1km2Qri89M65241iUR8Ra_By3lULV4AwVywMH7dgjFCWFLWTbQW9idcImt0h9MaSTQyjErPO9Mkp64XqIvIz6lYOhWe6wwZpB5b2S6F6ysDfXkQbkEccKuDNgQAB0_Eh_I_4E9JZU6j_NyxDg6mlT2y1nozX_3-5dGKhgdU4IleqRK8qASosSSSAvjqfeE-3vkbahAcrdM6E8oQaoz2m6hMr5TRpuBF6LRJjqpu2G-KPU7w",
										"disabled": true
									},
									{
										"key": "x-cert-dn",
										"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{authCodeUrl}}",
									"host": [
										"{{authCodeUrl}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "3005: ASPSP - Ozone Retrieve a consent by its id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-cert-dn",
										"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{cs}}/v2.2/consents/{{consent-id-from-hh}}",
									"host": [
										"{{cs}}"
									],
									"path": [
										"v2.2",
										"consents",
										"{{consent-id-from-hh}}"
									],
									"query": [
										{
											"key": "authorization",
											"value": "foo",
											"disabled": true
										},
										{
											"key": "x-cert-dn",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "Indicates a failure to create the consent\n",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/consents/:consentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consents",
												":consentId"
											],
											"variable": [
												{
													"key": "consentId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"errorCode\": \"in veniam\",\n \"errorMessage\": \"minim est\"\n}"
								},
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/consents/:consentId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"consents",
												":consentId"
											],
											"variable": [
												{
													"key": "consentId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"Lorem labore enim ir\",\n \"consentType\": \"<string>\",\n \"request\": \"<object>\",\n \"requestHeaders\": \"<object>\",\n \"tpp\": {\n  \"clientId\": \"<string>\",\n  \"orgId\": \"<string>\",\n  \"softwareStatementId\": \"<string>\",\n  \"directoryRecord\": \"<object>\"\n },\n \"consentBody\": {\n  \"Data\": {\n   \"ConsentId\": \"nisi laborum dolor\",\n   \"CreationDateTime\": \"1967-04-17T11:00:27.222Z\",\n   \"Status\": \"Consumed\",\n   \"StatusUpdateDateTime\": \"1999-09-20T06:14:49.705Z\"\n  }\n },\n \"psuIdentifiers\": {\n  \"userId\": \"laboris sunt fugiat non\"\n },\n \"accountIds\": [\n  \"sed nostrud\"\n ]\n}"
								}
							]
						},
						{
							"name": "4003: ASPSP-Ozone: Patch the consent",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
										"disabled": true
									},
									{
										"key": "content-type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"psuIdentifiers\": {\r\n        \"userId\": \"{{userId}}\"\r\n    },\r\n\r\n    \"accountIds\": [{{accountIdsPayment}}],\r\n    \"consentBody.Data.Status\": \"Authorised\"\r\n}"
								},
								"url": {
									"raw": "{{cs}}/v2.2/consents/{{consent-id-from-hh}}",
									"host": [
										"{{cs}}"
									],
									"path": [
										"v2.2",
										"consents",
										"{{consent-id-from-hh}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "4005: ASPSP-Ozone: Confirm with Heimdall",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"authorizationCode\", responseBody);\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "heimdall.suppressRefreshToken",
											"value": "false",
											"type": "text"
										},
										{
											"key": "heimdall.accessTokenValidity",
											"value": "3600",
											"type": "text",
											"disabled": true
										},
										{
											"key": "heimdall.refreshTokenValidity",
											"value": "7200",
											"type": "text",
											"disabled": true
										},
										{
											"key": "openbanking_intent_id",
											"value": "{{consent-id-from-hh}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{authEndpoint}}/{{interaction-id}}/doConfirm",
									"host": [
										"{{authEndpoint}}"
									],
									"path": [
										"{{interaction-id}}",
										"doConfirm"
									]
								}
							},
							"response": []
						},
						{
							"name": "5003: TPP-OZONE Step 8: Auth Code Grant (accounts scope)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"token-from-auth-code-grant-payments\", jsonData.access_token);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "payments ",
											"type": "text"
										},
										{
											"key": "code",
											"value": "{{authorizationCode}}",
											"type": "text"
										},
										{
											"key": "redirect_uri",
											"value": "{{redirectUrl}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{tokenEndpoint}}",
									"host": [
										"{{tokenEndpoint}}"
									]
								},
								"description": "Copy the authorization code generated into the browser into the **Body** tab in the `code` parameter"
							},
							"response": []
						},
						{
							"name": "6000: POST domestic-payments",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"payment-id\", jsonData.Data.DomesticPaymentId);",
											"postman.setEnvironmentVariable(\"payment-type\", 'domestic-payments');",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// set uuid and time",
											"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
											"const uuid = require('uuid');",
											"pm.environment.set(\"interactionId\", uuid.v4());",
											"",
											"const mesgSigning = JSON.parse(pm.environment.get(\"mesgSigning\"));",
											"var interpolate = (str) => {",
											"  return str.replace(/{{([^}]+)}}/g, function (match, $1) {",
											"    return pm.variables.get($1);",
											"  });",
											"}",
											"var options = {",
											"  method: 'POST',",
											"  url: pm.environment.get('rs') + '/o3/v1.0/message-signature',",
											"  header: mesgSigning.header,",
											"  body: {",
											"    mode: 'raw',",
											"    raw: interpolate(request.data)",
											"  }",
											"};",
											"// pm.sendRequest(",
											"//   options,",
											"//   function (err, response) {",
											"//     if (response.code !== 200) {",
											"//       throw new Error('Could not generate message signature');",
											"//     }",
											"//     const signature = response.stream.toString('utf8');",
											"//     pm.request.headers.upsert({ key: 'x-jws-signature', value: signature })",
											"//   }",
											"// )",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-customer-last-logged-time",
										"value": "{{now}}",
										"disabled": true
									},
									{
										"key": "x-fapi-customer-ip-address",
										"value": "10.1.1.10"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-auth-code-grant-payments}}"
									},
									{
										"key": "x-jws-signature",
										"value": "{{signature}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Data\": {\n        \"ConsentId\": \"{{payment-consent-id}}\",\n        \"Initiation\":  {{Initiation}}\n    },\n    \"Risk\": {}\n}"
								},
								"url": {
									"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payments",
									"host": [
										"{{rs}}"
									],
									"path": [
										"open-banking",
										"v3.1",
										"pisp",
										"domestic-payments"
									]
								}
							},
							"response": []
						},
						{
							"name": "7000: GET domestic-payments",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
											"const uuid = require('uuid'); ",
											"pm.environment.set(\"interactionId\", uuid.v4());",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-customer-last-logged-time",
										"value": "{{now}}",
										"disabled": true
									},
									{
										"key": "x-fapi-customer-ip-address",
										"value": "10.1.1.10"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-client-credentials-grant-payments}}"
									}
								],
								"url": {
									"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payments/{{payment-id}}",
									"host": [
										"{{rs}}"
									],
									"path": [
										"open-banking",
										"v3.1",
										"pisp",
										"domestic-payments",
										"{{payment-id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "7001: GET domestic-payments details",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
											"const uuid = require('uuid'); ",
											"pm.environment.set(\"interactionId\", uuid.v4());",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-customer-last-logged-time",
										"value": "{{now}}",
										"disabled": true
									},
									{
										"key": "x-fapi-customer-ip-address",
										"value": "10.1.1.10"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-client-credentials-grant-payments}}"
									}
								],
								"url": {
									"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payments/{{payment-id}}/payment-details",
									"host": [
										"{{rs}}"
									],
									"path": [
										"open-banking",
										"v3.1",
										"pisp",
										"domestic-payments",
										"{{payment-id}}",
										"payment-details"
									]
								}
							},
							"response": []
						},
						{
							"name": "7002: GET domestic-payment-consents",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString() );",
											"const uuid = require('uuid'); ",
											"pm.environment.set(\"interactionId\", uuid.v4());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-customer-last-logged-time",
										"value": "{{now}}",
										"disabled": true
									},
									{
										"key": "x-fapi-customer-ip-address",
										"value": "10.1.1.10"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-client-credentials-grant-payments}}"
									}
								],
								"url": {
									"raw": "{{rs}}/open-banking/v3.1/pisp/domestic-payment-consents/{{intent-id}}",
									"host": [
										"{{rs}}"
									],
									"path": [
										"open-banking",
										"v3.1",
										"pisp",
										"domestic-payment-consents",
										"{{intent-id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Retrieve a log of payments from consent or accountID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-cert-dn",
										"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{cs}}/payment-log?consentId={{consent-id-from-hh}}",
									"host": [
										"{{cs}}"
									],
									"path": [
										"payment-log"
									],
									"query": [
										{
											"key": "authorization",
											"value": "foo",
											"disabled": true
										},
										{
											"key": "x-cert-dn",
											"value": "",
											"disabled": true
										},
										{
											"key": "consentId",
											"value": "{{consent-id-from-hh}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "GET Retrieve an audit of the consent by its id",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-cert-dn",
										"value": "CN=HQuZPIt3ipkh33Uxytox1E,OU=0015800001041RHAAY,O=OpenBanking,C=GB"
									},
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJQUzI1NiIsInR5cCI6IkpPU0UiLCJjdHkiOiJqc29uIiwia2lkIjoiZVVmdDNhNTV1OEhBOHZ5bkhsNWVPSWpBcTRUWUUtRXpwRHQ2WWx4Sm12OCJ9.eyJpc3MiOiJPcGVuQmFua2luZyIsInN1YiI6IjAwMTU4MDAwMDEwNDFSSEFBWSIsImF1ZCI6ImF1ZCIsImV4cCI6MTYwOTEyMDk3Ni42MDUsImlhdCI6MTYwOTEyMDk2Ni42MDUsIm5iZiI6MTYwOTEyMDk2Ni42MDUsImp0aSI6ImEyOWQxYTMzLTQ5NTktNDExNy05MzQyLWMxZTQzYTc4OWZlMiJ9.QPQwKBBZ8zFflfT9l1NPs0L_VCfkN49p2t_GKlD6fvw1NkbjX3SxLaox-jlgNhn900tAc5cLw15GGfP9NxJssC4etOoDJgJaVMnS0ZqmujUk8V45CIx5ApLDCtHPxL6uzZSbKzTs7aLzeRFXWOoqOfC-VA3s7nohssyj7MyIWqz_KDwZ2jYuq9Ym3dael2fKEuzgoAHugPGhrqXIkgVVO9lCuitNhWbaBwBhkk45Gp2VPYRFHrBHH8gXtKUk7DkQTv2xw3S4swmSD4Bmb4L1RYIHceGB2V39kGVLc3GltIRYFBSbXUwmlMyAv5GjY1E0UVJ7sSZzSh97A2i8SZuenA",
										"disabled": true
									}
								],
								"url": {
									"raw": "{{cs}}/v2.2/consents/{{consent-id-from-hh}}/audit",
									"host": [
										"{{cs}}"
									],
									"path": [
										"v2.2",
										"consents",
										"{{consent-id-from-hh}}",
										"audit"
									],
									"query": [
										{
											"key": "authorization",
											"value": "foo",
											"disabled": true
										},
										{
											"key": "x-cert-dn",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Strict Profile Test",
			"item": [
				{
					"name": "DCR",
					"item": [
						{
							"name": "Step 1a: GET JWT for DCR",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid');",
											"pm.environment.set(\"interactionId\", uuid.v4());",
											"",
											"const now = Math.floor(Date.now() / 1000);",
											"",
											"const data1 = JSON.stringify({",
											"        \"iss\":\"{{_clientId}}\",",
											"        \"sub\":\"{{_clientId}}\",",
											"        \"aud\": pm.environment.get('tokenEndpoint'),",
											"        \"jti\":uuid.v4(),",
											"        \"iat\":now,",
											"        \"exp\":now + 300,",
											"",
											"        \"token_endpoint_auth_signing_alg\":\"PS256\",",
											"        \"grant_types\":[\"authorization_code\", \"client_credentials\", \"urn:ietf:params:oauth:grant-type:jwt-bearer\", \"refresh_token\"],",
											"        \"subject_type\":\"public\",",
											"        \"application_type\":\"web\",",
											"        \"iss\":software_statement_id,",
											"        \"redirect_uris\":[pm.environment.get('redirectUrl')],",
											"        \"token_endpoint_auth_method\":\"private_key_jwt\",",
											"        \"aud\":pm.environment.get('rs'),",
											"        \"scope\": \"openid accounts payments\",",
											"        \"request_object_signing_alg\":\"PS256\",",
											"        \"exp\":now+ 300,",
											"        \"iat\":now,",
											"        \"jti\":uuid.v4(),",
											"        \"response_types\":[\"code\", \"code id_token\"],",
											"        \"id_token_signed_response_alg\":\"PS256\",",
											"        \"user_info_signed_response_alg\":\"PS256\",",
											"        \"software_statement\":software_statement,",
											"        \"backchannel_token_delivery_mode\": \"push\",",
											"        \"backchannel_user_code_parameter\": False,",
											"        \"backchannel_client_notification_endpoint\": \"ping\",",
											"        \"backchannel_authentication_request_signing_alg\": \"PS256\",",
											"        \"tls_client_certificate_bound_access_tokens\": False,",
											"});",
											"",
											"pm.environment.set(\"data\", data1);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"signedTokenJwt\", responseBody);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-customer-last-logged-time",
										"value": "{{now}}",
										"disabled": true
									},
									{
										"key": "x-fapi-customer-ip-address",
										"value": "10.1.1.10"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-client-credentials-grant-payments}}"
									},
									{
										"key": "x-jws-signature",
										"value": "{{signature}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n    \"header\": {\r\n        \"alg\": \"PS256\",\r\n        \"kid\": \"UkEp-aBo4mQ5J2riXORxocBWKm0\"\r\n    },\r\n    \"body\": {{data}},\r\n  \r\n    \"signingKeyPEM\": \"{{pem}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{rs}}/o3/v1.0/message-signature",
									"host": [
										"{{rs}}"
									],
									"path": [
										"o3",
										"v1.0",
										"message-signature"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step1: DCR Post",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid');",
											"pm.environment.set(\"interactionId\", uuid.v4());",
											"",
											"const softwareStatementId = \"zIdOF4wjrM3nfH4cqM4klK\"",
											"",
											"",
											"const now = Math.floor(Date.now() / 1000);",
											"",
											"pm.environment.set(\"softwareStatementId\", softwareStatementId);",
											"pm.environment.set(\"ssa\", pm.globals.get(\"ssa\"));",
											"pm.environment.set(\"jti\", uuid.v4());",
											"pm.environment.set(\"now\", now);",
											"pm.environment.set(\"exp\", now + 300);",
											"pm.environment.set(\"jwks_uri\", pm.globals.get(\"jwks_uri\"));",
											"pm.environment.set(\"redirect_uris\", pm.globals.get(\"redirect_uris\"));",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"signedConsentJwt\", responseBody);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/jwt"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-customer-last-logged-time",
										"value": "{{now}}",
										"disabled": true
									},
									{
										"key": "x-fapi-customer-ip-address",
										"value": "10.1.1.10"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{{signedDcrJwt}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{rs}}/dynamic-client-registration/v3.1/register",
									"host": [
										"{{rs}}"
									],
									"path": [
										"dynamic-client-registration",
										"v3.1",
										"register"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "AIS",
					"item": [
						{
							"name": "Step 1a: GET JWT for CCG token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid');",
											"pm.environment.set(\"interactionId\", uuid.v4());",
											"",
											"const now = Math.floor(Date.now() / 1000);",
											"",
											"const data1 = JSON.stringify({",
											"        \"iss\":\"{{_clientId}}\",",
											"        \"sub\":\"{{_clientId}}\",",
											"        \"aud\": pm.environment.get('tokenEndpoint'),",
											"        \"jti\":uuid.v4(),",
											"        \"iat\":now,",
											"        \"exp\":now + 300",
											"",
											"});",
											"",
											"pm.environment.set(\"data\", data1);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"signedTokenJwt\", responseBody);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-customer-last-logged-time",
										"value": "{{now}}",
										"disabled": true
									},
									{
										"key": "x-fapi-customer-ip-address",
										"value": "10.1.1.10"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-client-credentials-grant-payments}}"
									},
									{
										"key": "x-jws-signature",
										"value": "{{signature}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n    \"header\": {\r\n        \"alg\": \"PS256\",\r\n        \"kid\": \"UkEp-aBo4mQ5J2riXORxocBWKm0\"\r\n    },\r\n    \"body\": {{data}},\r\n  \r\n    \"signingKeyPEM\": \"{{pem}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{rs}}/o3/v1.0/message-signature",
									"host": [
										"{{rs}}"
									],
									"path": [
										"o3",
										"v1.0",
										"message-signature"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 1b: Client Credentials Grant (accounts scope)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"token-from-client-credentials-grant-accounts\", jsonData.access_token);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "accounts openid",
											"type": "text"
										},
										{
											"key": "client_assertion_type",
											"value": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
											"type": "text"
										},
										{
											"key": "client_id",
											"value": "{{_clientId}}",
											"type": "text"
										},
										{
											"key": "client_assertion",
											"value": "{{signedTokenJwt}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{tokenEndpoint}}",
									"host": [
										"{{tokenEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 2: POST  account-access-consents",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"account-access-consent-id\", jsonData.Data.ConsentId);",
											"postman.setEnvironmentVariable(\"intent-id\", jsonData.Data.ConsentId);",
											"postman.setEnvironmentVariable(\"request-scope\", 'accounts');",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// set uuid and time",
											"postman.setEnvironmentVariable(\"now\", (new Date()).toUTCString());",
											"const uuid = require('uuid');",
											"pm.environment.set(\"interactionId\", uuid.v4());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "addTokenTo",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-client-credentials-grant-accounts}}"
									},
									{
										"key": "x-fapi-customer-ip-address",
										"value": "Mon, 19 Oct 2018 08:51:49 GMT",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"Data\": {\r\n        \"Permissions\": [\r\n            \"ReadAccountsBasic\",\r\n            \"ReadAccountsDetail\",\r\n            \"ReadBalances\",\r\n\t\t\t\"ReadBeneficiariesBasic\",\r\n\t\t\t\"ReadBeneficiariesDetail\",\r\n            \"ReadDirectDebits\",\r\n            \"ReadTransactionsBasic\",\r\n            \"ReadTransactionsCredits\",\r\n            \"ReadTransactionsDebits\",\r\n            \"ReadTransactionsDetail\",\r\n            \"ReadProducts\",\r\n            \"ReadStandingOrdersDetail\",\r\n            \"ReadProducts\",\r\n            \"ReadStandingOrdersDetail\",\r\n            \"ReadStatementsDetail\",\r\n            \"ReadParty\",\r\n            \"ReadPartyPSU\"\r\n            ],\r\n        \"TransactionFromDateTime\": \"2016-01-01T10:40:00+02:00\",\r\n        \"TransactionToDateTime\": \"2025-12-31T10:40:00+02:00\"\r\n    }, \r\n    \"Risk\": {}\r\n}\r\n"
								},
								"url": {
									"raw": "{{rs}}/open-banking/v3.1/aisp/account-access-consents",
									"host": [
										"{{rs}}"
									],
									"path": [
										"open-banking",
										"v3.1",
										"aisp",
										"account-access-consents"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 3a: GET JWT for authcodeurl",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid');",
											"pm.environment.set(\"interactionId\", uuid.v4());",
											"",
											"const now = Math.floor(Date.now() / 1000);",
											"const clientID = pm.environment.get('_clientId');",
											"",
											"const data1 = JSON.stringify({",
											"        \"aud\": pm.environment.get('issuer'),",
											"        \"exp\":now + 300,",
											"        \"iss\":clientID,",
											"        \"client_id\":clientID,",
											"        \"scope\": \"accounts openid\",",
											"        \"nonce\": uuid.v4(),",
											"        \"state\": uuid.v4(),",
											"        \"nbf\": now - 300,",
											"        \"response_type\": \"code id_token\",",
											"        \"redirect_uri\": pm.environment.get('redirectUrl'),",
											"        \"claims\": {",
											"            \"id_token\": {",
											"                \"openbanking_intent_id\": {",
											"                        \"value\": pm.environment.get('account-access-consent-id'),",
											"                        \"essential\": true",
											"                    }",
											"            },",
											" ",
											"        },",
											"",
											"});",
											"",
											"pm.environment.set(\"data\", data1);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"postman.setEnvironmentVariable(\"authCodeJwt\", responseBody);",
											"",
											"let authCodeUrl = pm.environment.get('authEndpoint');",
											"authCodeUrl = authCodeUrl + \"?client_id=\" + pm.environment.get('_clientId');",
											"authCodeUrl = authCodeUrl + \"&redirect_uri=\" + pm.environment.get('redirectUrl');",
											"authCodeUrl = authCodeUrl + \"&response_type=code id_token\";",
											"authCodeUrl = authCodeUrl + \"&scope=accounts openid\";",
											"authCodeUrl = authCodeUrl + \"&request=\" + responseBody;",
											"postman.setEnvironmentVariable(\"authCodeUrl\", encodeURI(authCodeUrl));",
											"",
											"console.log(encodeURI(authCodeUrl));",
											"",
											"responseBody = encodeURI(authCodeUrl);",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-customer-last-logged-time",
										"value": "{{now}}",
										"disabled": true
									},
									{
										"key": "x-fapi-customer-ip-address",
										"value": "10.1.1.10"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-client-credentials-grant-payments}}"
									},
									{
										"key": "x-jws-signature",
										"value": "{{signature}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n    \"header\": {\r\n        \"alg\": \"PS256\",\r\n        \"kid\": \"UkEp-aBo4mQ5J2riXORxocBWKm0\",\r\n        \"typ\": \"JWT\"\r\n    },\r\n    \"body\": {{data}},\r\n  \r\n    \"signingKeyPEM\": \"{{pem}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{rs}}/o3/v1.0/message-signature",
									"host": [
										"{{rs}}"
									],
									"path": [
										"o3",
										"v1.0",
										"message-signature"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 3: GET auth-code-url",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"authCodeUrl\", responseBody);",
											"",
											"",
											"var authCodeUrlEncoded = encodeURIComponent(postman.getEnvironmentVariable(\"authCodeUrl\"));",
											"postman.setEnvironmentVariable(\"authCodeUrlEncoded\", authCodeUrlEncoded);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}"
									}
								],
								"url": {
									"raw": "{{rs}}/o3/v1.0/auth-code-url/{{intent-id}}?scope={{request-scope}}&alg=none&responseType=code",
									"host": [
										"{{rs}}"
									],
									"path": [
										"o3",
										"v1.0",
										"auth-code-url",
										"{{intent-id}}"
									],
									"query": [
										{
											"key": "scope",
											"value": "{{request-scope}}"
										},
										{
											"key": "alg",
											"value": "none"
										},
										{
											"key": "responseType",
											"value": "code"
										}
									]
								},
								"description": "Execute this request and then copy the URL into a browser."
							},
							"response": []
						},
						{
							"name": "Step 4a: GET JWT for auth token",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid');",
											"pm.environment.set(\"interactionId\", uuid.v4());",
											"",
											"const now = Math.floor(Date.now() / 1000);",
											"",
											"const data1 = JSON.stringify({",
											"        \"iss\":\"{{_clientId}}\",",
											"        \"sub\":\"{{_clientId}}\",",
											"        \"aud\": pm.environment.get('tokenEndpoint'),",
											"        \"jti\":uuid.v4(),",
											"        \"iat\":now,",
											"        \"exp\":now + 300",
											"",
											"});",
											"",
											"pm.environment.set(\"data\", data1);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"postman.setEnvironmentVariable(\"signedAuthCodeJwt\", responseBody);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"disabled": true
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-customer-last-logged-time",
										"value": "{{now}}",
										"disabled": true
									},
									{
										"key": "x-fapi-customer-ip-address",
										"value": "10.1.1.10"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-client-credentials-grant-payments}}"
									},
									{
										"key": "x-jws-signature",
										"value": "{{signature}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n    \"header\": {\r\n        \"alg\": \"PS256\",\r\n        \"kid\": \"UkEp-aBo4mQ5J2riXORxocBWKm0\"\r\n    },\r\n    \"body\": {{data}},\r\n  \r\n    \"signingKeyPEM\": \"{{pem}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{rs}}/o3/v1.0/message-signature",
									"host": [
										"{{rs}}"
									],
									"path": [
										"o3",
										"v1.0",
										"message-signature"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 4b: Auth Token (accounts scope)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"token-from-auth-code-grant-accounts\", jsonData.access_token);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									},
									{
										"key": "Authorization",
										"value": "Basic {{basicToken}}",
										"disabled": true
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "grant_type",
											"value": "authorization_code",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "accounts openid",
											"type": "text"
										},
										{
											"key": "client_assertion_type",
											"value": "urn:ietf:params:oauth:client-assertion-type:jwt-bearer",
											"type": "text"
										},
										{
											"key": "code",
											"value": "d41f87f8-9d64-4836-90a3-bacbb2b3b9ce",
											"type": "text"
										},
										{
											"key": "client_assertion",
											"value": "{{signedAuthCodeJwt}}",
											"type": "text"
										},
										{
											"key": "redirect_uri",
											"value": "{{redirectUrl}}",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{tokenEndpoint}}",
									"host": [
										"{{tokenEndpoint}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Step 5.1: GET accounts",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const uuid = require('uuid'); ",
											"",
											"pm.environment.set(\"interactionId\", uuid.v4());"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = JSON.parse(responseBody);",
											"",
											"postman.setEnvironmentVariable(\"account-id\", jsonData.Data.Account[0].AccountId);",
											"",
											"var active = 2;",
											"jsonData.Data.Account.forEach((val, index, arr)=>{",
											"    if(active === index){",
											"        postman.setEnvironmentVariable(`account-id-active`, val.AccountId)",
											"    }",
											"    ",
											"});",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "x-fapi-financial-id",
										"value": "{{obParticipantId}}"
									},
									{
										"key": "x-fapi-interaction-id",
										"value": "{{interactionId}}"
									},
									{
										"key": "Authorization",
										"value": "Bearer {{token-from-auth-code-grant-accounts}}"
									}
								],
								"url": {
									"raw": "{{rs}}/open-banking/v3.1/aisp/accounts",
									"host": [
										"{{rs}}"
									],
									"path": [
										"open-banking",
										"v3.1",
										"aisp",
										"accounts"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Open Banking v3.1.11",
			"item": [
				{
					"name": "GET /accounts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const contentType =\"application/json\";",
									"const method ='get';",
									"const endpoint=\"/accounts\";",
									"const statuscode=200;",
									"const testCaseNo = \"CT-212\"",
									"",
									"if(pm.response.code === 200){",
									"    let jsonData = JSON.parse(responseBody);",
									"    postman.setEnvironmentVariable(\"account-id\", jsonData.Data.Account[0].AccountId);",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const uuid = require('uuid'); ",
									"",
									"pm.environment.set(\"interactionId\", uuid.v4());"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true,
						"followOriginalHttpMethod": false
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-fapi-financial-id",
								"value": "{{obParticipantId}}"
							},
							{
								"key": "x-fapi-interaction-id",
								"value": "{{interactionId}}"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token-from-auth-code-grant-accounts}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{rs}}/open-banking/v3.1/aisp/accounts",
							"host": [
								"{{rs}}"
							],
							"path": [
								"open-banking",
								"v3.1",
								"aisp",
								"accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /account/{accountId}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const uuid = require('uuid'); ",
									"",
									"pm.environment.set(\"interactionId\", uuid.v4());"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"followOriginalHttpMethod": false
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-fapi-financial-id",
								"value": "{{obParticipantId}}"
							},
							{
								"key": "x-fapi-interaction-id",
								"value": "{{interactionId}}"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token-from-auth-code-grant-accounts}}"
							}
						],
						"url": {
							"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}",
							"host": [
								"{{rs}}"
							],
							"path": [
								"open-banking",
								"v3.1",
								"aisp",
								"accounts",
								"{{account-id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /account/{accountId}/statements",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const contentType =\"application/json\";",
									"const method ='get';",
									"const endpoint=\"/accounts/{AccountId}/statements\";",
									"const statuscode=200;",
									"const testCaseNo = \"CT-213\"",
									"",
									"",
									"if(pm.response.code === 200){",
									"    let jsonData = JSON.parse(responseBody);",
									"    postman.setEnvironmentVariable(\"statement-id\", jsonData.Data.Statement[0].StatementId);",
									"}",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const uuid = require('uuid'); ",
									"",
									"pm.environment.set(\"interactionId\", uuid.v4());"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"followOriginalHttpMethod": false
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-fapi-financial-id",
								"value": "{{obParticipantId}}"
							},
							{
								"key": "x-fapi-interaction-id",
								"value": "{{interactionId}}"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token-from-auth-code-grant-accounts}}"
							}
						],
						"url": {
							"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/statements",
							"host": [
								"{{rs}}"
							],
							"path": [
								"open-banking",
								"v3.1",
								"aisp",
								"accounts",
								"{{account-id}}",
								"statements"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /account/{accountId}/statement{{statement-id}}",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const uuid = require('uuid'); ",
									"",
									"pm.environment.set(\"interactionId\", uuid.v4());"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"followOriginalHttpMethod": false
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-fapi-financial-id",
								"value": "{{obParticipantId}}"
							},
							{
								"key": "x-fapi-interaction-id",
								"value": "{{interactionId}}"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token-from-auth-code-grant-accounts}}"
							}
						],
						"url": {
							"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/statements/{{statement-id}}",
							"host": [
								"{{rs}}"
							],
							"path": [
								"open-banking",
								"v3.1",
								"aisp",
								"accounts",
								"{{account-id}}",
								"statements",
								"{{statement-id}}"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /account/{accountId}/statement{{statement-id}}/file",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const uuid = require('uuid'); ",
									"",
									"pm.environment.set(\"interactionId\", uuid.v4());"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"followOriginalHttpMethod": false
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-fapi-financial-id",
								"value": "{{obParticipantId}}"
							},
							{
								"key": "x-fapi-interaction-id",
								"value": "{{interactionId}}"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token-from-auth-code-grant-accounts}}"
							}
						],
						"url": {
							"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/statements/{{statement-id}}/file",
							"host": [
								"{{rs}}"
							],
							"path": [
								"open-banking",
								"v3.1",
								"aisp",
								"accounts",
								"{{account-id}}",
								"statements",
								"{{statement-id}}",
								"file"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /account/{accountId}/statements/{statementId}}/transactions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const uuid = require('uuid'); ",
									"",
									"pm.environment.set(\"interactionId\", uuid.v4());"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"followOriginalHttpMethod": false
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-fapi-financial-id",
								"value": "{{obParticipantId}}"
							},
							{
								"key": "x-fapi-interaction-id",
								"value": "{{interactionId}}"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token-from-auth-code-grant-accounts}}"
							}
						],
						"url": {
							"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/statements/{{statement-id}}/transactions",
							"host": [
								"{{rs}}"
							],
							"path": [
								"open-banking",
								"v3.1",
								"aisp",
								"accounts",
								"{{account-id}}",
								"statements",
								"{{statement-id}}",
								"transactions"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /statements",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const uuid = require('uuid'); ",
									"",
									"pm.environment.set(\"interactionId\", uuid.v4());"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"followOriginalHttpMethod": false
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-fapi-financial-id",
								"value": "{{obParticipantId}}"
							},
							{
								"key": "x-fapi-interaction-id",
								"value": "{{interactionId}}"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token-from-auth-code-grant-accounts}}"
							}
						],
						"url": {
							"raw": "{{rs}}/open-banking/v3.1/aisp/statements",
							"host": [
								"{{rs}}"
							],
							"path": [
								"open-banking",
								"v3.1",
								"aisp",
								"statements"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET    /balances",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const uuid = require('uuid'); ",
									"",
									"pm.environment.set(\"interactionId\", uuid.v4());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const contentType =\"application/json\";",
									"const method ='get';",
									"const endpoint= \"/balances\";",
									"const statuscode=200;",
									"const testCaseNo = \"CT-215\"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"followOriginalHttpMethod": false
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-fapi-financial-id",
								"value": "{{obParticipantId}}"
							},
							{
								"key": "x-fapi-interaction-id",
								"value": "{{interactionId}}"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token-from-auth-code-grant-accounts}}"
							}
						],
						"url": {
							"raw": "{{rs}}/open-banking/v3.1/aisp/balances",
							"host": [
								"{{rs}}"
							],
							"path": [
								"open-banking",
								"v3.1",
								"aisp",
								"balances"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET    /accounts/{AccountId}/balances",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const uuid = require('uuid'); ",
									"",
									"pm.environment.set(\"interactionId\", uuid.v4());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const contentType =\"application/json\";",
									"const method ='get';",
									"const endpoint=\"/accounts/{AccountId}/balances\";",
									"const statuscode=200;",
									"const testCaseNo = \"CT-214\"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"followOriginalHttpMethod": false
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "x-fapi-financial-id",
								"value": "{{obParticipantId}}"
							},
							{
								"key": "x-fapi-interaction-id",
								"value": "{{interactionId}}"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token-from-auth-code-grant-accounts}}"
							}
						],
						"url": {
							"raw": "{{rs}}/open-banking/v3.1/aisp/accounts/{{account-id}}/balances",
							"host": [
								"{{rs}}"
							],
							"path": [
								"open-banking",
								"v3.1",
								"aisp",
								"accounts",
								"{{account-id}}",
								"balances"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var tenant = 'ALLICA';",
					"",
					"const usersByBank = {",
					"    ALLICA: [{",
					"        psuIdentifiers: {",
					"            userId: \"100001000000000000000002\"",
					"",
					"        },",
					"",
					"        accountIds: [",
					"            \"100004000000000000000002\"",
					"            // \"100004000000000000000003\",",
					"            // \"100004000000000000000004\",",
					"            // \"100004000000000000000005\",",
					"        ]",
					"    }],",
					"",
					"}",
					"const userDetails = usersByBank[tenant][0];",
					"",
					"pm.environment.set('userId', userDetails.psuIdentifiers.userId);",
					"pm.environment.set('accountIds', JSON.stringify(userDetails.accountIds));",
					"pm.environment.set('accountIdsPayment', JSON.stringify(userDetails.accountIds[0]));",
					"",
					"// const mesgSigning = {",
					"//     header: {",
					"//         'content-type': 'application/json',",
					"//         'kid': 'R5TEKOohqs9BFiv4juOs17APwCo',",
					"//         'iss': '0015800001041RHAAY/HQuZPIt3ipkh33Uxytox1E',",
					"//         'tan': 'openbanking.org.uk',",
					"//         'key': '-----BEGIN PRIVATE KEY-----MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDO0ABGL32XIvzwQzMfZX6AVQeAfz+VQ42CGs8Cv0+ohpsGTz8AlQ7oM/kLj7sUE4Bvk+7Dc7R9FNeyy5srXfwx4X1YxkA82QAx8YaZI8Vr4ZJJknzgSUOX4MLpSWdB4Qs5ASKStDBAVmN7Jgunj+ucI3MGMN+AubaIdAVhEET2MOfbRcem1IY5kmvNEzg53ZN78ER4z3E6zbZLqYIKJD+UVC1h7gEiZStULjXOd8XmDSAuUeii2GQlkS3th1ol5YOm2oMeLpVblDumhANd29tjc5uGxVRP6tpz9eHnQPaCj71j+qLLlhwRJiklCnvMkFUV5HP26VWeX6lSVcIpsQIZAgMBAAECggEAUy7mbVR8t2WjRyBAV8iC8StCMTT9ZhQdvs75pKk+aRJ7GDaXqKxLqqn86eGN5a1SY46k4oiPeCACAjBS4UaUQZvoxuQ2wkKmCXCUKtRwe8vnAyCgibXuMhB9VUfo+F6EHRGPzmIbZkVZDhdnaKZCpjK7+Sl/PE92U7wWzcu1cS/RHOyHqLI6Yi7ZJkAxQqTUiSiYSJVwTu9tLVm5EbYmTF48V/CBnegIVVYyfc8/6Hev4e8V/feT9of8PaJGWLKT2/rngUjefcPu7DnOsGZSmpCY9iYBY2mJZorlFIp0TGBaSjLB58kxIVE8bPUmlnYpArxnBtVVTX8qXvRRZqDcAQKBgQD04XMsG+L2F4Ta79TNoUmDWI37ocO+7HSt1aGrWewvrsXRrqgp9ba6SxwUabStSPnAC5R4GPNc5CZFfze4ZuEczkcCMJos3GhCQ2/NQnqwE7J7fZBumtM9Xc/i9AMrtiMu7L+LWExPlf6dwx7iHH3HAhuZPpMQZueG1VhsAY6ZCQKBgQDYNAm5tvo8GoE4FrlVDCCKcoD1nm3kdBwA9MJlYL8D/DLUELDjE7nNSHujzVITBbuUGM4k+LWJ9E6to9s1VbvKsjUmX9z53+BpG9OyjOszidaIx2kIu77XRzV/2V+8b8SsgiL3fl5NChZlaG5m11baSS9khFFV5K6tRF0hEEK0kQKBgBzyZY3qQfr7Lr4+qXYhQbJgDnCXX686/lPqM/EwcQX17/ZoYgKLxCzjYg9bq3rsbHFyLPvBX0s0wP1oG2sV5jhkfepZWnBBIaXrmNS3rg8QVQHaBu+8J4pSg5d9Zr6NCj2qyL2tE2A5B98YSJdL7OZQbni/99xxfZ7nq0shJ/0ZAoGALFWndOTXtYF95AGM6aq99YX7eeKOCF3i7DNEtcM8CFYsGh5+F2KRJE5rxDAzV2FCkODxTNWPbIWjqKnEJtC43Jzkl0TrLHZDL2qcY63QAVaPnqa9nCPbw4t/pgLuRdbpjrJ09yl7rvKVmx/qG76mucZuKH+VqjZlt3QgYMpT03ECgYEAnp+T1neN7D0s/G/eG30WFxq0H2SskETJABm4e1Ol6vOfnlvHlZSnYgxGqV7z2QzC3APwHNcGK8GURvzgMpzbYhTkQUCPehbLi941KRf7BDKMVYem1yTJ0yUT/TNzmXcxnsVy/36T3mS/AZp4iMlw45coQmKc3skM9S6Oe7a+XyQ=-----END PRIVATE KEY-----'",
					"//     }",
					"// }",
					"const msgSign = {",
					"    header: {",
					"        'content-type': 'application/json',",
					"        'kid': 'suvAuFTM6F4xzZKbudVO1oGGDnY',",
					"        'iss': '0015800001041RHAAY/HQuZPIt3ipkh33Uxytox1E',",
					"        'tan': 'openbanking.org.uk',",
					"        'key': '-----BEGIN PRIVATE KEY-----MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCE4aF6ip6TeGPaBHmYmYWGh+pzfBDQNM1lQUl+nKjrUfY4S+udVccS3rSQECl+ViSsJBZLJkWnAXYctnJ+MYr4PAMjXku07AXyvegB3BfN6jEUcgJI5ttS8R+Oum6sLStbhh3o97HVj+sipzPtaA+Y360+dEV1HqxcToD5qpAuNABIgaRfhoHA5hIHGE971CJbBIUetYQ0Kd7k5VUzxfqwpCsBPlKoV8uhYd9UBVjBALFB6/qib5LnPZiIw7a7LnF8tlxhaIFCQZsjjiDOmXngeXmp9QGpqQxcSsytLXU/LmZfHF10hGT2B7ktiBqLLZDc4T435TvNH5pcJ3meGga3AgMBAAECggEAEVCDJYAFfKq9vA1EON2cN/Ti2ExstmyC7PQuWuiX3B3QavJ9j4E7UNqjBXiNp5Aa9DE5lG42ujWnCcO+NHJJLOJI+GVTkQ4GEmSrY/6lPWgMICFg6dXm8y5HEeZ6AEZcdW8K263WxsCbf2bxDbi2+5D9tnsZB9NI2zhBdwbCBbsB05OxHlOG+MTdElTH/TEX2TRhyP+FDizTDetYz1tGPQHXfzSOnZu1f+W28oYRscnUKe/alkRgM8ZEZKgchH12s7/skBgV5WXZiV24DsMDeRGsy3lgsmrfXqKhNJYRBu02t8BUszCiGN2OHbINmMfZkJ5fg7MkltZO3F876dz9YQKBgQC5ClGCJj/FYh7mp0OISAw/lPs4Snz/VuVlzku4oX6jy5Ksc9u5d3HGUAG+ymbILPzY0OFmAtsU8b11NXr7kkua1Hi480oQVu6OnM4/zp7p4fOWX/D8q81mO8pgzGt0KO64yTutCcMrMZckzgeihgWeVJj626wydp5mIlBhYVzmlwKBgQC31srNEdm17lWOaruSXcNT8qb03HSnaJSVTjpRjzu8JzaP+7gDFaNzXXr2XauwUISiQ0ONvV1ZCUHWherZRRik06kdyUN6yFjpYqIJqoX8FCIIukOwOBLnx37447uGiSIs0Idil7ZZkwu/fUe9tbM3ZL6sbp/xhU3QsUVkMw8E4QKBgQCWvbYq7Zfz53w+8LIOOotn3KlPcTclGBgm+IktLrqpGvUw8e1kyM5x/Ml/MQnMNwIAayHD5b2t8UUjT98RRFu9FSwHl4KVjwwmN825o0xIQh8bOKtsW1Un3LuAYeeDqLjY5m5sB9DrxilX/VOw7bd0BXzel8hPD9z4XSnYOuXgnwKBgQCjwGeUkrniHBGJcfjyPyKlvBaLNXOTSsxO0geQbo0+447uYcFevf+B21qT6Ivt2UrLXi7mKi7kCCLk+xRdw/ZXm1Ggfo3k6GCKQpkjEwmVqDlInOF+LfRpEIJBIFkBVVVjpbtyTsDWuOxV/TnR+e9RACP3Y/KEJ8FQixbMUc6nAQKBgEQ13x3jWfeNkwWS1V2g3k1Dv3X8LH1vUyHisIvuukCAHfCo3d51gk12li9EnjsnxwoYDH1Rw9Ybmxx12f/HJrL5Lu+0DfZAvx/qBBnyeKVD3WMRS0vOmPTZdOhphwFb7vHsxLx4ei1uSlC2As3nH3zJwnUo5i0Sz7RQyQJAAMmD-----END PRIVATE KEY-----'",
					"    }",
					"}",
					"pm.environment.set('msgSign', JSON.stringify(msgSign));",
					"",
					"// Used by the message signing POSTs",
					"pm.environment.set(\"randomString-1\", pm.variables.replaceIn(\"{{$randomPassword}}\"));",
					"pm.environment.set(\"randomString-2\", pm.variables.replaceIn(\"{{$randomPassword}}\"));",
					"pm.environment.set(\"randomPrice\", pm.variables.replaceIn(\"{{$randomPrice}}\"));",
					"pm.environment.set(\"randomBankAccount\", pm.variables.replaceIn(\"{{$randomBankAccount}}\"));",
					"pm.environment.set(\"randomFullName\", pm.variables.replaceIn(\"{{$randomFullName}}\"));",
					"pm.environment.set(\"randomCompanyName\", pm.variables.replaceIn(\"{{$randomCompanyName}}\"));",
					"pm.environment.set(\"randomLoremWords\", pm.variables.replaceIn(\"{{$randomLoremWords}}\"));",
					"pm.environment.set(\"randomTransactionType\", pm.variables.replaceIn(\"{{$randomTransactionType}}\"));",
					"pm.environment.set(\"randomLoremWords\", pm.variables.replaceIn(\"{{$randomLoremWords}}\"));",
					"pm.environment.set(\"randomCreditCardMask\", pm.variables.replaceIn(\"{{$randomCreditCardMask}}\"));",
					"pm.environment.set(\"randomDateFuture\", (new Date(+(new Date()) + Math.floor(Math.random() * 10000000000))).toISOString());",
					"",
					"",
					"// pm.environment.set('mesgSigning', JSON.stringify(mesgSigning));",
					"",
					"var validateResponseHeaders = () => {",
					"    /*validate response header*/",
					"    pm.test(\"Validate response header \", function () {",
					"        pm.response.to.have.header(\"Date\");",
					"        pm.response.to.have.header(\"Content-Type\");",
					"        pm.response.to.have.header(\"Content-Length\");",
					"        pm.response.to.have.header(\"Connection\");",
					"        pm.response.to.have.header(\"x-fapi-interaction-id\");",
					"        pm.response.to.have.header(\"o3-interaction-id\");",
					"        pm.response.to.have.header(\"ETag\");",
					"        pm.response.to.be.header(\"Content-Type\", \"application/json; charset=utf-8\");",
					"        pm.expect(pm.response.headers.get('Content-Length')).to.be.a(\"string\");",
					"        pm.expect(pm.response.headers.get('x-fapi-interaction-id')).to.be.a(\"string\");",
					"        pm.expect(pm.response.headers.get('o3-interaction-id')).to.be.a(\"string\");",
					"        pm.response.to.be.header(\"Connection\", \"keep-alive\");",
					"        pm.expect(pm.response.headers.get('Date')).to.be.a(\"string\");",
					"    })",
					"}",
					"",
					"var validateRequestHeaders = () => {",
					"    /*validate request header*/",
					"    pm.test(\"Validate request header \", function () {",
					"        pm.request.to.have.header(\"Accept\");",
					"        pm.request.to.have.header(\"Accept-Encoding\");",
					"        pm.request.to.have.header(\"Connection\")",
					"        pm.request.to.have.header(\"Host\");",
					"        pm.request.to.have.header(\"Content-Type\");",
					"        pm.request.to.have.header(\"x-fapi-interaction-id\");",
					"        pm.request.to.have.header(\"x-fapi-financial-id\");",
					"        pm.request.to.have.header(\"Authorization\");",
					"        pm.request.to.be.header(\"Accept\", \"*/*\");",
					"        pm.request.to.be.header(\"Accept-Encoding\", \"gzip, deflate, br\");",
					"        pm.request.to.be.header(\"Connection\", \"keep-alive\");",
					"        pm.request.to.be.header(\"Content-Type\", \"application/json\");",
					"        pm.expect(pm.request.headers.get('x-fapi-interaction-id')).not.to.be.null;",
					"        pm.expect(pm.request.headers.get('x-fapi-customer-ip-address')).not.to.be.null;",
					"        pm.expect(pm.request.headers.get('x-fapi-financial-id')).not.to.be.null;",
					"        pm.expect(pm.request.headers.get('o3-interaction-id')).not.to.be.null;",
					"        pm.expect(pm.request.headers.get('Authorization')).not.to.be.null;",
					"    });",
					"}",
					"pm.environment.set(\"validateResponseHeaders\", validateResponseHeaders.toString());",
					"pm.environment.set(\"validateRequestHeaders\", validateRequestHeaders.toString());",
					"",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}